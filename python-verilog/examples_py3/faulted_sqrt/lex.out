module module 2 6
sqrt_u40_5 token 2 17
( ( 2 19
input input 2 25
clk token 2 29
, , 2 30
input input 2 35
rst_n token 2 41
, , 2 42
input input 2 47
en token 2 50
, , 2 51
input input 2 56
vldin token 2 62
, , 2 63
input input 2 69
[ [ 2 71
39 number 2 73
: : 2 74
0 number 2 75
] ] 2 76
ain token 2 80
, , 2 81
output output 2 88
reg reg 2 92
[ [ 2 94
19 number 2 96
: : 2 97
0 number 2 98
] ] 2 99
out token 2 103
, , 2 104
output output 2 110
reg reg 2 114
vldout token 2 121
) ) 2 122
; ; 2 123
reg reg 4 3
vld20 token 4 9
; ; 4 10
always always 5 6
@ @ 5 8
( ( 5 9
posedge posedge 5 16
clk token 5 20
) ) 5 21
if if 5 24
( ( 5 26
en token 5 28
) ) 5 29
vld20 token 5 35
<= sm_eq 5 38
vldin token 5 44
; ; 5 45
reg reg 6 3
[ [ 6 5
39 number 6 7
: : 6 8
0 number 6 9
] ] 6 10
datain20 token 6 19
; ; 6 20
always always 7 6
@ @ 7 8
( ( 7 9
posedge posedge 7 16
clk token 7 20
) ) 7 21
if if 7 24
( ( 7 26
en token 7 28
) ) 7 29
datain20 token 7 38
<= sm_eq 7 41
ain token 7 45
; ; 7 46
wire wire 8 4
[ [ 8 6
39 number 8 8
: : 8 9
0 number 8 10
] ] 8 11
Y20 token 8 15
= = 8 17
0 number 8 19
; ; 8 20
wire wire 9 4
[ [ 9 6
39 number 9 8
: : 9 9
0 number 9 10
] ] 9 11
YY20 token 9 16
= = 9 18
0 number 9 20
; ; 9 21
wire wire 10 4
[ [ 10 6
39 number 10 8
: : 10 9
0 number 10 10
] ] 10 11
Decra19 token 10 19
= = 10 21
( ( 10 23
40'b1 bin 10 28
<< shift_left 10 30
( ( 10 31
2 number 10 32
* * 10 33
19 number 10 35
) ) 10 36
) ) 10 37
; ; 10 38
wire wire 11 4
[ [ 11 6
39 number 11 8
: : 11 9
0 number 11 10
] ] 11 11
Decrb19 token 11 19
= = 11 21
( ( 11 23
Y20 token 11 26
<< shift_left 11 28
( ( 11 29
19 number 11 31
+ + 11 32
1 number 11 33
) ) 11 34
) ) 11 35
; ; 11 36
wire wire 12 4
[ [ 12 6
39 number 12 8
: : 12 9
0 number 12 10
] ] 12 11
Decr19 token 12 18
= = 12 20
Decra19 token 12 28
+ + 12 29
Decrb19 token 12 36
; ; 12 37
wire wire 13 4
[ [ 13 6
39 number 13 8
: : 13 9
0 number 13 10
] ] 13 11
YY19_1 token 13 18
= = 13 20
YY20 token 13 25
+ + 13 26
Decr19 token 13 32
; ; 13 33
wire wire 14 4
[ [ 14 6
39 number 14 8
: : 14 9
0 number 14 10
] ] 14 11
Base19 token 14 18
= = 14 20
40'b1 bin 14 27
<< shift_left 14 29
19 number 14 31
; ; 14 32
wire wire 15 4
smaller19 token 15 14
= = 15 16
( ( 15 19
YY19_1 token 15 25
<= sm_eq 15 27
datain20 token 15 35
) ) 15 36
; ; 15 37
wire wire 16 4
[ [ 16 6
39 number 16 8
: : 16 9
0 number 16 10
] ] 16 11
YY19 token 16 16
= = 16 18
smaller19 token 16 28
? ? 16 30
YY19_1 token 16 37
: : 16 39
YY20 token 16 44
; ; 16 45
wire wire 17 4
[ [ 17 6
19 number 17 8
: : 17 9
0 number 17 10
] ] 17 11
Y19 token 17 15
= = 17 17
smaller19 token 17 27
? ? 17 29
Y20 token 17 33
+ + 17 34
Base19 token 17 40
: : 17 42
Y20 token 17 46
; ; 17 47
wire wire 18 4
[ [ 18 6
39 number 18 8
: : 18 9
0 number 18 10
] ] 18 11
datain19 token 18 20
= = 18 22
datain20 token 18 31
; ; 18 32
wire wire 19 4
vld19 token 19 10
= = 19 12
vld20 token 19 18
; ; 19 19
wire wire 21 4
[ [ 21 6
39 number 21 8
: : 21 9
0 number 21 10
] ] 21 11
Decra18 token 21 19
= = 21 21
( ( 21 23
40'b1 bin 21 28
<< shift_left 21 30
( ( 21 31
2 number 21 32
* * 21 33
18 number 21 35
) ) 21 36
) ) 21 37
; ; 21 38
wire wire 22 4
[ [ 22 6
39 number 22 8
: : 22 9
0 number 22 10
] ] 22 11
Decrb18 token 22 19
= = 22 21
( ( 22 23
Y19 token 22 26
<< shift_left 22 28
( ( 22 29
18 number 22 31
+ + 22 32
1 number 22 33
) ) 22 34
) ) 22 35
; ; 22 36
wire wire 23 4
[ [ 23 6
39 number 23 8
: : 23 9
0 number 23 10
] ] 23 11
Decr18 token 23 18
= = 23 20
Decra18 token 23 28
+ + 23 29
Decrb18 token 23 36
; ; 23 37
wire wire 24 4
[ [ 24 6
39 number 24 8
: : 24 9
0 number 24 10
] ] 24 11
YY18_1 token 24 18
= = 24 20
YY19 token 24 25
+ + 24 26
Decr18 token 24 32
; ; 24 33
wire wire 25 4
[ [ 25 6
39 number 25 8
: : 25 9
0 number 25 10
] ] 25 11
Base18 token 25 18
= = 25 20
40'b1 bin 25 27
<< shift_left 25 29
18 number 25 31
; ; 25 32
wire wire 26 4
smaller18 token 26 14
= = 26 16
( ( 26 19
YY18_1 token 26 25
<= sm_eq 26 27
datain19 token 26 35
) ) 26 36
; ; 26 37
wire wire 27 4
[ [ 27 6
39 number 27 8
: : 27 9
0 number 27 10
] ] 27 11
YY18 token 27 16
= = 27 18
smaller18 token 27 28
? ? 27 30
YY18_1 token 27 37
: : 27 39
YY19 token 27 44
; ; 27 45
wire wire 28 4
[ [ 28 6
19 number 28 8
: : 28 9
0 number 28 10
] ] 28 11
Y18 token 28 15
= = 28 17
smaller18 token 28 27
? ? 28 29
Y19 token 28 33
+ + 28 34
Base18 token 28 40
: : 28 42
Y19 token 28 46
; ; 28 47
wire wire 29 4
[ [ 29 6
39 number 29 8
: : 29 9
0 number 29 10
] ] 29 11
datain18 token 29 20
= = 29 22
datain19 token 29 31
; ; 29 32
wire wire 30 4
vld18 token 30 10
= = 30 12
vld19 token 30 18
; ; 30 19
wire wire 32 4
[ [ 32 6
39 number 32 8
: : 32 9
0 number 32 10
] ] 32 11
Decra17 token 32 19
= = 32 21
( ( 32 23
40'b1 bin 32 28
<< shift_left 32 30
( ( 32 31
2 number 32 32
* * 32 33
17 number 32 35
) ) 32 36
) ) 32 37
; ; 32 38
wire wire 33 4
[ [ 33 6
39 number 33 8
: : 33 9
0 number 33 10
] ] 33 11
Decrb17 token 33 19
= = 33 21
( ( 33 23
Y18 token 33 26
<< shift_left 33 28
( ( 33 29
17 number 33 31
+ + 33 32
1 number 33 33
) ) 33 34
) ) 33 35
; ; 33 36
wire wire 34 4
[ [ 34 6
39 number 34 8
: : 34 9
0 number 34 10
] ] 34 11
Decr17 token 34 18
= = 34 20
Decra17 token 34 28
+ + 34 29
Decrb17 token 34 36
; ; 34 37
wire wire 35 4
[ [ 35 6
39 number 35 8
: : 35 9
0 number 35 10
] ] 35 11
YY17_1 token 35 18
= = 35 20
YY18 token 35 25
+ + 35 26
Decr17 token 35 32
; ; 35 33
wire wire 36 4
[ [ 36 6
39 number 36 8
: : 36 9
0 number 36 10
] ] 36 11
Base17 token 36 18
= = 36 20
40'b1 bin 36 27
<< shift_left 36 29
17 number 36 31
; ; 36 32
wire wire 37 4
smaller17 token 37 14
= = 37 16
( ( 37 19
YY17_1 token 37 25
<= sm_eq 37 27
datain18 token 37 35
) ) 37 36
; ; 37 37
wire wire 38 4
[ [ 38 6
39 number 38 8
: : 38 9
0 number 38 10
] ] 38 11
YY17 token 38 16
= = 38 18
smaller17 token 38 28
? ? 38 30
YY17_1 token 38 37
: : 38 39
YY18 token 38 44
; ; 38 45
wire wire 39 4
[ [ 39 6
19 number 39 8
: : 39 9
0 number 39 10
] ] 39 11
Y17 token 39 15
= = 39 17
smaller17 token 39 27
? ? 39 29
Y18 token 39 33
+ + 39 34
Base17 token 39 40
: : 39 42
Y18 token 39 46
; ; 39 47
wire wire 40 4
[ [ 40 6
39 number 40 8
: : 40 9
0 number 40 10
] ] 40 11
datain17 token 40 20
= = 40 22
datain18 token 40 31
; ; 40 32
wire wire 41 4
vld17 token 41 10
= = 41 12
vld18 token 41 18
; ; 41 19
wire wire 43 4
[ [ 43 6
39 number 43 8
: : 43 9
0 number 43 10
] ] 43 11
Decra16 token 43 19
= = 43 21
( ( 43 23
40'b1 bin 43 28
<< shift_left 43 30
( ( 43 31
2 number 43 32
* * 43 33
16 number 43 35
) ) 43 36
) ) 43 37
; ; 43 38
wire wire 44 4
[ [ 44 6
39 number 44 8
: : 44 9
0 number 44 10
] ] 44 11
Decrb16 token 44 19
= = 44 21
( ( 44 23
Y17 token 44 26
<< shift_left 44 28
( ( 44 29
16 number 44 31
+ + 44 32
1 number 44 33
) ) 44 34
) ) 44 35
; ; 44 36
wire wire 45 4
[ [ 45 6
39 number 45 8
: : 45 9
0 number 45 10
] ] 45 11
Decr16 token 45 18
= = 45 20
Decra16 token 45 28
+ + 45 29
Decrb16 token 45 36
; ; 45 37
wire wire 46 4
[ [ 46 6
39 number 46 8
: : 46 9
0 number 46 10
] ] 46 11
YY16_1 token 46 18
= = 46 20
YY17 token 46 25
+ + 46 26
Decr16 token 46 32
; ; 46 33
wire wire 47 4
[ [ 47 6
39 number 47 8
: : 47 9
0 number 47 10
] ] 47 11
Base16 token 47 18
= = 47 20
40'b1 bin 47 27
<< shift_left 47 29
16 number 47 31
; ; 47 32
wire wire 48 4
smaller16 token 48 14
= = 48 16
( ( 48 19
YY16_1 token 48 25
<= sm_eq 48 27
datain17 token 48 35
) ) 48 36
; ; 48 37
wire wire 49 4
[ [ 49 6
39 number 49 8
: : 49 9
0 number 49 10
] ] 49 11
YY16 token 49 16
= = 49 18
smaller16 token 49 28
? ? 49 30
YY16_1 token 49 37
: : 49 39
YY17 token 49 44
; ; 49 45
wire wire 50 4
[ [ 50 6
19 number 50 8
: : 50 9
0 number 50 10
] ] 50 11
Y16 token 50 15
= = 50 17
smaller16 token 50 27
? ? 50 29
Y17 token 50 33
+ + 50 34
Base16 token 50 40
: : 50 42
Y17 token 50 46
; ; 50 47
wire wire 51 4
[ [ 51 6
39 number 51 8
: : 51 9
0 number 51 10
] ] 51 11
datain16 token 51 20
= = 51 22
datain17 token 51 31
; ; 51 32
wire wire 52 4
vld16 token 52 10
= = 52 12
vld17 token 52 18
; ; 52 19
wire wire 54 4
[ [ 54 6
39 number 54 8
: : 54 9
0 number 54 10
] ] 54 11
Decra15 token 54 19
= = 54 21
( ( 54 23
40'b1 bin 54 28
<< shift_left 54 30
( ( 54 31
2 number 54 32
* * 54 33
15 number 54 35
) ) 54 36
) ) 54 37
; ; 54 38
wire wire 55 4
[ [ 55 6
39 number 55 8
: : 55 9
0 number 55 10
] ] 55 11
Decrb15 token 55 19
= = 55 21
( ( 55 23
Y16 token 55 26
<< shift_left 55 28
( ( 55 29
15 number 55 31
+ + 55 32
1 number 55 33
) ) 55 34
) ) 55 35
; ; 55 36
wire wire 56 4
[ [ 56 6
39 number 56 8
: : 56 9
0 number 56 10
] ] 56 11
Decr15 token 56 18
= = 56 20
Decra15 token 56 28
+ + 56 29
Decrb15 token 56 36
; ; 56 37
wire wire 57 4
[ [ 57 6
39 number 57 8
: : 57 9
0 number 57 10
] ] 57 11
YY15_1 token 57 18
= = 57 20
YY16 token 57 25
+ + 57 26
Decr15 token 57 32
; ; 57 33
wire wire 58 4
[ [ 58 6
39 number 58 8
: : 58 9
0 number 58 10
] ] 58 11
Base15 token 58 18
= = 58 20
40'b1 bin 58 27
<< shift_left 58 29
15 number 58 31
; ; 58 32
wire wire 59 4
smaller15 token 59 14
= = 59 16
( ( 59 19
YY15_1 token 59 25
<= sm_eq 59 27
datain16 token 59 35
) ) 59 36
; ; 59 37
wire wire 60 4
[ [ 60 6
39 number 60 8
: : 60 9
0 number 60 10
] ] 60 11
pre_YY15 token 60 20
= = 60 22
smaller15 token 60 32
? ? 60 34
YY15_1 token 60 41
: : 60 43
YY16 token 60 48
; ; 60 49
wire wire 61 4
[ [ 61 6
19 number 61 8
: : 61 9
0 number 61 10
] ] 61 11
pre_Y15 token 61 19
= = 61 21
smaller15 token 61 31
? ? 61 33
Y16 token 61 37
+ + 61 38
Base15 token 61 44
: : 61 46
Y16 token 61 50
; ; 61 51
reg reg 62 3
[ [ 62 5
39 number 62 7
: : 62 8
0 number 62 9
] ] 62 10
YY15 token 62 15
; ; 62 16
always always 63 6
@ @ 63 8
( ( 63 9
posedge posedge 63 16
clk token 63 20
) ) 63 21
if if 63 24
( ( 63 26
en token 63 28
) ) 63 29
YY15 token 63 34
<= sm_eq 63 37
pre_YY15 token 63 46
; ; 63 47
reg reg 64 3
[ [ 64 5
39 number 64 7
: : 64 8
0 number 64 9
] ] 64 10
Y15 token 64 14
; ; 64 15
always always 65 6
@ @ 65 8
( ( 65 9
posedge posedge 65 16
clk token 65 20
) ) 65 21
if if 65 24
( ( 65 26
en token 65 28
) ) 65 29
Y15 token 65 33
<= sm_eq 65 36
pre_Y15 token 65 44
; ; 65 45
reg reg 66 3
[ [ 66 5
39 number 66 7
: : 66 8
0 number 66 9
] ] 66 10
datain15 token 66 19
; ; 66 20
always always 67 6
@ @ 67 8
( ( 67 9
posedge posedge 67 16
clk token 67 20
) ) 67 21
if if 67 24
( ( 67 26
en token 67 28
) ) 67 29
datain15 token 67 38
<= sm_eq 67 41
datain16 token 67 50
; ; 67 51
reg reg 68 3
vld15 token 68 9
; ; 68 10
always always 69 6
@ @ 69 8
( ( 69 9
posedge posedge 69 16
clk token 69 20
) ) 69 21
if if 69 24
( ( 69 26
en token 69 28
) ) 69 29
vld15 token 69 35
<= sm_eq 69 38
vld16 token 69 44
; ; 69 45
wire wire 71 4
[ [ 71 6
39 number 71 8
: : 71 9
0 number 71 10
] ] 71 11
Decra14 token 71 19
= = 71 21
( ( 71 23
40'b1 bin 71 28
<< shift_left 71 30
( ( 71 31
2 number 71 32
* * 71 33
14 number 71 35
) ) 71 36
) ) 71 37
; ; 71 38
wire wire 72 4
[ [ 72 6
39 number 72 8
: : 72 9
0 number 72 10
] ] 72 11
Decrb14 token 72 19
= = 72 21
( ( 72 23
Y15 token 72 26
<< shift_left 72 28
( ( 72 29
14 number 72 31
+ + 72 32
1 number 72 33
) ) 72 34
) ) 72 35
; ; 72 36
wire wire 73 4
[ [ 73 6
39 number 73 8
: : 73 9
0 number 73 10
] ] 73 11
Decr14 token 73 18
= = 73 20
Decra14 token 73 28
+ + 73 29
Decrb14 token 73 36
; ; 73 37
wire wire 74 4
[ [ 74 6
39 number 74 8
: : 74 9
0 number 74 10
] ] 74 11
YY14_1 token 74 18
= = 74 20
YY15 token 74 25
+ + 74 26
Decr14 token 74 32
; ; 74 33
wire wire 75 4
[ [ 75 6
39 number 75 8
: : 75 9
0 number 75 10
] ] 75 11
Base14 token 75 18
= = 75 20
40'b1 bin 75 27
<< shift_left 75 29
14 number 75 31
; ; 75 32
wire wire 76 4
smaller14 token 76 14
= = 76 16
( ( 76 19
YY14_1 token 76 25
<= sm_eq 76 27
datain15 token 76 35
) ) 76 36
; ; 76 37
wire wire 77 4
[ [ 77 6
39 number 77 8
: : 77 9
0 number 77 10
] ] 77 11
YY14 token 77 16
= = 77 18
smaller14 token 77 28
? ? 77 30
YY14_1 token 77 37
: : 77 39
YY15 token 77 44
; ; 77 45
wire wire 78 4
[ [ 78 6
19 number 78 8
: : 78 9
0 number 78 10
] ] 78 11
Y14 token 78 15
= = 78 17
smaller14 token 78 27
? ? 78 29
Y15 token 78 33
+ + 78 34
Base14 token 78 40
: : 78 42
Y15 token 78 46
; ; 78 47
wire wire 79 4
[ [ 79 6
39 number 79 8
: : 79 9
0 number 79 10
] ] 79 11
datain14 token 79 20
= = 79 22
datain15 token 79 31
; ; 79 32
wire wire 80 4
vld14 token 80 10
= = 80 12
vld15 token 80 18
; ; 80 19
wire wire 82 4
[ [ 82 6
39 number 82 8
: : 82 9
0 number 82 10
] ] 82 11
Decra13 token 82 19
= = 82 21
( ( 82 23
40'b1 bin 82 28
<< shift_left 82 30
( ( 82 31
2 number 82 32
* * 82 33
13 number 82 35
) ) 82 36
) ) 82 37
; ; 82 38
wire wire 83 4
[ [ 83 6
39 number 83 8
: : 83 9
0 number 83 10
] ] 83 11
Decrb13 token 83 19
= = 83 21
( ( 83 23
Y14 token 83 26
<< shift_left 83 28
( ( 83 29
13 number 83 31
+ + 83 32
1 number 83 33
) ) 83 34
) ) 83 35
; ; 83 36
wire wire 84 4
[ [ 84 6
39 number 84 8
: : 84 9
0 number 84 10
] ] 84 11
Decr13 token 84 18
= = 84 20
Decra13 token 84 28
+ + 84 29
Decrb13 token 84 36
; ; 84 37
wire wire 85 4
[ [ 85 6
39 number 85 8
: : 85 9
0 number 85 10
] ] 85 11
YY13_1 token 85 18
= = 85 20
YY14 token 85 25
+ + 85 26
Decr13 token 85 32
; ; 85 33
wire wire 86 4
[ [ 86 6
39 number 86 8
: : 86 9
0 number 86 10
] ] 86 11
Base13 token 86 18
= = 86 20
40'b1 bin 86 27
<< shift_left 86 29
13 number 86 31
; ; 86 32
wire wire 87 4
smaller13 token 87 14
= = 87 16
( ( 87 19
YY13_1 token 87 25
<= sm_eq 87 27
datain14 token 87 35
) ) 87 36
; ; 87 37
wire wire 88 4
[ [ 88 6
39 number 88 8
: : 88 9
0 number 88 10
] ] 88 11
YY13 token 88 16
= = 88 18
smaller13 token 88 28
? ? 88 30
YY13_1 token 88 37
: : 88 39
YY14 token 88 44
; ; 88 45
wire wire 89 4
[ [ 89 6
19 number 89 8
: : 89 9
0 number 89 10
] ] 89 11
Y13 token 89 15
= = 89 17
smaller13 token 89 27
? ? 89 29
Y14 token 89 33
+ + 89 34
Base13 token 89 40
: : 89 42
Y14 token 89 46
; ; 89 47
wire wire 90 4
[ [ 90 6
39 number 90 8
: : 90 9
0 number 90 10
] ] 90 11
datain13 token 90 20
= = 90 22
datain14 token 90 31
; ; 90 32
wire wire 91 4
vld13 token 91 10
= = 91 12
vld14 token 91 18
; ; 91 19
wire wire 93 4
[ [ 93 6
39 number 93 8
: : 93 9
0 number 93 10
] ] 93 11
Decra12 token 93 19
= = 93 21
( ( 93 23
40'b1 bin 93 28
<< shift_left 93 30
( ( 93 31
2 number 93 32
* * 93 33
12 number 93 35
) ) 93 36
) ) 93 37
; ; 93 38
wire wire 94 4
[ [ 94 6
39 number 94 8
: : 94 9
0 number 94 10
] ] 94 11
Decrb12 token 94 19
= = 94 21
( ( 94 23
Y13 token 94 26
<< shift_left 94 28
( ( 94 29
12 number 94 31
+ + 94 32
1 number 94 33
) ) 94 34
) ) 94 35
; ; 94 36
wire wire 95 4
[ [ 95 6
39 number 95 8
: : 95 9
0 number 95 10
] ] 95 11
Decr12 token 95 18
= = 95 20
Decra12 token 95 28
+ + 95 29
Decrb12 token 95 36
; ; 95 37
wire wire 96 4
[ [ 96 6
39 number 96 8
: : 96 9
0 number 96 10
] ] 96 11
YY12_1 token 96 18
= = 96 20
YY13 token 96 25
+ + 96 26
Decr12 token 96 32
; ; 96 33
wire wire 97 4
[ [ 97 6
39 number 97 8
: : 97 9
0 number 97 10
] ] 97 11
Base12 token 97 18
= = 97 20
40'b1 bin 97 27
<< shift_left 97 29
12 number 97 31
; ; 97 32
wire wire 98 4
smaller12 token 98 14
= = 98 16
( ( 98 19
YY12_1 token 98 25
<= sm_eq 98 27
datain13 token 98 35
) ) 98 36
; ; 98 37
wire wire 99 4
[ [ 99 6
39 number 99 8
: : 99 9
0 number 99 10
] ] 99 11
YY12 token 99 16
= = 99 18
smaller12 token 99 28
? ? 99 30
YY12_1 token 99 37
: : 99 39
YY13 token 99 44
; ; 99 45
wire wire 100 4
[ [ 100 6
19 number 100 8
: : 100 9
0 number 100 10
] ] 100 11
Y12 token 100 15
= = 100 17
smaller12 token 100 27
? ? 100 29
Y13 token 100 33
+ + 100 34
Base12 token 100 40
: : 100 42
Y13 token 100 46
; ; 100 47
wire wire 101 4
[ [ 101 6
39 number 101 8
: : 101 9
0 number 101 10
] ] 101 11
datain12 token 101 20
= = 101 22
datain13 token 101 31
; ; 101 32
wire wire 102 4
vld12 token 102 10
= = 102 12
vld13 token 102 18
; ; 102 19
wire wire 104 4
[ [ 104 6
39 number 104 8
: : 104 9
0 number 104 10
] ] 104 11
Decra11 token 104 19
= = 104 21
( ( 104 23
40'b1 bin 104 28
<< shift_left 104 30
( ( 104 31
2 number 104 32
* * 104 33
11 number 104 35
) ) 104 36
) ) 104 37
; ; 104 38
wire wire 105 4
[ [ 105 6
39 number 105 8
: : 105 9
0 number 105 10
] ] 105 11
Decrb11 token 105 19
= = 105 21
( ( 105 23
Y12 token 105 26
<< shift_left 105 28
( ( 105 29
11 number 105 31
+ + 105 32
1 number 105 33
) ) 105 34
) ) 105 35
; ; 105 36
wire wire 106 4
[ [ 106 6
39 number 106 8
: : 106 9
0 number 106 10
] ] 106 11
Decr11 token 106 18
= = 106 20
Decra11 token 106 28
+ + 106 29
Decrb11 token 106 36
; ; 106 37
wire wire 107 4
[ [ 107 6
39 number 107 8
: : 107 9
0 number 107 10
] ] 107 11
YY11_1 token 107 18
= = 107 20
YY12 token 107 25
+ + 107 26
Decr11 token 107 32
; ; 107 33
wire wire 108 4
[ [ 108 6
39 number 108 8
: : 108 9
0 number 108 10
] ] 108 11
Base11 token 108 18
= = 108 20
40'b1 bin 108 27
<< shift_left 108 29
11 number 108 31
; ; 108 32
wire wire 109 4
smaller11 token 109 14
= = 109 16
( ( 109 19
YY11_1 token 109 25
<= sm_eq 109 27
datain12 token 109 35
) ) 109 36
; ; 109 37
wire wire 110 4
[ [ 110 6
39 number 110 8
: : 110 9
0 number 110 10
] ] 110 11
YY11 token 110 16
= = 110 18
smaller11 token 110 28
? ? 110 30
YY11_1 token 110 37
: : 110 39
YY12 token 110 44
; ; 110 45
wire wire 111 4
[ [ 111 6
19 number 111 8
: : 111 9
0 number 111 10
] ] 111 11
Y11 token 111 15
= = 111 17
smaller11 token 111 27
? ? 111 29
Y12 token 111 33
+ + 111 34
Base11 token 111 40
: : 111 42
Y12 token 111 46
; ; 111 47
wire wire 112 4
[ [ 112 6
39 number 112 8
: : 112 9
0 number 112 10
] ] 112 11
datain11 token 112 20
= = 112 22
datain12 token 112 31
; ; 112 32
wire wire 113 4
vld11 token 113 10
= = 113 12
vld12 token 113 18
; ; 113 19
wire wire 115 4
[ [ 115 6
39 number 115 8
: : 115 9
0 number 115 10
] ] 115 11
Decra10 token 115 19
= = 115 21
( ( 115 23
40'b1 bin 115 28
<< shift_left 115 30
( ( 115 31
2 number 115 32
* * 115 33
10 number 115 35
) ) 115 36
) ) 115 37
; ; 115 38
wire wire 116 4
[ [ 116 6
39 number 116 8
: : 116 9
0 number 116 10
] ] 116 11
Decrb10 token 116 19
= = 116 21
( ( 116 23
Y11 token 116 26
<< shift_left 116 28
( ( 116 29
10 number 116 31
+ + 116 32
1 number 116 33
) ) 116 34
) ) 116 35
; ; 116 36
wire wire 117 4
[ [ 117 6
39 number 117 8
: : 117 9
0 number 117 10
] ] 117 11
Decr10 token 117 18
= = 117 20
Decra10 token 117 28
+ + 117 29
Decrb10 token 117 36
; ; 117 37
wire wire 118 4
[ [ 118 6
39 number 118 8
: : 118 9
0 number 118 10
] ] 118 11
YY10_1 token 118 18
= = 118 20
YY11 token 118 25
+ + 118 26
Decr10 token 118 32
; ; 118 33
wire wire 119 4
[ [ 119 6
39 number 119 8
: : 119 9
0 number 119 10
] ] 119 11
Base10 token 119 18
= = 119 20
40'b1 bin 119 27
<< shift_left 119 29
10 number 119 31
; ; 119 32
wire wire 120 4
smaller10 token 120 14
= = 120 16
( ( 120 19
YY10_1 token 120 25
<= sm_eq 120 27
datain11 token 120 35
) ) 120 36
; ; 120 37
wire wire 121 4
[ [ 121 6
39 number 121 8
: : 121 9
0 number 121 10
] ] 121 11
pre_YY10 token 121 20
= = 121 22
smaller10 token 121 32
? ? 121 34
YY10_1 token 121 41
: : 121 43
YY11 token 121 48
; ; 121 49
wire wire 122 4
[ [ 122 6
19 number 122 8
: : 122 9
0 number 122 10
] ] 122 11
pre_Y10 token 122 19
= = 122 21
smaller10 token 122 31
? ? 122 33
Y11 token 122 37
+ + 122 38
Base10 token 122 44
: : 122 46
Y11 token 122 50
; ; 122 51
reg reg 123 3
[ [ 123 5
39 number 123 7
: : 123 8
0 number 123 9
] ] 123 10
YY10 token 123 15
; ; 123 16
always always 124 6
@ @ 124 8
( ( 124 9
posedge posedge 124 16
clk token 124 20
) ) 124 21
if if 124 24
( ( 124 26
en token 124 28
) ) 124 29
YY10 token 124 34
<= sm_eq 124 37
pre_YY10 token 124 46
; ; 124 47
reg reg 125 3
[ [ 125 5
39 number 125 7
: : 125 8
0 number 125 9
] ] 125 10
Y10 token 125 14
; ; 125 15
always always 126 6
@ @ 126 8
( ( 126 9
posedge posedge 126 16
clk token 126 20
) ) 126 21
if if 126 24
( ( 126 26
en token 126 28
) ) 126 29
Y10 token 126 33
<= sm_eq 126 36
pre_Y10 token 126 44
; ; 126 45
reg reg 127 3
[ [ 127 5
39 number 127 7
: : 127 8
0 number 127 9
] ] 127 10
datain10 token 127 19
; ; 127 20
always always 128 6
@ @ 128 8
( ( 128 9
posedge posedge 128 16
clk token 128 20
) ) 128 21
if if 128 24
( ( 128 26
en token 128 28
) ) 128 29
datain10 token 128 38
<= sm_eq 128 41
datain11 token 128 50
; ; 128 51
reg reg 129 3
vld10 token 129 9
; ; 129 10
always always 130 6
@ @ 130 8
( ( 130 9
posedge posedge 130 16
clk token 130 20
) ) 130 21
if if 130 24
( ( 130 26
en token 130 28
) ) 130 29
vld10 token 130 35
<= sm_eq 130 38
vld11 token 130 44
; ; 130 45
wire wire 132 4
[ [ 132 6
39 number 132 8
: : 132 9
0 number 132 10
] ] 132 11
Decra9 token 132 18
= = 132 20
( ( 132 22
40'b1 bin 132 27
<< shift_left 132 29
( ( 132 30
2 number 132 31
* * 132 32
9 number 132 33
) ) 132 34
) ) 132 35
; ; 132 36
wire wire 133 4
[ [ 133 6
39 number 133 8
: : 133 9
0 number 133 10
] ] 133 11
Decrb9 token 133 18
= = 133 20
( ( 133 22
Y10 token 133 25
<< shift_left 133 27
( ( 133 28
9 number 133 29
+ + 133 30
1 number 133 31
) ) 133 32
) ) 133 33
; ; 133 34
wire wire 134 4
[ [ 134 6
39 number 134 8
: : 134 9
0 number 134 10
] ] 134 11
Decr9 token 134 17
= = 134 19
Decra9 token 134 26
+ + 134 27
Decrb9 token 134 33
; ; 134 34
wire wire 135 4
[ [ 135 6
39 number 135 8
: : 135 9
0 number 135 10
] ] 135 11
YY9_1 token 135 17
= = 135 19
YY10 token 135 24
+ + 135 25
Decr9 token 135 30
; ; 135 31
wire wire 136 4
[ [ 136 6
39 number 136 8
: : 136 9
0 number 136 10
] ] 136 11
Base9 token 136 17
= = 136 19
40'b1 bin 136 26
<< shift_left 136 28
9 number 136 29
; ; 136 30
wire wire 137 4
smaller9 token 137 13
= = 137 15
( ( 137 18
YY9_1 token 137 23
<= sm_eq 137 25
datain10 token 137 33
) ) 137 34
; ; 137 35
wire wire 138 4
[ [ 138 6
39 number 138 8
: : 138 9
0 number 138 10
] ] 138 11
YY9 token 138 15
= = 138 17
smaller9 token 138 26
? ? 138 28
YY9_1 token 138 34
: : 138 36
YY10 token 138 41
; ; 138 42
wire wire 139 4
[ [ 139 6
19 number 139 8
: : 139 9
0 number 139 10
] ] 139 11
Y9 token 139 14
= = 139 16
smaller9 token 139 25
? ? 139 27
Y10 token 139 31
+ + 139 32
Base9 token 139 37
: : 139 39
Y10 token 139 43
; ; 139 44
wire wire 140 4
[ [ 140 6
39 number 140 8
: : 140 9
0 number 140 10
] ] 140 11
datain9 token 140 19
= = 140 21
datain10 token 140 30
; ; 140 31
wire wire 141 4
vld9 token 141 9
= = 141 11
vld10 token 141 17
; ; 141 18
wire wire 143 4
[ [ 143 6
39 number 143 8
: : 143 9
0 number 143 10
] ] 143 11
Decra8 token 143 18
= = 143 20
( ( 143 22
40'b1 bin 143 27
<< shift_left 143 29
( ( 143 30
2 number 143 31
* * 143 32
8 number 143 33
) ) 143 34
) ) 143 35
; ; 143 36
wire wire 144 4
[ [ 144 6
39 number 144 8
: : 144 9
0 number 144 10
] ] 144 11
Decrb8 token 144 18
= = 144 20
( ( 144 22
Y9 token 144 24
<< shift_left 144 26
( ( 144 27
8 number 144 28
+ + 144 29
1 number 144 30
) ) 144 31
) ) 144 32
; ; 144 33
wire wire 145 4
[ [ 145 6
39 number 145 8
: : 145 9
0 number 145 10
] ] 145 11
Decr8 token 145 17
= = 145 19
Decra8 token 145 26
+ + 145 27
Decrb8 token 145 33
; ; 145 34
wire wire 146 4
[ [ 146 6
39 number 146 8
: : 146 9
0 number 146 10
] ] 146 11
YY8_1 token 146 17
= = 146 19
YY9 token 146 23
+ + 146 24
Decr8 token 146 29
; ; 146 30
wire wire 147 4
[ [ 147 6
39 number 147 8
: : 147 9
0 number 147 10
] ] 147 11
Base8 token 147 17
= = 147 19
40'b1 bin 147 26
<< shift_left 147 28
8 number 147 29
; ; 147 30
wire wire 148 4
smaller8 token 148 13
= = 148 15
( ( 148 18
YY8_1 token 148 23
<= sm_eq 148 25
datain9 token 148 32
) ) 148 33
; ; 148 34
wire wire 149 4
[ [ 149 6
39 number 149 8
: : 149 9
0 number 149 10
] ] 149 11
YY8 token 149 15
= = 149 17
smaller8 token 149 26
? ? 149 28
YY8_1 token 149 34
: : 149 36
YY9 token 149 40
; ; 149 41
wire wire 150 4
[ [ 150 6
19 number 150 8
: : 150 9
0 number 150 10
] ] 150 11
Y8 token 150 14
= = 150 16
smaller8 token 150 25
? ? 150 27
Y9 token 150 30
+ + 150 31
Base8 token 150 36
: : 150 38
Y9 token 150 41
; ; 150 42
wire wire 151 4
[ [ 151 6
39 number 151 8
: : 151 9
0 number 151 10
] ] 151 11
datain8 token 151 19
= = 151 21
datain9 token 151 29
; ; 151 30
wire wire 152 4
vld8 token 152 9
= = 152 11
vld9 token 152 16
; ; 152 17
wire wire 154 4
[ [ 154 6
39 number 154 8
: : 154 9
0 number 154 10
] ] 154 11
Decra7 token 154 18
= = 154 20
( ( 154 22
40'b1 bin 154 27
<< shift_left 154 29
( ( 154 30
2 number 154 31
* * 154 32
7 number 154 33
) ) 154 34
) ) 154 35
; ; 154 36
wire wire 155 4
[ [ 155 6
39 number 155 8
: : 155 9
0 number 155 10
] ] 155 11
Decrb7 token 155 18
= = 155 20
( ( 155 22
Y8 token 155 24
<< shift_left 155 26
( ( 155 27
7 number 155 28
+ + 155 29
1 number 155 30
) ) 155 31
) ) 155 32
; ; 155 33
wire wire 156 4
[ [ 156 6
39 number 156 8
: : 156 9
0 number 156 10
] ] 156 11
Decr7 token 156 17
= = 156 19
Decra7 token 156 26
+ + 156 27
Decrb7 token 156 33
; ; 156 34
wire wire 157 4
[ [ 157 6
39 number 157 8
: : 157 9
0 number 157 10
] ] 157 11
YY7_1 token 157 17
= = 157 19
YY8 token 157 23
+ + 157 24
Decr7 token 157 29
; ; 157 30
wire wire 158 4
[ [ 158 6
39 number 158 8
: : 158 9
0 number 158 10
] ] 158 11
Base7 token 158 17
= = 158 19
40'b1 bin 158 26
<< shift_left 158 28
7 number 158 29
; ; 158 30
wire wire 159 4
smaller7 token 159 13
= = 159 15
( ( 159 18
YY7_1 token 159 23
<= sm_eq 159 25
datain8 token 159 32
) ) 159 33
; ; 159 34
wire wire 160 4
[ [ 160 6
39 number 160 8
: : 160 9
0 number 160 10
] ] 160 11
YY7 token 160 15
= = 160 17
smaller7 token 160 26
? ? 160 28
YY7_1 token 160 34
: : 160 36
YY8 token 160 40
; ; 160 41
wire wire 161 4
[ [ 161 6
19 number 161 8
: : 161 9
0 number 161 10
] ] 161 11
Y7 token 161 14
= = 161 16
smaller7 token 161 25
? ? 161 27
Y8 token 161 30
+ + 161 31
Base7 token 161 36
: : 161 38
Y8 token 161 41
; ; 161 42
wire wire 162 4
[ [ 162 6
39 number 162 8
: : 162 9
0 number 162 10
] ] 162 11
datain7 token 162 19
= = 162 21
datain8 token 162 29
; ; 162 30
wire wire 163 4
vld7 token 163 9
= = 163 11
vld8 token 163 16
; ; 163 17
wire wire 165 4
[ [ 165 6
39 number 165 8
: : 165 9
0 number 165 10
] ] 165 11
Decra6 token 165 18
= = 165 20
( ( 165 22
40'b1 bin 165 27
<< shift_left 165 29
( ( 165 30
2 number 165 31
* * 165 32
6 number 165 33
) ) 165 34
) ) 165 35
; ; 165 36
wire wire 166 4
[ [ 166 6
39 number 166 8
: : 166 9
0 number 166 10
] ] 166 11
Decrb6 token 166 18
= = 166 20
( ( 166 22
Y7 token 166 24
<< shift_left 166 26
( ( 166 27
6 number 166 28
+ + 166 29
1 number 166 30
) ) 166 31
) ) 166 32
; ; 166 33
wire wire 167 4
[ [ 167 6
39 number 167 8
: : 167 9
0 number 167 10
] ] 167 11
Decr6 token 167 17
= = 167 19
Decra6 token 167 26
+ + 167 27
Decrb6 token 167 33
; ; 167 34
wire wire 168 4
[ [ 168 6
39 number 168 8
: : 168 9
0 number 168 10
] ] 168 11
YY6_1 token 168 17
= = 168 19
YY7 token 168 23
+ + 168 24
Decr6 token 168 29
; ; 168 30
wire wire 169 4
[ [ 169 6
39 number 169 8
: : 169 9
0 number 169 10
] ] 169 11
Base6 token 169 17
= = 169 19
40'b1 bin 169 26
<< shift_left 169 28
6 number 169 29
; ; 169 30
wire wire 170 4
smaller6 token 170 13
= = 170 15
( ( 170 18
YY6_1 token 170 23
<= sm_eq 170 25
datain7 token 170 32
) ) 170 33
; ; 170 34
wire wire 171 4
[ [ 171 6
39 number 171 8
: : 171 9
0 number 171 10
] ] 171 11
YY6 token 171 15
= = 171 17
smaller6 token 171 26
? ? 171 28
YY6_1 token 171 34
: : 171 36
YY7 token 171 40
; ; 171 41
wire wire 172 4
[ [ 172 6
19 number 172 8
: : 172 9
0 number 172 10
] ] 172 11
Y6 token 172 14
= = 172 16
smaller6 token 172 25
? ? 172 27
Y7 token 172 30
+ + 172 31
Base6 token 172 36
: : 172 38
Y7 token 172 41
; ; 172 42
wire wire 173 4
[ [ 173 6
39 number 173 8
: : 173 9
0 number 173 10
] ] 173 11
datain6 token 173 19
= = 173 21
datain7 token 173 29
; ; 173 30
wire wire 174 4
vld6 token 174 9
= = 174 11
vld7 token 174 16
; ; 174 17
wire wire 176 4
[ [ 176 6
39 number 176 8
: : 176 9
0 number 176 10
] ] 176 11
Decra5 token 176 18
= = 176 20
( ( 176 22
40'b1 bin 176 27
<< shift_left 176 29
( ( 176 30
2 number 176 31
* * 176 32
5 number 176 33
) ) 176 34
) ) 176 35
; ; 176 36
wire wire 177 4
[ [ 177 6
39 number 177 8
: : 177 9
0 number 177 10
] ] 177 11
Decrb5 token 177 18
= = 177 20
( ( 177 22
Y6 token 177 24
<< shift_left 177 26
( ( 177 27
5 number 177 28
+ + 177 29
1 number 177 30
) ) 177 31
) ) 177 32
; ; 177 33
wire wire 178 4
[ [ 178 6
39 number 178 8
: : 178 9
0 number 178 10
] ] 178 11
Decr5 token 178 17
= = 178 19
Decra5 token 178 26
+ + 178 27
Decrb5 token 178 33
; ; 178 34
wire wire 179 4
[ [ 179 6
39 number 179 8
: : 179 9
0 number 179 10
] ] 179 11
YY5_1 token 179 17
= = 179 19
YY6 token 179 23
+ + 179 24
Decr5 token 179 29
; ; 179 30
wire wire 180 4
[ [ 180 6
39 number 180 8
: : 180 9
0 number 180 10
] ] 180 11
Base5 token 180 17
= = 180 19
40'b1 bin 180 26
<< shift_left 180 28
5 number 180 29
; ; 180 30
wire wire 181 4
smaller5 token 181 13
= = 181 15
( ( 181 18
YY5_1 token 181 23
<= sm_eq 181 25
datain6 token 181 32
) ) 181 33
; ; 181 34
wire wire 182 4
[ [ 182 6
39 number 182 8
: : 182 9
0 number 182 10
] ] 182 11
pre_YY5 token 182 19
= = 182 21
smaller5 token 182 30
? ? 182 32
YY5_1 token 182 38
: : 182 40
YY6 token 182 44
; ; 182 45
wire wire 183 4
[ [ 183 6
19 number 183 8
: : 183 9
0 number 183 10
] ] 183 11
pre_Y5 token 183 18
= = 183 20
smaller5 token 183 29
? ? 183 31
Y6 token 183 34
+ + 183 35
Base5 token 183 40
: : 183 42
Y6 token 183 45
; ; 183 46
reg reg 184 3
[ [ 184 5
39 number 184 7
: : 184 8
0 number 184 9
] ] 184 10
YY5 token 184 14
; ; 184 15
always always 185 6
@ @ 185 8
( ( 185 9
posedge posedge 185 16
clk token 185 20
) ) 185 21
if if 185 24
( ( 185 26
en token 185 28
) ) 185 29
YY5 token 185 33
<= sm_eq 185 36
pre_YY5 token 185 44
; ; 185 45
reg reg 186 3
[ [ 186 5
39 number 186 7
: : 186 8
0 number 186 9
] ] 186 10
Y5 token 186 13
; ; 186 14
always always 187 6
@ @ 187 8
( ( 187 9
posedge posedge 187 16
clk token 187 20
) ) 187 21
if if 187 24
( ( 187 26
en token 187 28
) ) 187 29
Y5 token 187 32
<= sm_eq 187 35
pre_Y5 token 187 42
; ; 187 43
reg reg 188 3
[ [ 188 5
39 number 188 7
: : 188 8
0 number 188 9
] ] 188 10
datain5 token 188 18
; ; 188 19
always always 189 6
@ @ 189 8
( ( 189 9
posedge posedge 189 16
clk token 189 20
) ) 189 21
if if 189 24
( ( 189 26
en token 189 28
) ) 189 29
datain5 token 189 37
<= sm_eq 189 40
datain6 token 189 48
; ; 189 49
reg reg 190 3
vld5 token 190 8
; ; 190 9
always always 191 6
@ @ 191 8
( ( 191 9
posedge posedge 191 16
clk token 191 20
) ) 191 21
if if 191 24
( ( 191 26
en token 191 28
) ) 191 29
vld5 token 191 34
<= sm_eq 191 37
vld6 token 191 42
; ; 191 43
wire wire 193 4
[ [ 193 6
39 number 193 8
: : 193 9
0 number 193 10
] ] 193 11
Decra4 token 193 18
= = 193 20
( ( 193 22
40'b1 bin 193 27
<< shift_left 193 29
( ( 193 30
2 number 193 31
* * 193 32
4 number 193 33
) ) 193 34
) ) 193 35
; ; 193 36
wire wire 194 4
[ [ 194 6
39 number 194 8
: : 194 9
0 number 194 10
] ] 194 11
Decrb4 token 194 18
= = 194 20
( ( 194 22
Y5 token 194 24
<< shift_left 194 26
( ( 194 27
4 number 194 28
+ + 194 29
1 number 194 30
) ) 194 31
) ) 194 32
; ; 194 33
wire wire 195 4
[ [ 195 6
39 number 195 8
: : 195 9
0 number 195 10
] ] 195 11
Decr4 token 195 17
= = 195 19
Decra4 token 195 26
+ + 195 27
Decrb4 token 195 33
; ; 195 34
wire wire 196 4
[ [ 196 6
39 number 196 8
: : 196 9
0 number 196 10
] ] 196 11
YY4_1 token 196 17
= = 196 19
YY5 token 196 23
+ + 196 24
Decr4 token 196 29
; ; 196 30
wire wire 197 4
[ [ 197 6
39 number 197 8
: : 197 9
0 number 197 10
] ] 197 11
Base4 token 197 17
= = 197 19
40'b1 bin 197 26
<< shift_left 197 28
4 number 197 29
; ; 197 30
wire wire 198 4
smaller4 token 198 13
= = 198 15
( ( 198 18
YY4_1 token 198 23
<= sm_eq 198 25
datain5 token 198 32
) ) 198 33
; ; 198 34
wire wire 199 4
[ [ 199 6
39 number 199 8
: : 199 9
0 number 199 10
] ] 199 11
YY4 token 199 15
= = 199 17
smaller4 token 199 26
? ? 199 28
YY4_1 token 199 34
: : 199 36
YY5 token 199 40
; ; 199 41
wire wire 200 4
[ [ 200 6
19 number 200 8
: : 200 9
0 number 200 10
] ] 200 11
Y4 token 200 14
= = 200 16
smaller4 token 200 25
? ? 200 27
Y5 token 200 30
+ + 200 31
Base4 token 200 36
: : 200 38
Y5 token 200 41
; ; 200 42
wire wire 201 4
[ [ 201 6
39 number 201 8
: : 201 9
0 number 201 10
] ] 201 11
datain4 token 201 19
= = 201 21
datain5 token 201 29
; ; 201 30
wire wire 202 4
vld4 token 202 9
= = 202 11
vld5 token 202 16
; ; 202 17
wire wire 204 4
[ [ 204 6
39 number 204 8
: : 204 9
0 number 204 10
] ] 204 11
Decra3 token 204 18
= = 204 20
( ( 204 22
40'b1 bin 204 27
<< shift_left 204 29
( ( 204 30
2 number 204 31
* * 204 32
3 number 204 33
) ) 204 34
) ) 204 35
; ; 204 36
wire wire 205 4
[ [ 205 6
39 number 205 8
: : 205 9
0 number 205 10
] ] 205 11
Decrb3 token 205 18
= = 205 20
( ( 205 22
Y4 token 205 24
<< shift_left 205 26
( ( 205 27
3 number 205 28
+ + 205 29
1 number 205 30
) ) 205 31
) ) 205 32
; ; 205 33
wire wire 206 4
[ [ 206 6
39 number 206 8
: : 206 9
0 number 206 10
] ] 206 11
Decr3 token 206 17
= = 206 19
Decra3 token 206 26
+ + 206 27
Decrb3 token 206 33
; ; 206 34
wire wire 207 4
[ [ 207 6
39 number 207 8
: : 207 9
0 number 207 10
] ] 207 11
YY3_1 token 207 17
= = 207 19
YY4 token 207 23
+ + 207 24
Decr3 token 207 29
; ; 207 30
wire wire 208 4
[ [ 208 6
39 number 208 8
: : 208 9
0 number 208 10
] ] 208 11
Base3 token 208 17
= = 208 19
40'b1 bin 208 26
<< shift_left 208 28
3 number 208 29
; ; 208 30
wire wire 209 4
smaller3 token 209 13
= = 209 15
( ( 209 18
YY3_1 token 209 23
<= sm_eq 209 25
datain4 token 209 32
) ) 209 33
; ; 209 34
wire wire 210 4
[ [ 210 6
39 number 210 8
: : 210 9
0 number 210 10
] ] 210 11
YY3 token 210 15
= = 210 17
smaller3 token 210 26
? ? 210 28
YY3_1 token 210 34
: : 210 36
YY4 token 210 40
; ; 210 41
wire wire 211 4
[ [ 211 6
19 number 211 8
: : 211 9
0 number 211 10
] ] 211 11
Y3 token 211 14
= = 211 16
smaller3 token 211 25
? ? 211 27
Y4 token 211 30
+ + 211 31
Base3 token 211 36
: : 211 38
Y4 token 211 41
; ; 211 42
wire wire 212 4
[ [ 212 6
39 number 212 8
: : 212 9
0 number 212 10
] ] 212 11
datain3 token 212 19
= = 212 21
datain4 token 212 29
; ; 212 30
wire wire 213 4
vld3 token 213 9
= = 213 11
vld4 token 213 16
; ; 213 17
wire wire 215 4
[ [ 215 6
39 number 215 8
: : 215 9
0 number 215 10
] ] 215 11
Decra2 token 215 18
= = 215 20
( ( 215 22
40'b1 bin 215 27
<< shift_left 215 29
( ( 215 30
2 number 215 31
* * 215 32
2 number 215 33
) ) 215 34
) ) 215 35
; ; 215 36
wire wire 216 4
[ [ 216 6
39 number 216 8
: : 216 9
0 number 216 10
] ] 216 11
Decrb2 token 216 18
= = 216 20
( ( 216 22
Y3 token 216 24
<< shift_left 216 26
( ( 216 27
2 number 216 28
+ + 216 29
1 number 216 30
) ) 216 31
) ) 216 32
; ; 216 33
wire wire 217 4
[ [ 217 6
39 number 217 8
: : 217 9
0 number 217 10
] ] 217 11
Decr2 token 217 17
= = 217 19
Decra2 token 217 26
+ + 217 27
Decrb2 token 217 33
; ; 217 34
wire wire 218 4
[ [ 218 6
39 number 218 8
: : 218 9
0 number 218 10
] ] 218 11
YY2_1 token 218 17
= = 218 19
YY3 token 218 23
+ + 218 24
Decr2 token 218 29
; ; 218 30
wire wire 219 4
[ [ 219 6
39 number 219 8
: : 219 9
0 number 219 10
] ] 219 11
Base2 token 219 17
= = 219 19
40'b1 bin 219 26
<< shift_left 219 28
2 number 219 29
; ; 219 30
wire wire 220 4
smaller2 token 220 13
= = 220 15
( ( 220 18
YY2_1 token 220 23
<= sm_eq 220 25
datain3 token 220 32
) ) 220 33
; ; 220 34
wire wire 221 4
[ [ 221 6
39 number 221 8
: : 221 9
0 number 221 10
] ] 221 11
YY2 token 221 15
= = 221 17
smaller2 token 221 26
? ? 221 28
YY2_1 token 221 34
: : 221 36
YY3 token 221 40
; ; 221 41
wire wire 222 4
[ [ 222 6
19 number 222 8
: : 222 9
0 number 222 10
] ] 222 11
Y2 token 222 14
= = 222 16
smaller2 token 222 25
? ? 222 27
Y3 token 222 30
+ + 222 31
Base2 token 222 36
: : 222 38
Y3 token 222 41
; ; 222 42
wire wire 223 4
[ [ 223 6
39 number 223 8
: : 223 9
0 number 223 10
] ] 223 11
datain2 token 223 19
= = 223 21
datain3 token 223 29
; ; 223 30
wire wire 224 4
vld2 token 224 9
= = 224 11
vld3 token 224 16
; ; 224 17
wire wire 226 4
[ [ 226 6
39 number 226 8
: : 226 9
0 number 226 10
] ] 226 11
Decra1 token 226 18
= = 226 20
( ( 226 22
40'b1 bin 226 27
<< shift_left 226 29
( ( 226 30
2 number 226 31
* * 226 32
1 number 226 33
) ) 226 34
) ) 226 35
; ; 226 36
wire wire 227 4
[ [ 227 6
39 number 227 8
: : 227 9
0 number 227 10
] ] 227 11
Decrb1 token 227 18
= = 227 20
( ( 227 22
Y2 token 227 24
<< shift_left 227 26
( ( 227 27
1 number 227 28
+ + 227 29
1 number 227 30
) ) 227 31
) ) 227 32
; ; 227 33
wire wire 228 4
[ [ 228 6
39 number 228 8
: : 228 9
0 number 228 10
] ] 228 11
Decr1 token 228 17
= = 228 19
Decra1 token 228 26
+ + 228 27
Decrb1 token 228 33
; ; 228 34
wire wire 229 4
[ [ 229 6
39 number 229 8
: : 229 9
0 number 229 10
] ] 229 11
YY1_1 token 229 17
= = 229 19
YY2 token 229 23
+ + 229 24
Decr1 token 229 29
; ; 229 30
wire wire 230 4
[ [ 230 6
39 number 230 8
: : 230 9
0 number 230 10
] ] 230 11
Base1 token 230 17
= = 230 19
40'b1 bin 230 26
<< shift_left 230 28
1 number 230 29
; ; 230 30
wire wire 231 4
smaller1 token 231 13
= = 231 15
( ( 231 18
YY1_1 token 231 23
<= sm_eq 231 25
datain2 token 231 32
) ) 231 33
; ; 231 34
wire wire 232 4
[ [ 232 6
39 number 232 8
: : 232 9
0 number 232 10
] ] 232 11
YY1 token 232 15
= = 232 17
smaller1 token 232 26
? ? 232 28
YY1_1 token 232 34
: : 232 36
YY2 token 232 40
; ; 232 41
wire wire 233 4
[ [ 233 6
19 number 233 8
: : 233 9
0 number 233 10
] ] 233 11
Y1 token 233 14
= = 233 16
smaller1 token 233 25
? ? 233 27
Y2 token 233 30
+ + 233 31
Base1 token 233 36
: : 233 38
Y2 token 233 41
; ; 233 42
wire wire 234 4
[ [ 234 6
39 number 234 8
: : 234 9
0 number 234 10
] ] 234 11
datain1 token 234 19
= = 234 21
datain2 token 234 29
; ; 234 30
wire wire 235 4
vld1 token 235 9
= = 235 11
vld2 token 235 16
; ; 235 17
wire wire 237 4
[ [ 237 6
39 number 237 8
: : 237 9
0 number 237 10
] ] 237 11
Decra0 token 237 18
= = 237 20
( ( 237 22
40'b1 bin 237 27
<< shift_left 237 29
( ( 237 30
2 number 237 31
* * 237 32
0 number 237 33
) ) 237 34
) ) 237 35
; ; 237 36
wire wire 238 4
[ [ 238 6
39 number 238 8
: : 238 9
0 number 238 10
] ] 238 11
Decrb0 token 238 18
= = 238 20
( ( 238 22
Y1 token 238 24
<< shift_left 238 26
( ( 238 27
0 number 238 28
+ + 238 29
1 number 238 30
) ) 238 31
) ) 238 32
; ; 238 33
wire wire 239 4
[ [ 239 6
39 number 239 8
: : 239 9
0 number 239 10
] ] 239 11
Decr0 token 239 17
= = 239 19
Decra0 token 239 26
+ + 239 27
Decrb0 token 239 33
; ; 239 34
wire wire 240 4
[ [ 240 6
39 number 240 8
: : 240 9
0 number 240 10
] ] 240 11
YY0_1 token 240 17
= = 240 19
YY1 token 240 23
+ + 240 24
Decr0 token 240 29
; ; 240 30
wire wire 241 4
[ [ 241 6
39 number 241 8
: : 241 9
0 number 241 10
] ] 241 11
Base0 token 241 17
= = 241 19
40'b1 bin 241 26
<< shift_left 241 28
0 number 241 29
; ; 241 30
wire wire 242 4
smaller0 token 242 13
= = 242 15
( ( 242 18
YY0_1 token 242 23
<= sm_eq 242 25
datain1 token 242 32
) ) 242 33
; ; 242 34
wire wire 243 4
[ [ 243 6
39 number 243 8
: : 243 9
0 number 243 10
] ] 243 11
YY0 token 243 15
= = 243 17
smaller0 token 243 26
? ? 243 28
YY0_1 token 243 34
: : 243 36
YY1 token 243 40
; ; 243 41
wire wire 244 4
[ [ 244 6
19 number 244 8
: : 244 9
0 number 244 10
] ] 244 11
Y0 token 244 14
= = 244 16
smaller0 token 244 25
? ? 244 27
Y1 token 244 30
+ + 244 31
Base0 token 244 36
: : 244 38
Y1 token 244 41
; ; 244 42
wire wire 245 4
[ [ 245 6
39 number 245 8
: : 245 9
0 number 245 10
] ] 245 11
datain0 token 245 19
= = 245 21
datain1 token 245 29
; ; 245 30
wire wire 246 4
vld0 token 246 9
= = 246 11
vld1 token 246 16
; ; 246 17
always always 248 6
@ @ 248 8
( ( 248 9
posedge posedge 248 16
clk token 248 20
) ) 248 21
if if 248 24
( ( 248 26
en token 248 28
) ) 248 29
out token 248 33
<= sm_eq 248 36
Y0 token 248 39
; ; 248 40
always always 249 6
@ @ 249 8
( ( 249 9
posedge posedge 249 16
clk token 249 20
) ) 249 21
if if 249 24
( ( 249 26
en token 249 28
) ) 249 29
vldout token 249 36
<= sm_eq 249 39
vld0 token 249 44
; ; 249 45
endmodule endmodule 250 9
