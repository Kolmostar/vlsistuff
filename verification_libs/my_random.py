
import string
from logs import log_info
rndptr=0
def my_randi(Min=0,Max=0xffff):
    global rndptr
    X = RandomTable[rndptr]
    rndptr +=1 
    if rndptr>=len(RandomTable):
        rndptr=0

    D = 1+Max-Min
    Y = (X % D)+Min
    return Y

def my_rand_shuffle(List):
    Len = len(List)
    for i in range(Len):
        x = randi(0,Len-1)
        tmp = List[x]
        List[x]=List[i]
        List[i]=tmp
        

try:
    import random
    randi = random.randint
    rand_shuffle = random.shuffle
    log_info('using python own random package')
except:
    randi = my_randi
    rand_shuffle = my_rand_shuffle    
    log_info('using my own random package')



RNDTABLE = '''
43252 59414 25632 9719 47135 15823 49632 47483 57987 63664 26431 47573 12550 54535 33577 37578 46889 10650 16785 43421 19926 36291 12536 20713 44096 16214 28655 44405 33361 32552
23382 49266 5769 30801 40166 58957 14267 36055 26357 17625 15039 24887 21950 3037 27151 34702 26389 14966 61133 8351 12907 15182 14467 27582 23005 27737 60765 43613 38430 15050
10125 43377 65191 62236 61797 15889 47905 25280 2629 53449 15578 53109 41801 59667 32696 14329 29564 41021 23030 21794 58153 33323 28156 26699 4356 25859 9272 3255 49161 53048
24062 24403 3638 16889 62999 64230 4566 21953 44525 65532 63972 38260 35753 54651 61397 8967 40317 20722 48720 4722 59597 9049 8483 7300 53486 21871 17665 21268 64301 44409
26865 40068 8937 32257 26890 8185 26161 51760 9916 37417 23200 19973 32496 31432 35678 33944 64202 36207 47814 49367 26874 36819 24070 58050 6491 43983 10919 27614 11510 11473
40451 9621 37955 65203 37023 48717 14063 18025 65464 54229 53471 62296 14803 59708 59889 46382 34308 42037 55134 38683 2781 37585 30296 29779 46985 12249 576 42204 43290 5578
13549 26476 44128 59898 63001 39634 64683 34541 17904 10311 62663 684 2266 5242 3491 30508 65036 30758 14515 62323 33309 25999 29299 6781 36483 42949 38384 47949 15256 54810
36336 20637 9300 15531 8749 34902 52276 28167 40715 12002 60771 36600 1779 15917 49592 6802 9645 4322 19013 20703 14651 61465 63374 6334 57478 4463 20852 40790 17333 41978
49745 60401 40453 17902 50668 40647 62749 57967 11343 29182 26967 34654 46358 41705 40608 54538 32679 57947 11283 41877 28305 48209 32142 64149 26932 43244 33177 10910 60792 26438
22454 45145 8388 50717 36139 30198 64822 31480 32105 15512 27508 16135 21913 17431 51263 52696 18406 13409 13506 15916 63396 17006 26508 42600 42571 54283 8453 60816 51985 21054
19836 20122 22178 7323 61633 16327 3001 52336 10957 21061 37213 40561 27386 63256 63191 30040 10133 52040 51393 52454 22901 27335 29839 451 34671 22519 43672 30216 58978 36983
46092 32563 50368 24674 30488 23746 749 29516 55055 13855 59113 4024 45157 29330 16665 17078 32299 38256 9511 36772 54911 36096 63700 30055 62526 31323 46664 8424 58 153
17336 14912 48987 41021 11244 47814 5229 1710 7788 3982 11236 60215 35496 1391 45285 4680 17461 22490 38019 31204 34966 63051 29062 22807 39771 41032 37858 34388 1479 23354
20772 9783 21983 46616 10859 40425 57579 54980 22147 35816 38421 49612 37904 8707 22411 43435 2074 15210 3869 48836 33063 21808 33727 13288 14850 13830 17780 9743 1709 33179
3894 10584 22509 64315 49549 5092 13316 26428 40805 21289 53601 8203 45265 36809 35255 62350 30206 34552 7740 30587 11260 17591 9081 46971 65017 38972 26858 28301 3579 46117
32179 41891 56429 37141 8714 5744 57554 32574 47552 44075 60271 64583 21013 50557 24087 38300 53289 48366 18809 45456 55083 10368 33182 38384 15724 37867 38013 43271 17929 23330
19264 10463 27631 1187 4535 52396 60052 23447 54233 59697 5085 11221 52173 60976 62616 43116 26169 43277 14355 40319 9823 54932 17228 34858 1609 26461 53848 48885 39543 32175
25525 27314 39753 10786 35960 64644 25092 19060 36533 22554 21396 60860 13210 65455 2534 41235 23910 39429 54302 14023 24115 17476 5331 60393 44104 55201 64916 20954 7175 38127
27281 48129 25356 63866 43179 24903 48626 277 34997 16130 63801 22272 21287 48230 12337 41486 20395 24794 60258 40093 51846 38978 42755 48307 55897 26023 38782 32201 22195 23999
6499 7338 49562 1018 63605 57075 37970 18706 19 52131 16246 36539 47512 12574 31009 20169 62573 34388 46839 8515 23668 42937 24729 29972 47873 26747 19957 2782 24000 64990
11350 22968 16010 43643 12553 14848 18576 46155 64829 56335 40322 33133 7279 7216 21350 24492 59489 831 26546 50007 48509 6606 61885 37375 11246 28426 14218 22909 19396 36047
51808 28690 17889 15745 6527 4308 13235 31825 40076 54216 22696 48394 38945 41078 28094 17494 44364 22883 12892 10341 55717 57903 5850 52351 56133 36618 14635 17185 6858 28056
2147 16230 57860 26496 48177 8457 1523 22597 6925 22210 42062 8945 48651 51487 52854 56521 57323 21356 10469 63081 23922 52178 357 42381 7340 39829 10299 6028 58184 2491
49153 43508 44355 22599 35727 1595 1703 6858 13326 11640 5574 3307 49358 55415 52780 789 18710 54384 24519 40210 62849 23950 10246 15542 19384 1587 59081 15449 27072 42328
33443 142 48849 12058 30761 22963 9988 13891 63839 48347 33010 32580 19849 40536 19498 42238 28557 18367 7188 64237 6946 7565 32670 24391 61987 37785 32105 63673 57355 5455
45754 59515 25245 49847 50868 9536 62557 63793 16775 42217 59917 41861 19706 40231 28651 39917 39750 58027 335 51535 43950 60757 34463 48218 31414 46570 63107 46277 17054 55555
61132 16155 1583 62044 8292 13997 21559 14356 38729 23539 39818 59735 52980 49028 32642 61775 40128 30415 9128 7851 57443 19712 330 64050 20880 40112 8302 36264 48311 57187
27301 26586 37060 58015 48424 14699 9646 46278 1676 27377 23828 25897 45439 49157 59786 55710 3419 3253 15753 689 51720 30428 7171 37450 46348 37233 4174 54346 3867 54488
54325 38158 40471 13036 15555 45400 15544 50596 57067 55636 34005 55397 33075 56673 43503 38629 445 47836 48000 20285 27590 62881 34155 38015 49490 34982 21825 47938 63971 12581
40117 24703 31096 35027 24271 11793 34533 43943 22812 22771 12883 24650 6551 18609 38036 42122 25179 13934 16897 33995 62577 30386 15206 22523 45097 43550 16651 38281 41097 54055
9332 39598 63115 64253 29462 39813 48368 49964 10180 2361 6827 54977 41693 26270 63634 44745 48289 43018 23804 37355 27423 58616 22270 45122 48717 56767 24242 16261 2424 19860
62053 22614 31978 49230 51027 55045 54389 45759 5679 31742 17319 6423 39394 41121 989 18768 42774 20972 33734 3144 23691 9315 41263 29301 39854 7039 1811 26311 15880 10510
50736 16957 4646 61235 11564 55822 28188 30101 59970 3820 50995 44422 57622 59681 12971 47493 24355 27990 5308 39478 64950 34040 60826 38111 42289 17750 34674 5863 17745 38023
28009 5688 45113 24176 33503 76 42647 11903 13640 58810
'''
RandomTable = map(int,string.split(RNDTABLE))

