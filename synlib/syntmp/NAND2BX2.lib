library(slow) {
    delay_model : table_lookup;
  in_place_swap_mode : match_footprint;
  library_features(report_delay_calculation);
    date : "Mon Oct 21 09:59:52 PDT 2002";
  comment : "Copyright (c) 2002 Artisan Components, Inc.  All Rights Reserved.";
    time_unit : "1ns";
  voltage_unit : "1V";
  current_unit : "1mA";
  pulling_resistance_unit : "1kohm";
  leakage_power_unit : "1pW";
  capacitive_load_unit (1.0,pf);
    nom_process     : 1;
  nom_temperature : 125;
  nom_voltage     : 1.62;
  operating_conditions(slow) {
    process	: 1;
    temperature	: 125;
    voltage	: 1.62;
    tree_type	: balanced_tree;
  }
  default_operating_conditions : slow;
    slew_lower_threshold_pct_fall : 10.0;
  slew_upper_threshold_pct_fall : 90.0;
  slew_lower_threshold_pct_rise : 10.0;
  slew_upper_threshold_pct_rise : 90.0;
  input_threshold_pct_fall      : 50.0;
  input_threshold_pct_rise      : 50.0;
  output_threshold_pct_fall     : 50.0;
  output_threshold_pct_rise     : 50.0;
    default_leakage_power_density	: 0.0;
  slew_derate_from_library	: 1;
  default_cell_leakage_power	: 0.0;
  default_fanout_load	: 1.0;
  default_output_pin_cap	: 0.0;
  default_inout_pin_cap	: 0.0035;
  default_input_pin_cap	: 0.0035;
  default_max_transition	: 4.5;
    lu_table_template(delay_template_7x1) {
    variable_1 : input_net_transition;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(energy_template_7x1) {
    variable_1 : input_transition_time;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(delay_template_7x7) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(energy_template_7x7) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(energy_template_1x7) {
    variable_1 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(energy_template_7x3x3) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    variable_3 : equal_or_opposite_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002");
    index_3 ("1000, 1001, 1002");
  }
  power_lut_template(passive_energy_template_1x7) {
    variable_1 : input_transition_time;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(setup_template_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 1001, 1002");
    index_2 ("1000, 1001, 1002");
  }
  lu_table_template(hold_template_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 1001, 1002");
    index_2 ("1000, 1001, 1002");
  }
  lu_table_template(recovery_template_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 1001, 1002");
    index_2 ("1000, 1001, 1002");
  }
  lu_table_template(removal_template_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 1001, 1002");
    index_2 ("1000, 1001, 1002");
  }
    k_process_cell_leakage_power	: 0;
  k_temp_cell_leakage_power	: 0;
  k_volt_cell_leakage_power	: 0;
  k_process_internal_power	: 0;
  k_temp_internal_power	: 0;
  k_volt_internal_power	: 0;
  k_process_rise_transition	: 1;
  k_temp_rise_transition	: 0;
  k_volt_rise_transition	: 0;
  k_process_fall_transition	: 1;
  k_temp_fall_transition	: 0;
  k_volt_fall_transition	: 0;
  k_process_setup_rise	: 1;
  k_temp_setup_rise	: 0;
  k_volt_setup_rise	: 0;
  k_process_setup_fall	: 1;
  k_temp_setup_fall	: 0;
  k_volt_setup_fall	: 0;
  k_process_hold_rise	: 1;
  k_temp_hold_rise	: 0;
  k_volt_hold_rise	: 0;
  k_process_hold_fall	: 1;
  k_temp_hold_fall	: 0;
  k_volt_hold_fall	: 0;
  k_process_min_pulse_width_high	: 1;
  k_temp_min_pulse_width_high	: 0;
  k_volt_min_pulse_width_high	: 0;
  k_process_min_pulse_width_low	: 1;
  k_temp_min_pulse_width_low	: 0;
  k_volt_min_pulse_width_low	: 0;
  k_process_recovery_rise	: 1;
  k_temp_recovery_rise	: 0;
  k_volt_recovery_rise	: 0;
  k_process_recovery_fall	: 1;
  k_temp_recovery_fall	: 0;
  k_volt_recovery_fall	: 0;
  k_process_cell_rise	: 1;
  k_temp_cell_rise	: 0;
  k_volt_cell_rise	: 0;
  k_process_cell_fall	: 1;
  k_temp_cell_fall	: 0;
  k_volt_cell_fall	: 0;
  k_process_wire_cap	: 0;
  k_temp_wire_cap	: 0;
  k_volt_wire_cap	: 0;
  k_process_wire_res	: 0;
  k_temp_wire_res	: 0;
  k_volt_wire_res	: 0;
  k_process_pin_cap	: 0;
  k_temp_pin_cap	: 0;
  k_volt_pin_cap	: 0;
    output_voltage(GENERAL) {
    vol	: 0.4;
    voh	: VDD - 0.4;
    vomin	: -0.5;
    vomax	: VDD + 0.5;
  }
  input_voltage(CMOS) {
    vil	: 0.3 * VDD;
    vih	: 0.7 * VDD;
    vimin	: -0.5;
    vimax	: VDD + 0.5;
  }
  input_voltage(TTL) {
    vil	: 0.8;
    vih	: 2;
    vimin	: -0.5;
    vimax	: VDD + 0.5;
  }
    wire_load("tsmc18_wl10") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 66.667;
    fanout_length	(1,66.667);
  }
  wire_load("tsmc18_wl20") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 133.334;
    fanout_length	(1,133.334);
  }
  wire_load("tsmc18_wl30") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 200.001;
    fanout_length	(1,200.001);
  }
  wire_load("tsmc18_wl40") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 266.668;
    fanout_length	(1,266.668);
  }
  wire_load("tsmc18_wl50") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 333.335;
    fanout_length	(1,333.335);
  }
    wire_load("ForQA") {
    resistance	: 0;
    capacitance	: 1;
    area	: 1;
    slope	: 1;
    fanout_length(1,0);
    fanout_length(10,0);
  }
    
cell (NAND2BX2) { 
  cell_footprint : nand2b;
  area : 19.958400;
  pin(AN) {
    direction : input;
    capacitance : 0.003442;
  }
  pin(B) {
    direction : input;
    capacitance : 0.008256;
  }
  pin(Y) {
    direction : output;
    capacitance : 0.0;
    function : "(!(!AN B))";
    internal_power() {
      related_pin : "AN";
      rise_power(energy_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0007, 0.042, 0.077, 0.168, 0.294, 0.462, 0.623");
        values ( \
          "0.019821, 0.020437, 0.019885, 0.017768, 0.014607, 0.010234, 0.006039", \
          "0.019775, 0.020092, 0.019579, 0.017585, 0.014420, 0.010115, 0.005932", \
          "0.021969, 0.021206, 0.020656, 0.018775, 0.015748, 0.011500, 0.007355", \
          "0.027529, 0.025758, 0.024777, 0.022778, 0.019770, 0.015566, 0.011452", \
          "0.034438, 0.032628, 0.031496, 0.028211, 0.025145, 0.020937, 0.016831", \
          "0.042422, 0.039711, 0.039322, 0.034769, 0.031606, 0.027362, 0.023248", \
          "0.052176, 0.048512, 0.047878, 0.045786, 0.039662, 0.035351, 0.031211");
      }
      fall_power(energy_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0007, 0.042, 0.077, 0.168, 0.294, 0.462, 0.623");
        values ( \
          "0.029382, 0.031701, 0.031920, 0.032055, 0.032141, 0.032155, 0.032186", \
          "0.029557, 0.031621, 0.031874, 0.032068, 0.032147, 0.032178, 0.032224", \
          "0.032110, 0.033222, 0.033444, 0.033674, 0.033787, 0.033850, 0.033882", \
          "0.039662, 0.038039, 0.038015, 0.038150, 0.038251, 0.038317, 0.038351", \
          "0.046827, 0.044107, 0.043911, 0.043768, 0.043828, 0.043886, 0.043920", \
          "0.054943, 0.051097, 0.050723, 0.050377, 0.050380, 0.050403, 0.050420", \
          "0.064798, 0.059729, 0.059119, 0.058678, 0.058434, 0.058409, 0.058412");
      }
    }
    timing() {
      related_pin : "AN";
      timing_sense : positive_unate;
      cell_rise(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0007, 0.042, 0.077, 0.168, 0.294, 0.462, 0.623");
        values ( \
          "0.110560, 0.250779, 0.364939, 0.660212, 1.068335, 1.612255, 2.133433", \
          "0.134870, 0.274527, 0.388840, 0.684311, 1.092549, 1.636525, 2.157729", \
          "0.195547, 0.337700, 0.451875, 0.747354, 1.155744, 1.699842, 2.221115", \
          "0.233664, 0.382203, 0.495675, 0.791014, 1.199281, 1.743277, 2.264524", \
          "0.247470, 0.404257, 0.517712, 0.812505, 1.220766, 1.764788, 2.285925", \
          "0.246933, 0.412581, 0.526880, 0.822269, 1.230311, 1.774332, 2.295568", \
          "0.234160, 0.409470, 0.525194, 0.822436, 1.231308, 1.775211, 2.296419");
      }
      rise_transition(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0007, 0.042, 0.077, 0.168, 0.294, 0.462, 0.623");
        values ( \
          "0.056071, 0.293536, 0.500351, 1.038148, 1.782786, 2.775636, 3.727116", \
          "0.056502, 0.293530, 0.500349, 1.038147, 1.782786, 2.775634, 3.727116", \
          "0.070055, 0.295435, 0.500949, 1.038145, 1.782783, 2.775636, 3.727114", \
          "0.085516, 0.299257, 0.503271, 1.039914, 1.783215, 2.775634, 3.727114", \
          "0.098412, 0.306756, 0.506928, 1.041494, 1.784890, 2.776512, 3.727176", \
          "0.110393, 0.317258, 0.513617, 1.045027, 1.786382, 2.777796, 3.728374", \
          "0.123498, 0.330859, 0.522979, 1.052589, 1.790201, 2.779404, 3.729600");
      }
      cell_fall(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0007, 0.042, 0.077, 0.168, 0.294, 0.462, 0.623");
        values ( \
          "0.141301, 0.255122, 0.338176, 0.550696, 0.844363, 1.235725, 1.610717", \
          "0.168212, 0.282020, 0.365126, 0.577784, 0.871478, 1.262856, 1.637856", \
          "0.272939, 0.391617, 0.474985, 0.687485, 0.981095, 1.372438, 1.747424", \
          "0.391572, 0.519345, 0.604222, 0.817427, 1.110959, 1.501989, 1.876833", \
          "0.497823, 0.633625, 0.719954, 0.933268, 1.226939, 1.618331, 1.992974", \
          "0.601685, 0.745545, 0.833844, 1.048195, 1.341689, 1.733037, 2.108184", \
          "0.715246, 0.867784, 0.958752, 1.175319, 1.469391, 1.860611, 2.235550");
      }
      fall_transition(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0007, 0.042, 0.077, 0.168, 0.294, 0.462, 0.623");
        values ( \
          "0.055375, 0.212459, 0.349532, 0.714076, 1.220763, 1.896281, 2.543604", \
          "0.055435, 0.212499, 0.349541, 0.714075, 1.220752, 1.896279, 2.543604", \
          "0.067117, 0.217403, 0.351100, 0.714140, 1.220759, 1.896283, 2.543604", \
          "0.083870, 0.229439, 0.358941, 0.717698, 1.221727, 1.896289, 2.543604", \
          "0.097535, 0.241120, 0.366296, 0.720168, 1.224861, 1.898260, 2.544120", \
          "0.110366, 0.254047, 0.375685, 0.724037, 1.226421, 1.900624, 2.546386", \
          "0.124310, 0.269654, 0.388135, 0.731159, 1.229981, 1.902321, 2.548578");
      }
    }
    internal_power() {
      related_pin : "B";
      rise_power(energy_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0007, 0.042, 0.077, 0.168, 0.294, 0.462, 0.623");
        values ( \
          "0.021749, 0.021461, 0.020778, 0.018632, 0.015454, 0.011134, 0.006963", \
          "0.022264, 0.021408, 0.020776, 0.018728, 0.015621, 0.011339, 0.007188", \
          "0.027311, 0.023820, 0.022262, 0.019375, 0.015925, 0.011483, 0.007262", \
          "0.039618, 0.032789, 0.029610, 0.024262, 0.019244, 0.013805, 0.009065", \
          "0.054126, 0.045500, 0.040298, 0.032458, 0.025400, 0.018423, 0.012791", \
          "0.070552, 0.060533, 0.053670, 0.043412, 0.034169, 0.025347, 0.018558", \
          "0.090449, 0.078897, 0.072449, 0.058052, 0.046425, 0.035408, 0.027151");
      }
      fall_power(energy_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0007, 0.042, 0.077, 0.168, 0.294, 0.462, 0.623");
        values ( \
          "0.007328, 0.008919, 0.009172, 0.009298, 0.009347, 0.009372, 0.009384", \
          "0.006817, 0.008511, 0.008800, 0.009028, 0.009124, 0.009173, 0.009197", \
          "0.011177, 0.009529, 0.009427, 0.009365, 0.009338, 0.009319, 0.009308", \
          "0.022378, 0.016294, 0.014451, 0.012630, 0.011619, 0.010979, 0.010634", \
          "0.036523, 0.026597, 0.023104, 0.018689, 0.016110, 0.014387, 0.013428", \
          "0.052734, 0.039751, 0.034457, 0.027347, 0.022743, 0.019581, 0.017771", \
          "0.072456, 0.056774, 0.049652, 0.039469, 0.032337, 0.027287, 0.024321");
      }
    }
    timing() {
      related_pin : "B";
      timing_sense : negative_unate;
      cell_rise(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0007, 0.042, 0.077, 0.168, 0.294, 0.462, 0.623");
        values ( \
          "0.058515, 0.198812, 0.314854, 0.614982, 1.029781, 1.582578, 2.112258", \
          "0.086134, 0.225617, 0.341792, 0.642171, 1.057145, 1.610035, 2.139763", \
          "0.165419, 0.354702, 0.469804, 0.768325, 1.182514, 1.735040, 2.264607", \
          "0.265970, 0.527819, 0.685289, 1.000250, 1.411196, 1.961510, 2.489903", \
          "0.363239, 0.675303, 0.867376, 1.253821, 1.673540, 2.220778, 2.747239", \
          "0.462558, 0.817666, 1.036410, 1.486099, 1.965451, 2.512432, 3.036609", \
          "0.574772, 0.973250, 1.216700, 1.723530, 2.274004, 2.865205, 3.387142");
      }
      rise_transition(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0007, 0.042, 0.077, 0.168, 0.294, 0.462, 0.623");
        values ( \
          "0.068634, 0.317322, 0.527478, 1.074182, 1.831314, 2.840698, 3.807904", \
          "0.078866, 0.317288, 0.527448, 1.074177, 1.831315, 2.840698, 3.807904", \
          "0.140604, 0.350090, 0.530009, 1.074171, 1.831317, 2.840696, 3.807902", \
          "0.204856, 0.505291, 0.671161, 1.095117, 1.831312, 2.840696, 3.807902", \
          "0.262432, 0.626745, 0.839586, 1.246296, 1.859609, 2.840694, 3.807904", \
          "0.318673, 0.733236, 0.983271, 1.465391, 2.002460, 2.863570, 3.807900", \
          "0.379887, 0.843157, 1.124705, 1.685729, 2.256958, 3.002518, 3.844392");
      }
      cell_fall(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0007, 0.042, 0.077, 0.168, 0.294, 0.462, 0.623");
        values ( \
          "0.044582, 0.146707, 0.229183, 0.441792, 0.735497, 1.126876, 1.501875", \
          "0.053396, 0.161802, 0.244568, 0.457479, 0.751315, 1.142761, 1.517793", \
          "0.055431, 0.217752, 0.313730, 0.530212, 0.824503, 1.216161, 1.591282", \
          "0.030467, 0.260867, 0.388484, 0.651591, 0.957770, 1.349580, 1.724670", \
          "-0.008686, 0.276570, 0.432381, 0.744018, 1.093120, 1.500803, 1.875926", \
          "-0.058874, 0.274950, 0.456592, 0.814852, 1.206555, 1.654487, 2.044424", \
          "-0.124545, 0.257898, 0.465869, 0.872907, 1.310701, 1.802452, 2.225018");
      }
      fall_transition(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0007, 0.042, 0.077, 0.168, 0.294, 0.462, 0.623");
        values ( \
          "0.036572, 0.207042, 0.347911, 0.714004, 1.220757, 1.896284, 2.543604", \
          "0.049619, 0.206719, 0.347833, 0.714001, 1.220750, 1.896280, 2.543604", \
          "0.098012, 0.259945, 0.377049, 0.714494, 1.220761, 1.896284, 2.543604", \
          "0.172336, 0.366362, 0.495555, 0.803222, 1.242439, 1.896265, 2.543602", \
          "0.240267, 0.472337, 0.613807, 0.940242, 1.359309, 1.941434, 2.551294", \
          "0.306113, 0.578125, 0.734550, 1.080455, 1.515987, 2.068304, 2.625882", \
          "0.377693, 0.692736, 0.867901, 1.237923, 1.691645, 2.260220, 2.786388");
      }
    }
    max_capacitance : 0.623000;
  }
  cell_leakage_power : 829.342476;
}
}
