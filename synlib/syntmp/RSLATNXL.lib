library(slow) {
    delay_model : table_lookup;
  in_place_swap_mode : match_footprint;
  library_features(report_delay_calculation);
    date : "Mon Oct 21 09:59:52 PDT 2002";
  comment : "Copyright (c) 2002 Artisan Components, Inc.  All Rights Reserved.";
    time_unit : "1ns";
  voltage_unit : "1V";
  current_unit : "1mA";
  pulling_resistance_unit : "1kohm";
  leakage_power_unit : "1pW";
  capacitive_load_unit (1.0,pf);
    nom_process     : 1;
  nom_temperature : 125;
  nom_voltage     : 1.62;
  operating_conditions(slow) {
    process	: 1;
    temperature	: 125;
    voltage	: 1.62;
    tree_type	: balanced_tree;
  }
  default_operating_conditions : slow;
    slew_lower_threshold_pct_fall : 10.0;
  slew_upper_threshold_pct_fall : 90.0;
  slew_lower_threshold_pct_rise : 10.0;
  slew_upper_threshold_pct_rise : 90.0;
  input_threshold_pct_fall      : 50.0;
  input_threshold_pct_rise      : 50.0;
  output_threshold_pct_fall     : 50.0;
  output_threshold_pct_rise     : 50.0;
    default_leakage_power_density	: 0.0;
  slew_derate_from_library	: 1;
  default_cell_leakage_power	: 0.0;
  default_fanout_load	: 1.0;
  default_output_pin_cap	: 0.0;
  default_inout_pin_cap	: 0.0035;
  default_input_pin_cap	: 0.0035;
  default_max_transition	: 4.5;
    lu_table_template(delay_template_7x1) {
    variable_1 : input_net_transition;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(energy_template_7x1) {
    variable_1 : input_transition_time;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(delay_template_7x7) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(energy_template_7x7) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(energy_template_1x7) {
    variable_1 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(energy_template_7x3x3) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    variable_3 : equal_or_opposite_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002");
    index_3 ("1000, 1001, 1002");
  }
  power_lut_template(passive_energy_template_1x7) {
    variable_1 : input_transition_time;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(setup_template_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 1001, 1002");
    index_2 ("1000, 1001, 1002");
  }
  lu_table_template(hold_template_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 1001, 1002");
    index_2 ("1000, 1001, 1002");
  }
  lu_table_template(recovery_template_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 1001, 1002");
    index_2 ("1000, 1001, 1002");
  }
  lu_table_template(removal_template_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 1001, 1002");
    index_2 ("1000, 1001, 1002");
  }
    k_process_cell_leakage_power	: 0;
  k_temp_cell_leakage_power	: 0;
  k_volt_cell_leakage_power	: 0;
  k_process_internal_power	: 0;
  k_temp_internal_power	: 0;
  k_volt_internal_power	: 0;
  k_process_rise_transition	: 1;
  k_temp_rise_transition	: 0;
  k_volt_rise_transition	: 0;
  k_process_fall_transition	: 1;
  k_temp_fall_transition	: 0;
  k_volt_fall_transition	: 0;
  k_process_setup_rise	: 1;
  k_temp_setup_rise	: 0;
  k_volt_setup_rise	: 0;
  k_process_setup_fall	: 1;
  k_temp_setup_fall	: 0;
  k_volt_setup_fall	: 0;
  k_process_hold_rise	: 1;
  k_temp_hold_rise	: 0;
  k_volt_hold_rise	: 0;
  k_process_hold_fall	: 1;
  k_temp_hold_fall	: 0;
  k_volt_hold_fall	: 0;
  k_process_min_pulse_width_high	: 1;
  k_temp_min_pulse_width_high	: 0;
  k_volt_min_pulse_width_high	: 0;
  k_process_min_pulse_width_low	: 1;
  k_temp_min_pulse_width_low	: 0;
  k_volt_min_pulse_width_low	: 0;
  k_process_recovery_rise	: 1;
  k_temp_recovery_rise	: 0;
  k_volt_recovery_rise	: 0;
  k_process_recovery_fall	: 1;
  k_temp_recovery_fall	: 0;
  k_volt_recovery_fall	: 0;
  k_process_cell_rise	: 1;
  k_temp_cell_rise	: 0;
  k_volt_cell_rise	: 0;
  k_process_cell_fall	: 1;
  k_temp_cell_fall	: 0;
  k_volt_cell_fall	: 0;
  k_process_wire_cap	: 0;
  k_temp_wire_cap	: 0;
  k_volt_wire_cap	: 0;
  k_process_wire_res	: 0;
  k_temp_wire_res	: 0;
  k_volt_wire_res	: 0;
  k_process_pin_cap	: 0;
  k_temp_pin_cap	: 0;
  k_volt_pin_cap	: 0;
    output_voltage(GENERAL) {
    vol	: 0.4;
    voh	: VDD - 0.4;
    vomin	: -0.5;
    vomax	: VDD + 0.5;
  }
  input_voltage(CMOS) {
    vil	: 0.3 * VDD;
    vih	: 0.7 * VDD;
    vimin	: -0.5;
    vimax	: VDD + 0.5;
  }
  input_voltage(TTL) {
    vil	: 0.8;
    vih	: 2;
    vimin	: -0.5;
    vimax	: VDD + 0.5;
  }
    wire_load("tsmc18_wl10") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 66.667;
    fanout_length	(1,66.667);
  }
  wire_load("tsmc18_wl20") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 133.334;
    fanout_length	(1,133.334);
  }
  wire_load("tsmc18_wl30") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 200.001;
    fanout_length	(1,200.001);
  }
  wire_load("tsmc18_wl40") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 266.668;
    fanout_length	(1,266.668);
  }
  wire_load("tsmc18_wl50") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 333.335;
    fanout_length	(1,333.335);
  }
    wire_load("ForQA") {
    resistance	: 0;
    capacitance	: 1;
    area	: 1;
    slope	: 1;
    fanout_length(1,0);
    fanout_length(10,0);
  }
    
cell (RSLATNXL) { 
  cell_footprint : rslatn;
  area : 33.264000;
  pin(SN) {
    direction : input;
    clock : true;
    capacitance : 0.002058;
    max_transition : 3.300000;
    internal_power() {
      rise_power(passive_energy_template_1x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        values ("0.003329, 0.003265, 0.004327, 0.007387, 0.011206, 0.015608, 0.020997");
      }
      fall_power(passive_energy_template_1x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        values ("0.008845, 0.008858, 0.010310, 0.013481, 0.017306, 0.021699, 0.027077");
      }
    }
    min_pulse_width_low : 0.215938;
    timing() {
      related_pin : "RN";
      timing_type : hold_rising;
      rise_constraint(scalar) {
        values ("0.215938");
      }
    }
  }
  pin(RN) {
    direction : input;
    clock : true;
    capacitance : 0.002166;
    max_transition : 3.300000;
    internal_power() {
      rise_power(passive_energy_template_1x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        values ("0.003575, 0.003509, 0.004551, 0.007601, 0.011414, 0.015810, 0.021199");
      }
      fall_power(passive_energy_template_1x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        values ("0.008571, 0.008821, 0.010253, 0.013416, 0.017236, 0.021625, 0.026999");
      }
    }
    min_pulse_width_low : 0.230494;
    timing() {
      related_pin : "SN";
      timing_type : hold_rising;
      rise_constraint(scalar) {
        values ("0.230494");
      }
    }
  }
  latch(IQ,IQN) {
    clear  : "!RN";
    preset : "!SN";
    clear_preset_var1 : H;
    clear_preset_var2 : H;
  }
  pin(Q) {
    direction : output;
    capacitance : 0.0;
    function : "IQ";
    internal_power() {
      related_pin : "SN";
      equal_or_opposite_output : "QN";
      when : "RN";
      rise_power(energy_template_7x3x3) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.000175, 0.042, 0.15575");
        index_3 ("0.000175, 0.042, 0.15575");
        values ( \
          "0.033172, 0.036828, 0.036948", "0.036558, 0.036308, 0.037390", "0.033733, 0.033487, 0.033520", \
          "0.033407, 0.037038, 0.037186", "0.036775, 0.036527, 0.037623", "0.033946, 0.033700, 0.033733", \
          "0.033372, 0.037029, 0.037146", "0.036757, 0.036503, 0.037595", "0.033960, 0.033710, 0.033743", \
          "0.035023, 0.037045, 0.037163", "0.036746, 0.036489, 0.037582", "0.033972, 0.033719, 0.033753", \
          "0.037463, 0.037142, 0.037261", "0.036758, 0.036506, 0.037599", "0.033997, 0.033755, 0.033790", \
          "0.037689, 0.037420, 0.037433", "0.036811, 0.036550, 0.037655", "0.034066, 0.033809, 0.033845", \
          "0.037907, 0.037645, 0.037640", "0.037735, 0.037480, 0.037785", "0.034191, 0.033941, 0.033980");
      }
      fall_power(scalar) {
        values ("0.0");
      }
    }
    internal_power() {
      related_pin : "RN";
      equal_or_opposite_output : "QN";
      when : "SN";
      rise_power(scalar) {
        values ("0.0");
      }
      fall_power(energy_template_7x3x3) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.000175, 0.042, 0.15575");
        index_3 ("0.000175, 0.042, 0.15575");
        values ( \
          "0.033616, 0.037048, 0.034234", "0.037291, 0.036808, 0.034000", "0.037397, 0.037898, 0.034037", \
          "0.033734, 0.037231, 0.034415", "0.037484, 0.036996, 0.034185", "0.037550, 0.038092, 0.034223", \
          "0.033698, 0.037126, 0.034335", "0.037387, 0.036880, 0.034094", "0.037503, 0.037981, 0.034132", \
          "0.035517, 0.037093, 0.034323", "0.037403, 0.036851, 0.034085", "0.037524, 0.037951, 0.034126", \
          "0.037799, 0.036996, 0.034100", "0.037483, 0.036755, 0.033866", "0.037602, 0.037850, 0.033906", \
          "0.038006, 0.037148, 0.034408", "0.037752, 0.036906, 0.034169", "0.037764, 0.038014, 0.034207", \
          "0.038202, 0.038051, 0.034519", "0.037958, 0.037807, 0.034277", "0.037968, 0.038124, 0.034323");
      }
    }
    internal_power() {
      power(scalar) {
        values ("0.0");
      }
    }
    timing() {
      related_pin : "SN";
      timing_type : preset;
      timing_sense : negative_unate;
      cell_rise(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.000175, 0.0105, 0.01925, 0.042, 0.0735, 0.1155, 0.15575");
        values ( \
          "0.233054, 0.337648, 0.420234, 0.632182, 0.923812, 1.311859, 1.683597", \
          "0.260693, 0.365242, 0.447809, 0.659764, 0.951397, 1.339446, 1.711183", \
          "0.368585, 0.473360, 0.555861, 0.767840, 1.059542, 1.447638, 1.819401", \
          "0.500608, 0.605986, 0.688408, 0.900364, 1.192109, 1.580256, 1.952050", \
          "0.625404, 0.731537, 0.813909, 1.025790, 1.317547, 1.705734, 2.077551", \
          "0.750985, 0.858063, 0.940374, 1.152172, 1.443927, 1.832126, 2.203968", \
          "0.891051, 0.999320, 1.081577, 1.293284, 1.585016, 1.973226, 2.345074");
      }
      rise_transition(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.000175, 0.0105, 0.01925, 0.042, 0.0735, 0.1155, 0.15575");
        values ( \
          "0.063666, 0.226537, 0.372796, 0.755291, 1.285631, 1.993907, 2.672668", \
          "0.063770, 0.226559, 0.372804, 0.755298, 1.285632, 1.993906, 2.672668", \
          "0.065065, 0.226837, 0.372819, 0.755287, 1.285633, 1.993907, 2.672672", \
          "0.067122, 0.227377, 0.372988, 0.755322, 1.285651, 1.993903, 2.672668", \
          "0.069220, 0.228063, 0.373191, 0.755293, 1.285642, 1.993909, 2.672688", \
          "0.071313, 0.228842, 0.373397, 0.755324, 1.285651, 1.993918, 2.672680", \
          "0.073789, 0.229806, 0.373708, 0.755389, 1.285703, 1.993922, 2.672684");
      }
      cell_fall(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.000175, 0.0105, 0.01925, 0.042, 0.0735, 0.1155, 0.15575");
        values ( \
          "0.297169, 0.391292, 0.447581, 0.569998, 0.722656, 0.919247, 1.106077", \
          "0.315489, 0.409580, 0.465860, 0.588288, 0.740946, 0.937540, 1.124370", \
          "0.347072, 0.441183, 0.497489, 0.619960, 0.772633, 0.969232, 1.156064", \
          "0.353680, 0.447833, 0.504190, 0.626751, 0.779472, 0.976097, 1.162940", \
          "0.339097, 0.433531, 0.490034, 0.612815, 0.765654, 0.962312, 1.149149", \
          "0.309952, 0.404738, 0.461414, 0.584438, 0.737448, 0.934195, 1.121065", \
          "0.264684, 0.359910, 0.416766, 0.540083, 0.693261, 0.890120, 1.077048");
      }
      fall_transition(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.000175, 0.0105, 0.01925, 0.042, 0.0735, 0.1155, 0.15575");
        values ( \
          "0.074864, 0.169330, 0.234811, 0.400114, 0.635923, 0.962067, 1.280394", \
          "0.075103, 0.169435, 0.234878, 0.400119, 0.635952, 0.962074, 1.280396", \
          "0.075351, 0.169710, 0.235081, 0.400210, 0.635988, 0.962087, 1.280400", \
          "0.075572, 0.169963, 0.235364, 0.400419, 0.636134, 0.962164, 1.280456", \
          "0.075887, 0.170653, 0.236007, 0.400993, 0.636434, 0.962256, 1.280447", \
          "0.077118, 0.171588, 0.236911, 0.401728, 0.636971, 0.962599, 1.280644", \
          "0.077814, 0.172642, 0.237952, 0.402513, 0.637632, 0.963070, 1.281005");
      }
    }
    timing() {
      related_pin : "RN";
      timing_type : clear;
      timing_sense : positive_unate;
      cell_fall(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.000175, 0.0105, 0.01925, 0.042, 0.0735, 0.1155, 0.15575");
        values ( \
          "0.460464, 0.554551, 0.610830, 0.733269, 0.885932, 1.082528, 1.269361", \
          "0.487972, 0.582073, 0.638361, 0.760792, 0.913459, 1.110057, 1.296889", \
          "0.595004, 0.689070, 0.745349, 0.867788, 1.020453, 1.217049, 1.403882", \
          "0.725735, 0.819811, 0.876089, 0.998520, 1.151184, 1.347780, 1.534613", \
          "0.849420, 0.943464, 0.999738, 1.122183, 1.274858, 1.471466, 1.658293", \
          "0.974084, 1.068092, 1.124364, 1.246805, 1.399475, 1.596081, 1.782920", \
          "1.113403, 1.207356, 1.263624, 1.386048, 1.538706, 1.735300, 1.922129");
      }
      fall_transition(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.000175, 0.0105, 0.01925, 0.042, 0.0735, 0.1155, 0.15575");
        values ( \
          "0.075246, 0.169510, 0.234921, 0.400133, 0.635958, 0.962072, 1.280396", \
          "0.075182, 0.169472, 0.234919, 0.400126, 0.635945, 0.962076, 1.280396", \
          "0.075229, 0.169515, 0.234924, 0.400132, 0.635959, 0.962070, 1.280395", \
          "0.075283, 0.169533, 0.234933, 0.400150, 0.635961, 0.962073, 1.280396", \
          "0.075239, 0.169528, 0.234936, 0.400141, 0.635969, 0.962089, 1.280395", \
          "0.074857, 0.169428, 0.234824, 0.400129, 0.635943, 0.962103, 1.280433", \
          "0.074829, 0.169384, 0.234791, 0.400080, 0.635879, 0.962058, 1.280405");
      }
    }
    max_capacitance : 0.155750;
  }
  pin(QN) {
    direction : output;
    capacitance : 0.0;
    function : "IQN";
    timing() {
      related_pin : "SN";
      timing_type : clear;
      timing_sense : positive_unate;
      cell_fall(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.000175, 0.0105, 0.01925, 0.042, 0.0735, 0.1155, 0.15575");
        values ( \
          "0.465085, 0.559394, 0.615973, 0.738916, 0.891884, 1.088617, 1.275486", \
          "0.492633, 0.586947, 0.643513, 0.766450, 0.919427, 1.116165, 1.303035", \
          "0.600009, 0.694306, 0.750883, 0.873812, 1.026790, 1.223529, 1.410399", \
          "0.731102, 0.825474, 0.882087, 1.005083, 1.158084, 1.354827, 1.541692", \
          "0.854949, 0.949266, 1.005872, 1.128881, 1.281943, 1.478796, 1.665698", \
          "0.979949, 1.074207, 1.130792, 1.253758, 1.406797, 1.603613, 1.790562", \
          "1.119577, 1.213806, 1.270375, 1.393319, 1.546332, 1.743121, 1.930047");
      }
      fall_transition(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.000175, 0.0105, 0.01925, 0.042, 0.0735, 0.1155, 0.15575");
        values ( \
          "0.077189, 0.171725, 0.237279, 0.402414, 0.637866, 0.963558, 1.281653", \
          "0.077295, 0.171710, 0.237281, 0.402392, 0.637867, 0.963550, 1.281649", \
          "0.077274, 0.171750, 0.237293, 0.402416, 0.637862, 0.963558, 1.281655", \
          "0.077382, 0.171904, 0.237479, 0.402545, 0.637913, 0.963577, 1.281660", \
          "0.077328, 0.171871, 0.237442, 0.402656, 0.638236, 0.963895, 1.281866", \
          "0.077345, 0.171808, 0.237362, 0.402546, 0.638081, 0.963931, 1.282166", \
          "0.077355, 0.171783, 0.237328, 0.402461, 0.637987, 0.963799, 1.282010");
      }
    }
    timing() {
      related_pin : "RN";
      timing_type : preset;
      timing_sense : negative_unate;
      cell_rise(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.000175, 0.0105, 0.01925, 0.042, 0.0735, 0.1155, 0.15575");
        values ( \
          "0.236106, 0.340599, 0.423146, 0.635087, 0.926698, 1.314758, 1.686504", \
          "0.263611, 0.368099, 0.450663, 0.662615, 0.954235, 1.342294, 1.714041", \
          "0.371583, 0.476275, 0.558754, 0.770727, 1.062405, 1.450512, 1.822283", \
          "0.503412, 0.608617, 0.691016, 0.902957, 1.194682, 1.582836, 1.954638", \
          "0.627948, 0.733829, 0.816156, 1.028023, 1.319757, 1.707947, 2.079772", \
          "0.753238, 0.859936, 0.942199, 1.154007, 1.445740, 1.833946, 2.205791", \
          "0.893002, 1.000783, 1.082996, 1.294700, 1.586412, 1.974630, 2.346485");
      }
      rise_transition(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.000175, 0.0105, 0.01925, 0.042, 0.0735, 0.1155, 0.15575");
        values ( \
          "0.065556, 0.228176, 0.374358, 0.756833, 1.287285, 1.995563, 2.674336", \
          "0.065596, 0.228175, 0.374338, 0.756823, 1.287295, 1.995572, 2.674336", \
          "0.066802, 0.228426, 0.374383, 0.756826, 1.287296, 1.995569, 2.674336", \
          "0.068786, 0.228957, 0.374483, 0.756833, 1.287321, 1.995573, 2.674338", \
          "0.070826, 0.229567, 0.374665, 0.756800, 1.287316, 1.995585, 2.674346", \
          "0.072609, 0.230172, 0.374856, 0.756837, 1.287291, 1.995581, 2.674332", \
          "0.075003, 0.231115, 0.375173, 0.756887, 1.287337, 1.995565, 2.674330");
      }
      cell_fall(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.000175, 0.0105, 0.01925, 0.042, 0.0735, 0.1155, 0.15575");
        values ( \
          "0.300390, 0.394754, 0.451324, 0.574261, 0.727238, 0.923983, 1.110856", \
          "0.319213, 0.413540, 0.470105, 0.593033, 0.746011, 0.942750, 1.129623", \
          "0.351538, 0.445826, 0.502435, 0.625412, 0.778406, 0.975147, 1.162014", \
          "0.358506, 0.452857, 0.509500, 0.632528, 0.785555, 0.982316, 1.169198", \
          "0.344138, 0.438729, 0.495485, 0.618722, 0.771854, 0.968639, 1.155510", \
          "0.315044, 0.409966, 0.466901, 0.590386, 0.743678, 0.940555, 1.127458", \
          "0.269816, 0.365102, 0.422228, 0.545966, 0.699423, 0.896403, 1.083356");
      }
      fall_transition(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.000175, 0.0105, 0.01925, 0.042, 0.0735, 0.1155, 0.15575");
        values ( \
          "0.077068, 0.171633, 0.237226, 0.402369, 0.637858, 0.963550, 1.281647", \
          "0.077295, 0.171706, 0.237251, 0.402381, 0.637849, 0.963547, 1.281651", \
          "0.077297, 0.171923, 0.237418, 0.402474, 0.637886, 0.963566, 1.281655", \
          "0.077586, 0.172155, 0.237652, 0.402638, 0.637977, 0.963603, 1.281695", \
          "0.078329, 0.172860, 0.238310, 0.403144, 0.638235, 0.963663, 1.281649", \
          "0.078778, 0.173638, 0.239149, 0.403811, 0.638797, 0.963993, 1.281824", \
          "0.080102, 0.174754, 0.240057, 0.404653, 0.639368, 0.964459, 1.282192");
      }
    }
    max_capacitance : 0.155750;
  }
  cell_leakage_power : 1158.955938;
}
}
