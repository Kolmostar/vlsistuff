library(slow) {
    delay_model : table_lookup;
  in_place_swap_mode : match_footprint;
  library_features(report_delay_calculation);
    date : "Mon Oct 21 09:59:52 PDT 2002";
  comment : "Copyright (c) 2002 Artisan Components, Inc.  All Rights Reserved.";
    time_unit : "1ns";
  voltage_unit : "1V";
  current_unit : "1mA";
  pulling_resistance_unit : "1kohm";
  leakage_power_unit : "1pW";
  capacitive_load_unit (1.0,pf);
    nom_process     : 1;
  nom_temperature : 125;
  nom_voltage     : 1.62;
  operating_conditions(slow) {
    process	: 1;
    temperature	: 125;
    voltage	: 1.62;
    tree_type	: balanced_tree;
  }
  default_operating_conditions : slow;
    slew_lower_threshold_pct_fall : 10.0;
  slew_upper_threshold_pct_fall : 90.0;
  slew_lower_threshold_pct_rise : 10.0;
  slew_upper_threshold_pct_rise : 90.0;
  input_threshold_pct_fall      : 50.0;
  input_threshold_pct_rise      : 50.0;
  output_threshold_pct_fall     : 50.0;
  output_threshold_pct_rise     : 50.0;
    default_leakage_power_density	: 0.0;
  slew_derate_from_library	: 1;
  default_cell_leakage_power	: 0.0;
  default_fanout_load	: 1.0;
  default_output_pin_cap	: 0.0;
  default_inout_pin_cap	: 0.0035;
  default_input_pin_cap	: 0.0035;
  default_max_transition	: 4.5;
    lu_table_template(delay_template_7x1) {
    variable_1 : input_net_transition;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(energy_template_7x1) {
    variable_1 : input_transition_time;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(delay_template_7x7) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(energy_template_7x7) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(energy_template_1x7) {
    variable_1 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(energy_template_7x3x3) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    variable_3 : equal_or_opposite_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002");
    index_3 ("1000, 1001, 1002");
  }
  power_lut_template(passive_energy_template_1x7) {
    variable_1 : input_transition_time;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(setup_template_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 1001, 1002");
    index_2 ("1000, 1001, 1002");
  }
  lu_table_template(hold_template_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 1001, 1002");
    index_2 ("1000, 1001, 1002");
  }
  lu_table_template(recovery_template_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 1001, 1002");
    index_2 ("1000, 1001, 1002");
  }
  lu_table_template(removal_template_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 1001, 1002");
    index_2 ("1000, 1001, 1002");
  }
    k_process_cell_leakage_power	: 0;
  k_temp_cell_leakage_power	: 0;
  k_volt_cell_leakage_power	: 0;
  k_process_internal_power	: 0;
  k_temp_internal_power	: 0;
  k_volt_internal_power	: 0;
  k_process_rise_transition	: 1;
  k_temp_rise_transition	: 0;
  k_volt_rise_transition	: 0;
  k_process_fall_transition	: 1;
  k_temp_fall_transition	: 0;
  k_volt_fall_transition	: 0;
  k_process_setup_rise	: 1;
  k_temp_setup_rise	: 0;
  k_volt_setup_rise	: 0;
  k_process_setup_fall	: 1;
  k_temp_setup_fall	: 0;
  k_volt_setup_fall	: 0;
  k_process_hold_rise	: 1;
  k_temp_hold_rise	: 0;
  k_volt_hold_rise	: 0;
  k_process_hold_fall	: 1;
  k_temp_hold_fall	: 0;
  k_volt_hold_fall	: 0;
  k_process_min_pulse_width_high	: 1;
  k_temp_min_pulse_width_high	: 0;
  k_volt_min_pulse_width_high	: 0;
  k_process_min_pulse_width_low	: 1;
  k_temp_min_pulse_width_low	: 0;
  k_volt_min_pulse_width_low	: 0;
  k_process_recovery_rise	: 1;
  k_temp_recovery_rise	: 0;
  k_volt_recovery_rise	: 0;
  k_process_recovery_fall	: 1;
  k_temp_recovery_fall	: 0;
  k_volt_recovery_fall	: 0;
  k_process_cell_rise	: 1;
  k_temp_cell_rise	: 0;
  k_volt_cell_rise	: 0;
  k_process_cell_fall	: 1;
  k_temp_cell_fall	: 0;
  k_volt_cell_fall	: 0;
  k_process_wire_cap	: 0;
  k_temp_wire_cap	: 0;
  k_volt_wire_cap	: 0;
  k_process_wire_res	: 0;
  k_temp_wire_res	: 0;
  k_volt_wire_res	: 0;
  k_process_pin_cap	: 0;
  k_temp_pin_cap	: 0;
  k_volt_pin_cap	: 0;
    output_voltage(GENERAL) {
    vol	: 0.4;
    voh	: VDD - 0.4;
    vomin	: -0.5;
    vomax	: VDD + 0.5;
  }
  input_voltage(CMOS) {
    vil	: 0.3 * VDD;
    vih	: 0.7 * VDD;
    vimin	: -0.5;
    vimax	: VDD + 0.5;
  }
  input_voltage(TTL) {
    vil	: 0.8;
    vih	: 2;
    vimin	: -0.5;
    vimax	: VDD + 0.5;
  }
    wire_load("tsmc18_wl10") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 66.667;
    fanout_length	(1,66.667);
  }
  wire_load("tsmc18_wl20") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 133.334;
    fanout_length	(1,133.334);
  }
  wire_load("tsmc18_wl30") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 200.001;
    fanout_length	(1,200.001);
  }
  wire_load("tsmc18_wl40") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 266.668;
    fanout_length	(1,266.668);
  }
  wire_load("tsmc18_wl50") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 333.335;
    fanout_length	(1,333.335);
  }
    wire_load("ForQA") {
    resistance	: 0;
    capacitance	: 1;
    area	: 1;
    slope	: 1;
    fanout_length(1,0);
    fanout_length(10,0);
  }
    
cell (AND2X4) { 
  cell_footprint : and2;
  area : 16.632000;
  pin(A) {
    direction : input;
    capacitance : 0.005733;
  }
  pin(B) {
    direction : input;
    capacitance : 0.006249;
  }
  pin(Y) {
    direction : output;
    capacitance : 0.0;
    function : "(A B)";
    internal_power() {
      related_pin : "A";
      rise_power(energy_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0014, 0.084, 0.154, 0.336, 0.588, 0.924, 1.246");
        values ( \
          "0.030592, 0.029876, 0.028693, 0.024325, 0.017929, 0.009208, 0.000810", \
          "0.029986, 0.029350, 0.028062, 0.023852, 0.017482, 0.008800, 0.000396", \
          "0.034426, 0.031636, 0.030115, 0.025936, 0.019694, 0.011100, 0.002764", \
          "0.045110, 0.040221, 0.037129, 0.032594, 0.026283, 0.017710, 0.009400", \
          "0.057669, 0.051359, 0.049371, 0.041592, 0.035109, 0.026470, 0.018147", \
          "0.071957, 0.063264, 0.062068, 0.052427, 0.045724, 0.036984, 0.028619", \
          "0.089276, 0.078005, 0.076293, 0.072494, 0.058954, 0.050051, 0.041621");
      }
      fall_power(energy_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0014, 0.084, 0.154, 0.336, 0.588, 0.924, 1.246");
        values ( \
          "0.041292, 0.046816, 0.047361, 0.047711, 0.047854, 0.047922, 0.047949", \
          "0.041152, 0.046506, 0.047039, 0.047428, 0.047577, 0.047639, 0.047672", \
          "0.047738, 0.048925, 0.049408, 0.049856, 0.050066, 0.050183, 0.050239", \
          "0.063232, 0.057220, 0.056986, 0.057207, 0.057377, 0.057488, 0.057547", \
          "0.076173, 0.067346, 0.066804, 0.066439, 0.066509, 0.066598, 0.066651", \
          "0.090463, 0.079037, 0.078054, 0.077441, 0.077250, 0.077264, 0.077281", \
          "0.107553, 0.093455, 0.091979, 0.090919, 0.090466, 0.090347, 0.090331");
      }
    }
    timing() {
      related_pin : "A";
      timing_sense : positive_unate;
      cell_rise(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0014, 0.084, 0.154, 0.336, 0.588, 0.924, 1.246");
        values ( \
          "0.107390, 0.253013, 0.365165, 0.655299, 1.056404, 1.590978, 2.103205", \
          "0.129160, 0.274156, 0.386297, 0.676537, 1.077689, 1.612287, 2.124527", \
          "0.181691, 0.331722, 0.444129, 0.734178, 1.135368, 1.670025, 2.182299", \
          "0.210341, 0.368376, 0.480018, 0.770386, 1.171744, 1.706254, 2.218477", \
          "0.214154, 0.381775, 0.493558, 0.783126, 1.184527, 1.719447, 2.231551", \
          "0.202508, 0.379993, 0.492763, 0.782991, 1.184078, 1.718998, 2.231560", \
          "0.176126, 0.364332, 0.478683, 0.770713, 1.172696, 1.707392, 2.219843");
      }
      rise_transition(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0014, 0.084, 0.154, 0.336, 0.588, 0.924, 1.246");
        values ( \
          "0.044025, 0.272770, 0.475551, 1.004276, 1.736428, 2.712592, 3.648068", \
          "0.044080, 0.272880, 0.475550, 1.004300, 1.736433, 2.712592, 3.648066", \
          "0.054540, 0.276641, 0.477026, 1.004301, 1.736435, 2.712592, 3.648068", \
          "0.067792, 0.280887, 0.479487, 1.007510, 1.737515, 2.712592, 3.648070", \
          "0.080812, 0.289332, 0.483268, 1.008547, 1.740128, 2.714472, 3.648426", \
          "0.093654, 0.300845, 0.490178, 1.012014, 1.741264, 2.716386, 3.650586", \
          "0.107333, 0.315570, 0.499592, 1.019607, 1.745129, 2.717858, 3.652284");
      }
      cell_fall(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0014, 0.084, 0.154, 0.336, 0.588, 0.924, 1.246");
        values ( \
          "0.143218, 0.255395, 0.327042, 0.505246, 0.750027, 1.076064, 1.388419", \
          "0.169270, 0.281260, 0.352922, 0.531145, 0.775940, 1.101985, 1.414345", \
          "0.282024, 0.399496, 0.471654, 0.649871, 0.894592, 1.220604, 1.532950", \
          "0.416246, 0.545995, 0.621002, 0.800926, 1.045772, 1.371421, 1.683598", \
          "0.538604, 0.678142, 0.755584, 0.936604, 1.181626, 1.507910, 1.819853", \
          "0.659644, 0.808433, 0.888597, 1.071874, 1.317107, 1.643188, 1.955700", \
          "0.793345, 0.951728, 1.035280, 1.222066, 1.468491, 1.794738, 2.107084");
      }
      fall_transition(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0014, 0.084, 0.154, 0.336, 0.588, 0.924, 1.246");
        values ( \
          "0.044609, 0.177709, 0.287683, 0.586272, 1.006069, 1.566535, 2.103622", \
          "0.044733, 0.177789, 0.287710, 0.586267, 1.006080, 1.566531, 2.103620", \
          "0.054996, 0.183074, 0.289849, 0.586487, 1.006085, 1.566535, 2.103618", \
          "0.072285, 0.199657, 0.301997, 0.591913, 1.007682, 1.566583, 2.103620", \
          "0.085566, 0.214073, 0.312779, 0.596314, 1.011744, 1.569448, 2.104860", \
          "0.098167, 0.229116, 0.325208, 0.602645, 1.014219, 1.572460, 2.107684", \
          "0.111864, 0.246662, 0.340590, 0.612804, 1.019882, 1.575048, 2.110348");
      }
    }
    internal_power() {
      related_pin : "B";
      rise_power(energy_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0014, 0.084, 0.154, 0.336, 0.588, 0.924, 1.246");
        values ( \
          "0.029968, 0.029979, 0.028642, 0.024289, 0.017844, 0.009125, 0.000835", \
          "0.029711, 0.029220, 0.027871, 0.023695, 0.017262, 0.008595, 0.000159", \
          "0.033023, 0.030460, 0.029032, 0.024876, 0.018604, 0.009980, 0.001625", \
          "0.042159, 0.038315, 0.035138, 0.030742, 0.024457, 0.015877, 0.007557", \
          "0.054044, 0.048773, 0.047230, 0.039366, 0.032955, 0.024337, 0.016017", \
          "0.067839, 0.060438, 0.059484, 0.050063, 0.043455, 0.034755, 0.026405", \
          "0.084661, 0.075004, 0.073573, 0.070458, 0.056699, 0.047870, 0.039467");
      }
      fall_power(energy_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0014, 0.084, 0.154, 0.336, 0.588, 0.924, 1.246");
        values ( \
          "0.048044, 0.053992, 0.054611, 0.055144, 0.055376, 0.055519, 0.055586", \
          "0.048317, 0.053773, 0.054378, 0.054930, 0.055164, 0.055312, 0.055390", \
          "0.052558, 0.056112, 0.056686, 0.057260, 0.057566, 0.057756, 0.057859", \
          "0.070935, 0.064540, 0.064425, 0.064730, 0.064978, 0.065156, 0.065259", \
          "0.084142, 0.075182, 0.074510, 0.074181, 0.074344, 0.074505, 0.074608", \
          "0.098521, 0.087200, 0.086103, 0.085384, 0.085273, 0.085377, 0.085459", \
          "0.115609, 0.101909, 0.100359, 0.099237, 0.098747, 0.098825, 0.098868");
      }
    }
    timing() {
      related_pin : "B";
      timing_sense : positive_unate;
      cell_rise(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0014, 0.084, 0.154, 0.336, 0.588, 0.924, 1.246");
        values ( \
          "0.116429, 0.262089, 0.374262, 0.664374, 1.065448, 1.600001, 2.112217", \
          "0.132676, 0.277874, 0.390102, 0.680324, 1.081452, 1.616037, 2.128196", \
          "0.170500, 0.321661, 0.434116, 0.724262, 1.125445, 1.660080, 2.172340", \
          "0.184311, 0.345166, 0.457404, 0.747784, 1.149090, 1.683622, 2.195848", \
          "0.173998, 0.345331, 0.458514, 0.748797, 1.150119, 1.684920, 2.197045", \
          "0.148077, 0.329662, 0.444620, 0.736496, 1.137902, 1.672673, 2.185114", \
          "0.105382, 0.297733, 0.414980, 0.709719, 1.112771, 1.647659, 2.160008");
      }
      rise_transition(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0014, 0.084, 0.154, 0.336, 0.588, 0.924, 1.246");
        values ( \
          "0.043942, 0.272852, 0.475524, 1.004301, 1.736434, 2.712588, 3.648070", \
          "0.044248, 0.272813, 0.475553, 1.004281, 1.736430, 2.712592, 3.648068", \
          "0.052647, 0.276173, 0.476709, 1.004300, 1.736435, 2.712592, 3.648068", \
          "0.064694, 0.281939, 0.479417, 1.006669, 1.737246, 2.712588, 3.648066", \
          "0.076260, 0.291845, 0.484691, 1.008247, 1.739170, 2.713934, 3.648396", \
          "0.087365, 0.303987, 0.493232, 1.013029, 1.740822, 2.715396, 3.649852", \
          "0.099606, 0.318663, 0.504066, 1.022440, 1.746134, 2.717298, 3.651284");
      }
      cell_fall(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0014, 0.084, 0.154, 0.336, 0.588, 0.924, 1.246");
        values ( \
          "0.165531, 0.279695, 0.351814, 0.530521, 0.775568, 1.101782, 1.414239", \
          "0.191847, 0.305904, 0.378053, 0.556768, 0.801804, 1.128010, 1.440467", \
          "0.312447, 0.430012, 0.502351, 0.681091, 0.926124, 1.252333, 1.564794", \
          "0.460900, 0.591197, 0.666190, 0.846360, 1.091434, 1.417368, 1.729696", \
          "0.595677, 0.735513, 0.812520, 0.993749, 1.239242, 1.565757, 1.877927", \
          "0.730184, 0.878392, 0.957604, 1.140297, 1.385908, 1.712443, 2.025234", \
          "0.880180, 1.036956, 1.118750, 1.303741, 1.550018, 1.876702, 2.189397");
      }
      fall_transition(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0014, 0.084, 0.154, 0.336, 0.588, 0.924, 1.246");
        values ( \
          "0.047456, 0.179649, 0.289284, 0.587396, 1.006920, 1.567227, 2.104262", \
          "0.047635, 0.179629, 0.289268, 0.587403, 1.006919, 1.567231, 2.104264", \
          "0.055869, 0.182883, 0.290576, 0.587592, 1.006954, 1.567242, 2.104272", \
          "0.073239, 0.198900, 0.301823, 0.592399, 1.008325, 1.567457, 2.104386", \
          "0.086046, 0.211848, 0.311425, 0.596764, 1.012670, 1.570231, 2.105540", \
          "0.097385, 0.224431, 0.321444, 0.601727, 1.015087, 1.573636, 2.108642", \
          "0.109497, 0.238691, 0.333324, 0.608872, 1.019187, 1.576021, 2.111670");
      }
    }
    max_capacitance : 1.246000;
  }
  cell_leakage_power : 1266.842268;
}
}
