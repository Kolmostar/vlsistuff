library(slow) {
    delay_model : table_lookup;
  in_place_swap_mode : match_footprint;
  library_features(report_delay_calculation);
    date : "Mon Oct 21 09:59:52 PDT 2002";
  comment : "Copyright (c) 2002 Artisan Components, Inc.  All Rights Reserved.";
    time_unit : "1ns";
  voltage_unit : "1V";
  current_unit : "1mA";
  pulling_resistance_unit : "1kohm";
  leakage_power_unit : "1pW";
  capacitive_load_unit (1.0,pf);
    nom_process     : 1;
  nom_temperature : 125;
  nom_voltage     : 1.62;
  operating_conditions(slow) {
    process	: 1;
    temperature	: 125;
    voltage	: 1.62;
    tree_type	: balanced_tree;
  }
  default_operating_conditions : slow;
    slew_lower_threshold_pct_fall : 10.0;
  slew_upper_threshold_pct_fall : 90.0;
  slew_lower_threshold_pct_rise : 10.0;
  slew_upper_threshold_pct_rise : 90.0;
  input_threshold_pct_fall      : 50.0;
  input_threshold_pct_rise      : 50.0;
  output_threshold_pct_fall     : 50.0;
  output_threshold_pct_rise     : 50.0;
    default_leakage_power_density	: 0.0;
  slew_derate_from_library	: 1;
  default_cell_leakage_power	: 0.0;
  default_fanout_load	: 1.0;
  default_output_pin_cap	: 0.0;
  default_inout_pin_cap	: 0.0035;
  default_input_pin_cap	: 0.0035;
  default_max_transition	: 4.5;
    lu_table_template(delay_template_7x1) {
    variable_1 : input_net_transition;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(energy_template_7x1) {
    variable_1 : input_transition_time;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(delay_template_7x7) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(energy_template_7x7) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(energy_template_1x7) {
    variable_1 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(energy_template_7x3x3) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    variable_3 : equal_or_opposite_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002");
    index_3 ("1000, 1001, 1002");
  }
  power_lut_template(passive_energy_template_1x7) {
    variable_1 : input_transition_time;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(setup_template_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 1001, 1002");
    index_2 ("1000, 1001, 1002");
  }
  lu_table_template(hold_template_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 1001, 1002");
    index_2 ("1000, 1001, 1002");
  }
  lu_table_template(recovery_template_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 1001, 1002");
    index_2 ("1000, 1001, 1002");
  }
  lu_table_template(removal_template_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 1001, 1002");
    index_2 ("1000, 1001, 1002");
  }
    k_process_cell_leakage_power	: 0;
  k_temp_cell_leakage_power	: 0;
  k_volt_cell_leakage_power	: 0;
  k_process_internal_power	: 0;
  k_temp_internal_power	: 0;
  k_volt_internal_power	: 0;
  k_process_rise_transition	: 1;
  k_temp_rise_transition	: 0;
  k_volt_rise_transition	: 0;
  k_process_fall_transition	: 1;
  k_temp_fall_transition	: 0;
  k_volt_fall_transition	: 0;
  k_process_setup_rise	: 1;
  k_temp_setup_rise	: 0;
  k_volt_setup_rise	: 0;
  k_process_setup_fall	: 1;
  k_temp_setup_fall	: 0;
  k_volt_setup_fall	: 0;
  k_process_hold_rise	: 1;
  k_temp_hold_rise	: 0;
  k_volt_hold_rise	: 0;
  k_process_hold_fall	: 1;
  k_temp_hold_fall	: 0;
  k_volt_hold_fall	: 0;
  k_process_min_pulse_width_high	: 1;
  k_temp_min_pulse_width_high	: 0;
  k_volt_min_pulse_width_high	: 0;
  k_process_min_pulse_width_low	: 1;
  k_temp_min_pulse_width_low	: 0;
  k_volt_min_pulse_width_low	: 0;
  k_process_recovery_rise	: 1;
  k_temp_recovery_rise	: 0;
  k_volt_recovery_rise	: 0;
  k_process_recovery_fall	: 1;
  k_temp_recovery_fall	: 0;
  k_volt_recovery_fall	: 0;
  k_process_cell_rise	: 1;
  k_temp_cell_rise	: 0;
  k_volt_cell_rise	: 0;
  k_process_cell_fall	: 1;
  k_temp_cell_fall	: 0;
  k_volt_cell_fall	: 0;
  k_process_wire_cap	: 0;
  k_temp_wire_cap	: 0;
  k_volt_wire_cap	: 0;
  k_process_wire_res	: 0;
  k_temp_wire_res	: 0;
  k_volt_wire_res	: 0;
  k_process_pin_cap	: 0;
  k_temp_pin_cap	: 0;
  k_volt_pin_cap	: 0;
    output_voltage(GENERAL) {
    vol	: 0.4;
    voh	: VDD - 0.4;
    vomin	: -0.5;
    vomax	: VDD + 0.5;
  }
  input_voltage(CMOS) {
    vil	: 0.3 * VDD;
    vih	: 0.7 * VDD;
    vimin	: -0.5;
    vimax	: VDD + 0.5;
  }
  input_voltage(TTL) {
    vil	: 0.8;
    vih	: 2;
    vimin	: -0.5;
    vimax	: VDD + 0.5;
  }
    wire_load("tsmc18_wl10") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 66.667;
    fanout_length	(1,66.667);
  }
  wire_load("tsmc18_wl20") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 133.334;
    fanout_length	(1,133.334);
  }
  wire_load("tsmc18_wl30") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 200.001;
    fanout_length	(1,200.001);
  }
  wire_load("tsmc18_wl40") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 266.668;
    fanout_length	(1,266.668);
  }
  wire_load("tsmc18_wl50") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 333.335;
    fanout_length	(1,333.335);
  }
    wire_load("ForQA") {
    resistance	: 0;
    capacitance	: 1;
    area	: 1;
    slope	: 1;
    fanout_length(1,0);
    fanout_length(10,0);
  }
    
cell (RSLATNX2) { 
  cell_footprint : rslatn;
  area : 36.590400;
  pin(SN) {
    direction : input;
    clock : true;
    capacitance : 0.002721;
    max_transition : 3.300000;
    internal_power() {
      rise_power(passive_energy_template_1x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        values ("0.007772, 0.007804, 0.008977, 0.012690, 0.017461, 0.023020, 0.029864");
      }
      fall_power(passive_energy_template_1x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        values ("0.013577, 0.013109, 0.014950, 0.018939, 0.023818, 0.029427, 0.036296");
      }
    }
    min_pulse_width_low : 0.206234;
    timing() {
      related_pin : "RN";
      timing_type : hold_rising;
      rise_constraint(scalar) {
        values ("0.206234");
      }
    }
  }
  pin(RN) {
    direction : input;
    clock : true;
    capacitance : 0.002938;
    max_transition : 3.300000;
    internal_power() {
      rise_power(passive_energy_template_1x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        values ("0.007595, 0.007559, 0.008680, 0.012337, 0.017067, 0.022601, 0.029412");
      }
      fall_power(passive_energy_template_1x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        values ("0.014923, 0.014458, 0.016180, 0.020144, 0.024969, 0.030545, 0.037400");
      }
    }
    min_pulse_width_low : 0.215938;
    timing() {
      related_pin : "SN";
      timing_type : hold_rising;
      rise_constraint(scalar) {
        values ("0.215938");
      }
    }
  }
  latch(IQ,IQN) {
    clear  : "!RN";
    preset : "!SN";
    clear_preset_var1 : H;
    clear_preset_var2 : H;
  }
  pin(Q) {
    direction : output;
    capacitance : 0.0;
    function : "IQ";
    internal_power() {
      related_pin : "SN";
      equal_or_opposite_output : "QN";
      when : "RN";
      rise_power(energy_template_7x3x3) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0007, 0.168, 0.623");
        index_3 ("0.0007, 0.168, 0.623");
        values ( \
          "0.072828, 0.080507, 0.080657", "0.076861, 0.077159, 0.081412", "0.065148, 0.065465, 0.065534", \
          "0.072763, 0.080512, 0.080646", "0.077296, 0.077352, 0.081686", "0.065640, 0.065694, 0.065761", \
          "0.072698, 0.080277, 0.080403", "0.077249, 0.077172, 0.081554", "0.065655, 0.065574, 0.065642", \
          "0.078932, 0.080259, 0.080409", "0.077310, 0.077337, 0.081732", "0.065752, 0.065799, 0.065873", \
          "0.082001, 0.082073, 0.082229", "0.078983, 0.078917, 0.083287", "0.068020, 0.068000, 0.068019", \
          "0.080787, 0.080833, 0.080916", "0.075482, 0.078094, 0.082542", "0.065296, 0.066619, 0.066714", \
          "0.081462, 0.081245, 0.081298", "0.077941, 0.078633, 0.083076", "0.066227, 0.067184, 0.067272");
      }
      fall_power(scalar) {
        values ("0.0");
      }
    }
    internal_power() {
      related_pin : "RN";
      equal_or_opposite_output : "QN";
      when : "SN";
      rise_power(scalar) {
        values ("0.0");
      }
      fall_power(energy_template_7x3x3) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0007, 0.168, 0.623");
        index_3 ("0.0007, 0.168, 0.623");
        values ( \
          "0.072027, 0.075630, 0.063907", "0.079927, 0.076153, 0.064475", "0.080054, 0.080488, 0.064558", \
          "0.072456, 0.076027, 0.064353", "0.080090, 0.076622, 0.064990", "0.080243, 0.081030, 0.065072", \
          "0.071984, 0.075449, 0.063800", "0.079963, 0.075838, 0.064228", "0.080121, 0.080233, 0.064312", \
          "0.077964, 0.076440, 0.064878", "0.079831, 0.076470, 0.064909", "0.079967, 0.080873, 0.064997", \
          "0.079716, 0.076095, 0.064689", "0.079734, 0.076814, 0.065278", "0.079907, 0.081250, 0.065369", \
          "0.081837, 0.077266, 0.067060", "0.082078, 0.077738, 0.067244", "0.082197, 0.082189, 0.067356", \
          "0.082660, 0.080003, 0.067556", "0.082886, 0.078119, 0.067880", "0.082963, 0.082572, 0.067993");
      }
    }
    internal_power() {
      power(scalar) {
        values ("0.0");
      }
    }
    timing() {
      related_pin : "SN";
      timing_type : preset;
      timing_sense : negative_unate;
      cell_rise(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0007, 0.042, 0.077, 0.168, 0.294, 0.462, 0.623");
        values ( \
          "0.228889, 0.375193, 0.491567, 0.791149, 1.204639, 1.755743, 2.283825", \
          "0.255927, 0.402130, 0.518512, 0.818097, 1.231587, 1.782690, 2.310772", \
          "0.367192, 0.513668, 0.630014, 0.929652, 1.343192, 1.894327, 2.422421", \
          "0.497924, 0.645326, 0.761605, 1.061265, 1.474855, 2.026025, 2.554140", \
          "0.615878, 0.764212, 0.880424, 1.180047, 1.593665, 2.144861, 2.672989", \
          "0.731737, 0.881118, 0.997269, 1.296843, 1.710471, 2.261686, 2.789825", \
          "0.858522, 1.009282, 1.125329, 1.424833, 1.838456, 2.389680, 2.917830");
      }
      rise_transition(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0007, 0.042, 0.077, 0.168, 0.294, 0.462, 0.623");
        values ( \
          "0.052967, 0.289517, 0.497967, 1.041240, 1.795998, 2.802346, 3.766766", \
          "0.053026, 0.289504, 0.497965, 1.041241, 1.795997, 2.802348, 3.766766", \
          "0.053826, 0.289526, 0.497960, 1.041241, 1.795999, 2.802348, 3.766764", \
          "0.056671, 0.289806, 0.497946, 1.041273, 1.795995, 2.802348, 3.766766", \
          "0.058798, 0.290096, 0.498023, 1.041294, 1.796019, 2.802350, 3.766766", \
          "0.060864, 0.290439, 0.498079, 1.041281, 1.796026, 2.802352, 3.766774", \
          "0.062718, 0.290801, 0.498169, 1.041322, 1.796013, 2.802364, 3.766774");
      }
      cell_fall(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0007, 0.042, 0.077, 0.168, 0.294, 0.462, 0.623");
        values ( \
          "0.240757, 0.360373, 0.433179, 0.605031, 0.836036, 1.142980, 1.437018", \
          "0.263224, 0.382807, 0.455600, 0.627460, 0.858465, 1.165410, 1.459448", \
          "0.315237, 0.434874, 0.507743, 0.679646, 0.910659, 1.217606, 1.511644", \
          "0.346869, 0.466703, 0.539674, 0.711700, 0.942753, 1.249716, 1.543757", \
          "0.356299, 0.476606, 0.549746, 0.721953, 0.953037, 1.259991, 1.554041", \
          "0.351723, 0.472664, 0.546013, 0.718449, 0.949613, 1.256586, 1.550626", \
          "0.334027, 0.455877, 0.529490, 0.702184, 0.933446, 1.240465, 1.534516");
      }
      fall_transition(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0007, 0.042, 0.077, 0.168, 0.294, 0.462, 0.623");
        values ( \
          "0.056721, 0.188572, 0.288731, 0.559743, 0.949954, 1.476313, 1.981644", \
          "0.056693, 0.188611, 0.288738, 0.559715, 0.949955, 1.476317, 1.981644", \
          "0.056996, 0.188900, 0.288925, 0.559791, 0.949959, 1.476317, 1.981643", \
          "0.057485, 0.189267, 0.289271, 0.559965, 0.950046, 1.476360, 1.981648", \
          "0.058308, 0.189970, 0.289905, 0.560267, 0.950097, 1.476360, 1.981660", \
          "0.059447, 0.190935, 0.290725, 0.560772, 0.950321, 1.476391, 1.981658", \
          "0.061004, 0.192184, 0.291724, 0.561394, 0.950630, 1.476582, 1.981747");
      }
    }
    timing() {
      related_pin : "RN";
      timing_type : clear;
      timing_sense : positive_unate;
      cell_fall(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0007, 0.042, 0.077, 0.168, 0.294, 0.462, 0.623");
        values ( \
          "0.410809, 0.530518, 0.603329, 0.775194, 1.006196, 1.313134, 1.607173", \
          "0.437676, 0.557349, 0.630158, 0.802022, 1.033023, 1.339964, 1.634001", \
          "0.549859, 0.669580, 0.742394, 0.914261, 1.145263, 1.452205, 1.746242", \
          "0.682719, 0.802365, 0.875184, 1.047052, 1.278055, 1.584997, 1.879035", \
          "0.802133, 0.921794, 0.994613, 1.166489, 1.397498, 1.704441, 1.998480", \
          "0.919412, 1.039041, 1.111862, 1.283731, 1.514740, 1.821690, 2.115732", \
          "1.047811, 1.167431, 1.240253, 1.412125, 1.643131, 1.950079, 2.244121");
      }
      fall_transition(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0007, 0.042, 0.077, 0.168, 0.294, 0.462, 0.623");
        values ( \
          "0.056953, 0.188566, 0.288718, 0.559733, 0.949942, 1.476320, 1.981641", \
          "0.056845, 0.188631, 0.288744, 0.559723, 0.949955, 1.476319, 1.981644", \
          "0.057037, 0.188627, 0.288759, 0.559748, 0.949951, 1.476315, 1.981644", \
          "0.056988, 0.188676, 0.288770, 0.559747, 0.949956, 1.476321, 1.981645", \
          "0.056997, 0.188654, 0.288754, 0.559727, 0.949963, 1.476319, 1.981643", \
          "0.056890, 0.188667, 0.288765, 0.559726, 0.949965, 1.476328, 1.981656", \
          "0.057106, 0.188725, 0.288774, 0.559717, 0.949954, 1.476329, 1.981663");
      }
    }
    max_capacitance : 0.623000;
  }
  pin(QN) {
    direction : output;
    capacitance : 0.0;
    function : "IQN";
    timing() {
      related_pin : "SN";
      timing_type : clear;
      timing_sense : positive_unate;
      cell_fall(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0007, 0.042, 0.077, 0.168, 0.294, 0.462, 0.623");
        values ( \
          "0.401196, 0.520752, 0.593381, 0.765042, 0.995969, 1.302883, 1.596907", \
          "0.428197, 0.547682, 0.620320, 0.791986, 1.022916, 1.329831, 1.623853", \
          "0.538767, 0.658252, 0.730890, 0.902553, 1.133482, 1.440396, 1.734421", \
          "0.668856, 0.788293, 0.860946, 1.032625, 1.263552, 1.570463, 1.864487", \
          "0.786311, 0.905706, 0.978359, 1.150038, 1.380980, 1.687899, 1.981922", \
          "0.901710, 1.021205, 1.093853, 1.265530, 1.496465, 1.803392, 2.097429", \
          "1.028376, 1.147788, 1.220425, 1.392088, 1.623022, 1.929946, 2.223982");
      }
      fall_transition(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0007, 0.042, 0.077, 0.168, 0.294, 0.462, 0.623");
        values ( \
          "0.055175, 0.186927, 0.287048, 0.558180, 0.948526, 1.474932, 1.980276", \
          "0.055101, 0.186907, 0.287011, 0.558186, 0.948520, 1.474937, 1.980272", \
          "0.055258, 0.186978, 0.287068, 0.558176, 0.948525, 1.474941, 1.980275", \
          "0.055236, 0.187001, 0.287117, 0.558185, 0.948526, 1.474942, 1.980276", \
          "0.054939, 0.186918, 0.287058, 0.558203, 0.948566, 1.474940, 1.980274", \
          "0.055226, 0.186948, 0.287057, 0.558197, 0.948558, 1.474994, 1.980310", \
          "0.055360, 0.187013, 0.287053, 0.558162, 0.948535, 1.474978, 1.980332");
      }
    }
    timing() {
      related_pin : "RN";
      timing_type : preset;
      timing_sense : negative_unate;
      cell_rise(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0007, 0.042, 0.077, 0.168, 0.294, 0.462, 0.623");
        values ( \
          "0.234364, 0.380722, 0.497039, 0.796620, 1.210095, 1.761189, 2.289266", \
          "0.261184, 0.407540, 0.523872, 0.823458, 1.236934, 1.788029, 2.316106", \
          "0.374086, 0.520715, 0.637010, 0.936645, 1.350169, 1.901291, 2.429381", \
          "0.507506, 0.655289, 0.771516, 1.071158, 1.484726, 2.035883, 2.563990", \
          "0.627372, 0.776238, 0.892408, 1.192009, 1.605605, 2.156782, 2.684902", \
          "0.744897, 0.895064, 1.011159, 1.310700, 1.724291, 2.275485, 2.803616", \
          "0.873449, 1.025160, 1.141174, 1.440646, 1.854233, 2.405434, 2.933575");
      }
      rise_transition(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0007, 0.042, 0.077, 0.168, 0.294, 0.462, 0.623");
        values ( \
          "0.052091, 0.288375, 0.496882, 1.040021, 1.794770, 2.801128, 3.765546", \
          "0.052252, 0.288377, 0.496868, 1.040012, 1.794781, 2.801122, 3.765544", \
          "0.053143, 0.288457, 0.496855, 1.040023, 1.794775, 2.801128, 3.765548", \
          "0.055936, 0.288763, 0.496910, 1.040058, 1.794777, 2.801128, 3.765546", \
          "0.058046, 0.289111, 0.496972, 1.040064, 1.794798, 2.801128, 3.765546", \
          "0.060312, 0.289500, 0.497045, 1.040072, 1.794791, 2.801134, 3.765552", \
          "0.062711, 0.289963, 0.497155, 1.040138, 1.794795, 2.801136, 3.765546");
      }
      cell_fall(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0007, 0.042, 0.077, 0.168, 0.294, 0.462, 0.623");
        values ( \
          "0.243162, 0.362629, 0.435257, 0.606918, 0.837848, 1.144765, 1.438790", \
          "0.265885, 0.385295, 0.457926, 0.629584, 0.860513, 1.167428, 1.461453", \
          "0.320263, 0.439776, 0.512468, 0.684173, 0.915113, 1.222032, 1.516061", \
          "0.354491, 0.474160, 0.546980, 0.718816, 0.949787, 1.256719, 1.550748", \
          "0.366016, 0.486276, 0.559280, 0.731316, 0.962325, 1.269244, 1.563279", \
          "0.363372, 0.484351, 0.557583, 0.729864, 0.960957, 1.267896, 1.561917", \
          "0.347423, 0.469556, 0.543090, 0.715677, 0.946876, 1.253860, 1.547897");
      }
      fall_transition(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0007, 0.042, 0.077, 0.168, 0.294, 0.462, 0.623");
        values ( \
          "0.055062, 0.186896, 0.287007, 0.558182, 0.948521, 1.474938, 1.980273", \
          "0.054958, 0.186916, 0.287054, 0.558175, 0.948525, 1.474932, 1.980275", \
          "0.055415, 0.187249, 0.287243, 0.558227, 0.948527, 1.474938, 1.980273", \
          "0.055744, 0.187670, 0.287666, 0.558417, 0.948611, 1.474981, 1.980277", \
          "0.056789, 0.188449, 0.288339, 0.558766, 0.948657, 1.474960, 1.980284", \
          "0.058001, 0.189511, 0.289243, 0.559318, 0.948901, 1.474992, 1.980267", \
          "0.059452, 0.190898, 0.290387, 0.559968, 0.949240, 1.475199, 1.980365");
      }
    }
    max_capacitance : 0.623000;
  }
  cell_leakage_power : 1700.400600;
}
}
