library(slow) {
    delay_model : table_lookup;
  in_place_swap_mode : match_footprint;
  library_features(report_delay_calculation);
    date : "Mon Oct 21 09:59:52 PDT 2002";
  comment : "Copyright (c) 2002 Artisan Components, Inc.  All Rights Reserved.";
    time_unit : "1ns";
  voltage_unit : "1V";
  current_unit : "1mA";
  pulling_resistance_unit : "1kohm";
  leakage_power_unit : "1pW";
  capacitive_load_unit (1.0,pf);
    nom_process     : 1;
  nom_temperature : 125;
  nom_voltage     : 1.62;
  operating_conditions(slow) {
    process	: 1;
    temperature	: 125;
    voltage	: 1.62;
    tree_type	: balanced_tree;
  }
  default_operating_conditions : slow;
    slew_lower_threshold_pct_fall : 10.0;
  slew_upper_threshold_pct_fall : 90.0;
  slew_lower_threshold_pct_rise : 10.0;
  slew_upper_threshold_pct_rise : 90.0;
  input_threshold_pct_fall      : 50.0;
  input_threshold_pct_rise      : 50.0;
  output_threshold_pct_fall     : 50.0;
  output_threshold_pct_rise     : 50.0;
    default_leakage_power_density	: 0.0;
  slew_derate_from_library	: 1;
  default_cell_leakage_power	: 0.0;
  default_fanout_load	: 1.0;
  default_output_pin_cap	: 0.0;
  default_inout_pin_cap	: 0.0035;
  default_input_pin_cap	: 0.0035;
  default_max_transition	: 4.5;
    lu_table_template(delay_template_7x1) {
    variable_1 : input_net_transition;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(energy_template_7x1) {
    variable_1 : input_transition_time;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(delay_template_7x7) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(energy_template_7x7) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(energy_template_1x7) {
    variable_1 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(energy_template_7x3x3) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    variable_3 : equal_or_opposite_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002");
    index_3 ("1000, 1001, 1002");
  }
  power_lut_template(passive_energy_template_1x7) {
    variable_1 : input_transition_time;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(setup_template_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 1001, 1002");
    index_2 ("1000, 1001, 1002");
  }
  lu_table_template(hold_template_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 1001, 1002");
    index_2 ("1000, 1001, 1002");
  }
  lu_table_template(recovery_template_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 1001, 1002");
    index_2 ("1000, 1001, 1002");
  }
  lu_table_template(removal_template_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 1001, 1002");
    index_2 ("1000, 1001, 1002");
  }
    k_process_cell_leakage_power	: 0;
  k_temp_cell_leakage_power	: 0;
  k_volt_cell_leakage_power	: 0;
  k_process_internal_power	: 0;
  k_temp_internal_power	: 0;
  k_volt_internal_power	: 0;
  k_process_rise_transition	: 1;
  k_temp_rise_transition	: 0;
  k_volt_rise_transition	: 0;
  k_process_fall_transition	: 1;
  k_temp_fall_transition	: 0;
  k_volt_fall_transition	: 0;
  k_process_setup_rise	: 1;
  k_temp_setup_rise	: 0;
  k_volt_setup_rise	: 0;
  k_process_setup_fall	: 1;
  k_temp_setup_fall	: 0;
  k_volt_setup_fall	: 0;
  k_process_hold_rise	: 1;
  k_temp_hold_rise	: 0;
  k_volt_hold_rise	: 0;
  k_process_hold_fall	: 1;
  k_temp_hold_fall	: 0;
  k_volt_hold_fall	: 0;
  k_process_min_pulse_width_high	: 1;
  k_temp_min_pulse_width_high	: 0;
  k_volt_min_pulse_width_high	: 0;
  k_process_min_pulse_width_low	: 1;
  k_temp_min_pulse_width_low	: 0;
  k_volt_min_pulse_width_low	: 0;
  k_process_recovery_rise	: 1;
  k_temp_recovery_rise	: 0;
  k_volt_recovery_rise	: 0;
  k_process_recovery_fall	: 1;
  k_temp_recovery_fall	: 0;
  k_volt_recovery_fall	: 0;
  k_process_cell_rise	: 1;
  k_temp_cell_rise	: 0;
  k_volt_cell_rise	: 0;
  k_process_cell_fall	: 1;
  k_temp_cell_fall	: 0;
  k_volt_cell_fall	: 0;
  k_process_wire_cap	: 0;
  k_temp_wire_cap	: 0;
  k_volt_wire_cap	: 0;
  k_process_wire_res	: 0;
  k_temp_wire_res	: 0;
  k_volt_wire_res	: 0;
  k_process_pin_cap	: 0;
  k_temp_pin_cap	: 0;
  k_volt_pin_cap	: 0;
    output_voltage(GENERAL) {
    vol	: 0.4;
    voh	: VDD - 0.4;
    vomin	: -0.5;
    vomax	: VDD + 0.5;
  }
  input_voltage(CMOS) {
    vil	: 0.3 * VDD;
    vih	: 0.7 * VDD;
    vimin	: -0.5;
    vimax	: VDD + 0.5;
  }
  input_voltage(TTL) {
    vil	: 0.8;
    vih	: 2;
    vimin	: -0.5;
    vimax	: VDD + 0.5;
  }
    wire_load("tsmc18_wl10") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 66.667;
    fanout_length	(1,66.667);
  }
  wire_load("tsmc18_wl20") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 133.334;
    fanout_length	(1,133.334);
  }
  wire_load("tsmc18_wl30") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 200.001;
    fanout_length	(1,200.001);
  }
  wire_load("tsmc18_wl40") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 266.668;
    fanout_length	(1,266.668);
  }
  wire_load("tsmc18_wl50") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 333.335;
    fanout_length	(1,333.335);
  }
    wire_load("ForQA") {
    resistance	: 0;
    capacitance	: 1;
    area	: 1;
    slope	: 1;
    fanout_length(1,0);
    fanout_length(10,0);
  }
    
cell (NOR2BXL) { 
  cell_footprint : nor2b;
  area : 13.305600;
  pin(AN) {
    direction : input;
    capacitance : 0.002199;
  }
  pin(B) {
    direction : input;
    capacitance : 0.003021;
  }
  pin(Y) {
    direction : output;
    capacitance : 0.0;
    function : "(!(!AN | B))";
    internal_power() {
      related_pin : "AN";
      rise_power(energy_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.000175, 0.0105, 0.01925, 0.042, 0.0735, 0.1155, 0.15575");
        values ( \
          "0.009127, 0.009336, 0.009213, 0.008709, 0.007943, 0.006863, 0.005805", \
          "0.009006, 0.009086, 0.008987, 0.008529, 0.007769, 0.006702, 0.005663", \
          "0.010131, 0.009983, 0.009848, 0.009409, 0.008686, 0.007651, 0.006630", \
          "0.013508, 0.013007, 0.012803, 0.012298, 0.011564, 0.010538, 0.009526", \
          "0.017630, 0.017254, 0.016712, 0.016052, 0.015284, 0.014246, 0.013233", \
          "0.022383, 0.021832, 0.021683, 0.020462, 0.019651, 0.018590, 0.017569", \
          "0.028198, 0.027456, 0.027257, 0.026411, 0.025044, 0.023952, 0.022917");
      }
      fall_power(energy_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.000175, 0.0105, 0.01925, 0.042, 0.0735, 0.1155, 0.15575");
        values ( \
          "0.014069, 0.015497, 0.015652, 0.015769, 0.015816, 0.015841, 0.015852", \
          "0.014471, 0.015519, 0.015684, 0.015816, 0.015872, 0.015901, 0.015916", \
          "0.016216, 0.016677, 0.016846, 0.017006, 0.017085, 0.017129, 0.017150", \
          "0.020038, 0.019858, 0.019907, 0.020015, 0.020097, 0.020149, 0.020175", \
          "0.024177, 0.023709, 0.023710, 0.023766, 0.023819, 0.023869, 0.023895", \
          "0.028928, 0.028179, 0.028112, 0.028120, 0.028145, 0.028173, 0.028197", \
          "0.034740, 0.033696, 0.033549, 0.033481, 0.033489, 0.033477, 0.033496");
      }
    }
    timing() {
      related_pin : "AN";
      timing_sense : positive_unate;
      cell_rise(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.000175, 0.0105, 0.01925, 0.042, 0.0735, 0.1155, 0.15575");
        values ( \
          "0.118761, 0.272832, 0.400123, 0.728834, 1.182841, 1.787768, 2.367357", \
          "0.139985, 0.292928, 0.420409, 0.749503, 1.203743, 1.808806, 2.388463", \
          "0.179350, 0.330971, 0.458087, 0.787142, 1.241688, 1.847031, 2.426853", \
          "0.189384, 0.342672, 0.468890, 0.797478, 1.251820, 1.857107, 2.436963", \
          "0.174118, 0.332195, 0.458374, 0.786311, 1.240438, 1.845635, 2.425380", \
          "0.142683, 0.306619, 0.433364, 0.762101, 1.215931, 1.821007, 2.400748", \
          "0.093965, 0.264810, 0.392398, 0.723037, 1.177779, 1.782621, 2.362280");
      }
      rise_transition(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.000175, 0.0105, 0.01925, 0.042, 0.0735, 0.1155, 0.15575");
        values ( \
          "0.090680, 0.355920, 0.580322, 1.163343, 1.970404, 3.046412, 4.077556", \
          "0.090989, 0.355913, 0.580327, 1.163343, 1.970404, 3.046412, 4.077554", \
          "0.099306, 0.357317, 0.580886, 1.163350, 1.970406, 3.046412, 4.077558", \
          "0.112694, 0.359351, 0.582563, 1.164770, 1.970722, 3.046412, 4.077558", \
          "0.124496, 0.364824, 0.586195, 1.166150, 1.972046, 3.047056, 4.077556", \
          "0.135306, 0.372297, 0.592347, 1.170118, 1.973420, 3.048064, 4.078492", \
          "0.146609, 0.382193, 0.600161, 1.178033, 1.977592, 3.049512, 4.079440");
      }
      cell_fall(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.000175, 0.0105, 0.01925, 0.042, 0.0735, 0.1155, 0.15575");
        values ( \
          "0.140494, 0.209018, 0.255899, 0.370972, 0.527991, 0.736931, 0.937062", \
          "0.167658, 0.236153, 0.283075, 0.398206, 0.555250, 0.764206, 0.964346", \
          "0.275674, 0.349428, 0.397772, 0.513430, 0.670443, 0.879373, 1.079502", \
          "0.405467, 0.487275, 0.538209, 0.656412, 0.814425, 1.023677, 1.223621", \
          "0.527202, 0.616001, 0.669389, 0.789873, 0.948120, 1.157599, 1.358208", \
          "0.649333, 0.745102, 0.801294, 0.925057, 1.084587, 1.294278, 1.494747", \
          "0.785721, 0.888762, 0.948280, 1.076423, 1.238455, 1.449396, 1.650183");
      }
      fall_transition(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.000175, 0.0105, 0.01925, 0.042, 0.0735, 0.1155, 0.15575");
        values ( \
          "0.051174, 0.135234, 0.205372, 0.395260, 0.664416, 1.024789, 1.370247", \
          "0.051346, 0.135296, 0.205381, 0.395255, 0.664432, 1.024776, 1.370238", \
          "0.063033, 0.143821, 0.210647, 0.396282, 0.664534, 1.024787, 1.370244", \
          "0.078858, 0.158888, 0.223222, 0.403973, 0.669252, 1.026786, 1.370591", \
          "0.091937, 0.172998, 0.235262, 0.410364, 0.672144, 1.030604, 1.374558", \
          "0.104414, 0.188088, 0.249159, 0.419911, 0.677329, 1.032769, 1.376861", \
          "0.117929, 0.205288, 0.265779, 0.433556, 0.687254, 1.038933, 1.380489");
      }
    }
    internal_power() {
      related_pin : "B";
      rise_power(energy_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.000175, 0.0105, 0.01925, 0.042, 0.0735, 0.1155, 0.15575");
        values ( \
          "0.010840, 0.010685, 0.010512, 0.009969, 0.009167, 0.008079, 0.007029", \
          "0.010918, 0.010834, 0.010689, 0.010195, 0.009424, 0.008355, 0.007316", \
          "0.011742, 0.011129, 0.010818, 0.010173, 0.009354, 0.008273, 0.007234", \
          "0.015746, 0.013876, 0.013064, 0.011701, 0.010409, 0.009014, 0.007808", \
          "0.020958, 0.018359, 0.016859, 0.014655, 0.012687, 0.010765, 0.009242", \
          "0.026944, 0.023758, 0.021900, 0.018715, 0.016021, 0.013469, 0.011536", \
          "0.034246, 0.030420, 0.028446, 0.024171, 0.020702, 0.017419, 0.014978");
      }
      fall_power(energy_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.000175, 0.0105, 0.01925, 0.042, 0.0735, 0.1155, 0.15575");
        values ( \
          "0.002823, 0.002808, 0.002907, 0.003025, 0.003089, 0.003135, 0.003162", \
          "0.002637, 0.002734, 0.002799, 0.002886, 0.002935, 0.002973, 0.002997", \
          "0.004125, 0.003472, 0.003352, 0.003210, 0.003138, 0.003100, 0.003084", \
          "0.008335, 0.006622, 0.005894, 0.004966, 0.004423, 0.004060, 0.003860", \
          "0.013559, 0.011017, 0.009765, 0.007915, 0.006678, 0.005822, 0.005330", \
          "0.019570, 0.016379, 0.014658, 0.011918, 0.009845, 0.008380, 0.007508", \
          "0.026909, 0.023150, 0.020985, 0.017313, 0.014369, 0.012059, 0.010690");
      }
    }
    timing() {
      related_pin : "B";
      timing_sense : negative_unate;
      cell_rise(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.000175, 0.0105, 0.01925, 0.042, 0.0735, 0.1155, 0.15575");
        values ( \
          "0.089138, 0.241037, 0.367706, 0.695877, 1.149660, 1.754474, 2.334015", \
          "0.109032, 0.260751, 0.387704, 0.716385, 1.170498, 1.775516, 2.355161", \
          "0.155367, 0.337638, 0.465542, 0.793053, 1.246815, 1.851787, 2.431466", \
          "0.225523, 0.446328, 0.596602, 0.938826, 1.388624, 1.990780, 2.568923", \
          "0.298157, 0.553263, 0.719696, 1.096152, 1.557770, 2.155527, 2.730833", \
          "0.371780, 0.661267, 0.843354, 1.248348, 1.742017, 2.345203, 2.917106", \
          "0.454096, 0.779886, 0.979755, 1.414315, 1.938929, 2.574022, 3.146480");
      }
      rise_transition(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.000175, 0.0105, 0.01925, 0.042, 0.0735, 0.1155, 0.15575");
        values ( \
          "0.090761, 0.355905, 0.580326, 1.163351, 1.970408, 3.046410, 4.077556", \
          "0.094790, 0.355922, 0.580327, 1.163348, 1.970406, 3.046408, 4.077558", \
          "0.145671, 0.382414, 0.585613, 1.163346, 1.970406, 3.046412, 4.077558", \
          "0.217949, 0.476665, 0.678740, 1.188672, 1.970409, 3.046410, 4.077556", \
          "0.286425, 0.559854, 0.774524, 1.292486, 2.007048, 3.046466, 4.077556", \
          "0.354309, 0.645268, 0.866963, 1.410961, 2.108534, 3.084248, 4.079966", \
          "0.428775, 0.741715, 0.971090, 1.533474, 2.260542, 3.189370, 4.133314");
      }
      cell_fall(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.000175, 0.0105, 0.01925, 0.042, 0.0735, 0.1155, 0.15575");
        values ( \
          "0.041538, 0.096813, 0.141336, 0.255484, 0.412617, 0.621720, 0.821958", \
          "0.062421, 0.121308, 0.165796, 0.279934, 0.437068, 0.646172, 0.846411", \
          "0.092852, 0.200873, 0.265730, 0.393111, 0.549577, 0.758259, 0.958280", \
          "0.100148, 0.255986, 0.351492, 0.543132, 0.744625, 0.960732, 1.159834", \
          "0.089495, 0.281860, 0.400373, 0.639978, 0.895811, 1.168852, 1.388484", \
          "0.067866, 0.291819, 0.430231, 0.710650, 1.012191, 1.337237, 1.600287", \
          "0.034800, 0.289596, 0.447616, 0.768205, 1.113775, 1.488923, 1.794579");
      }
      fall_transition(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.000175, 0.0105, 0.01925, 0.042, 0.0735, 0.1155, 0.15575");
        values ( \
          "0.041303, 0.131491, 0.206386, 0.401562, 0.671916, 1.032429, 1.377946", \
          "0.059078, 0.131531, 0.206317, 0.401561, 0.671926, 1.032429, 1.377946", \
          "0.121144, 0.223661, 0.282648, 0.420916, 0.671954, 1.032430, 1.377946", \
          "0.199128, 0.349643, 0.437871, 0.611684, 0.791957, 1.065719, 1.380452", \
          "0.271588, 0.462469, 0.571192, 0.789843, 1.019414, 1.259801, 1.497447", \
          "0.342573, 0.572834, 0.699834, 0.954121, 1.227189, 1.516516, 1.747157", \
          "0.420097, 0.692897, 0.839578, 1.128342, 1.440683, 1.778363, 2.049260");
      }
    }
    max_capacitance : 0.155750;
  }
  cell_leakage_power : 452.954754;
}
}
