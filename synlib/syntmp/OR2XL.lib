library(slow) {
    delay_model : table_lookup;
  in_place_swap_mode : match_footprint;
  library_features(report_delay_calculation);
    date : "Mon Oct 21 09:59:52 PDT 2002";
  comment : "Copyright (c) 2002 Artisan Components, Inc.  All Rights Reserved.";
    time_unit : "1ns";
  voltage_unit : "1V";
  current_unit : "1mA";
  pulling_resistance_unit : "1kohm";
  leakage_power_unit : "1pW";
  capacitive_load_unit (1.0,pf);
    nom_process     : 1;
  nom_temperature : 125;
  nom_voltage     : 1.62;
  operating_conditions(slow) {
    process	: 1;
    temperature	: 125;
    voltage	: 1.62;
    tree_type	: balanced_tree;
  }
  default_operating_conditions : slow;
    slew_lower_threshold_pct_fall : 10.0;
  slew_upper_threshold_pct_fall : 90.0;
  slew_lower_threshold_pct_rise : 10.0;
  slew_upper_threshold_pct_rise : 90.0;
  input_threshold_pct_fall      : 50.0;
  input_threshold_pct_rise      : 50.0;
  output_threshold_pct_fall     : 50.0;
  output_threshold_pct_rise     : 50.0;
    default_leakage_power_density	: 0.0;
  slew_derate_from_library	: 1;
  default_cell_leakage_power	: 0.0;
  default_fanout_load	: 1.0;
  default_output_pin_cap	: 0.0;
  default_inout_pin_cap	: 0.0035;
  default_input_pin_cap	: 0.0035;
  default_max_transition	: 4.5;
    lu_table_template(delay_template_7x1) {
    variable_1 : input_net_transition;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(energy_template_7x1) {
    variable_1 : input_transition_time;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(delay_template_7x7) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(energy_template_7x7) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(energy_template_1x7) {
    variable_1 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(energy_template_7x3x3) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    variable_3 : equal_or_opposite_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002");
    index_3 ("1000, 1001, 1002");
  }
  power_lut_template(passive_energy_template_1x7) {
    variable_1 : input_transition_time;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(setup_template_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 1001, 1002");
    index_2 ("1000, 1001, 1002");
  }
  lu_table_template(hold_template_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 1001, 1002");
    index_2 ("1000, 1001, 1002");
  }
  lu_table_template(recovery_template_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 1001, 1002");
    index_2 ("1000, 1001, 1002");
  }
  lu_table_template(removal_template_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 1001, 1002");
    index_2 ("1000, 1001, 1002");
  }
    k_process_cell_leakage_power	: 0;
  k_temp_cell_leakage_power	: 0;
  k_volt_cell_leakage_power	: 0;
  k_process_internal_power	: 0;
  k_temp_internal_power	: 0;
  k_volt_internal_power	: 0;
  k_process_rise_transition	: 1;
  k_temp_rise_transition	: 0;
  k_volt_rise_transition	: 0;
  k_process_fall_transition	: 1;
  k_temp_fall_transition	: 0;
  k_volt_fall_transition	: 0;
  k_process_setup_rise	: 1;
  k_temp_setup_rise	: 0;
  k_volt_setup_rise	: 0;
  k_process_setup_fall	: 1;
  k_temp_setup_fall	: 0;
  k_volt_setup_fall	: 0;
  k_process_hold_rise	: 1;
  k_temp_hold_rise	: 0;
  k_volt_hold_rise	: 0;
  k_process_hold_fall	: 1;
  k_temp_hold_fall	: 0;
  k_volt_hold_fall	: 0;
  k_process_min_pulse_width_high	: 1;
  k_temp_min_pulse_width_high	: 0;
  k_volt_min_pulse_width_high	: 0;
  k_process_min_pulse_width_low	: 1;
  k_temp_min_pulse_width_low	: 0;
  k_volt_min_pulse_width_low	: 0;
  k_process_recovery_rise	: 1;
  k_temp_recovery_rise	: 0;
  k_volt_recovery_rise	: 0;
  k_process_recovery_fall	: 1;
  k_temp_recovery_fall	: 0;
  k_volt_recovery_fall	: 0;
  k_process_cell_rise	: 1;
  k_temp_cell_rise	: 0;
  k_volt_cell_rise	: 0;
  k_process_cell_fall	: 1;
  k_temp_cell_fall	: 0;
  k_volt_cell_fall	: 0;
  k_process_wire_cap	: 0;
  k_temp_wire_cap	: 0;
  k_volt_wire_cap	: 0;
  k_process_wire_res	: 0;
  k_temp_wire_res	: 0;
  k_volt_wire_res	: 0;
  k_process_pin_cap	: 0;
  k_temp_pin_cap	: 0;
  k_volt_pin_cap	: 0;
    output_voltage(GENERAL) {
    vol	: 0.4;
    voh	: VDD - 0.4;
    vomin	: -0.5;
    vomax	: VDD + 0.5;
  }
  input_voltage(CMOS) {
    vil	: 0.3 * VDD;
    vih	: 0.7 * VDD;
    vimin	: -0.5;
    vimax	: VDD + 0.5;
  }
  input_voltage(TTL) {
    vil	: 0.8;
    vih	: 2;
    vimin	: -0.5;
    vimax	: VDD + 0.5;
  }
    wire_load("tsmc18_wl10") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 66.667;
    fanout_length	(1,66.667);
  }
  wire_load("tsmc18_wl20") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 133.334;
    fanout_length	(1,133.334);
  }
  wire_load("tsmc18_wl30") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 200.001;
    fanout_length	(1,200.001);
  }
  wire_load("tsmc18_wl40") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 266.668;
    fanout_length	(1,266.668);
  }
  wire_load("tsmc18_wl50") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 333.335;
    fanout_length	(1,333.335);
  }
    wire_load("ForQA") {
    resistance	: 0;
    capacitance	: 1;
    area	: 1;
    slope	: 1;
    fanout_length(1,0);
    fanout_length(10,0);
  }
    
cell (OR2XL) { 
  cell_footprint : or2;
  area : 13.305600;
  pin(A) {
    direction : input;
    capacitance : 0.002379;
  }
  pin(B) {
    direction : input;
    capacitance : 0.002563;
  }
  pin(Y) {
    direction : output;
    capacitance : 0.0;
    function : "(A | B)";
    internal_power() {
      related_pin : "A";
      rise_power(energy_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.000175, 0.0105, 0.01925, 0.042, 0.0735, 0.1155, 0.15575");
        values ( \
          "0.008105, 0.008058, 0.007976, 0.007461, 0.006682, 0.005628, 0.004562", \
          "0.008065, 0.007985, 0.007883, 0.007422, 0.006658, 0.005589, 0.004549", \
          "0.009082, 0.008826, 0.008673, 0.008216, 0.007489, 0.006450, 0.005426", \
          "0.012186, 0.011866, 0.011348, 0.010822, 0.010073, 0.009038, 0.008022", \
          "0.016089, 0.015523, 0.015415, 0.014260, 0.013474, 0.012423, 0.011404", \
          "0.020591, 0.019784, 0.019606, 0.019151, 0.017495, 0.016418, 0.015387", \
          "0.026095, 0.025029, 0.024765, 0.024502, 0.022517, 0.021357, 0.020309");
      }
      fall_power(energy_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.000175, 0.0105, 0.01925, 0.042, 0.0735, 0.1155, 0.15575");
        values ( \
          "0.013062, 0.015143, 0.015460, 0.015639, 0.015692, 0.015715, 0.015726", \
          "0.013300, 0.015099, 0.015420, 0.015596, 0.015646, 0.015675, 0.015681", \
          "0.014503, 0.016212, 0.016513, 0.016693, 0.016756, 0.016790, 0.016806", \
          "0.020104, 0.019418, 0.019277, 0.019467, 0.019513, 0.019542, 0.019558", \
          "0.024098, 0.023103, 0.022983, 0.022875, 0.022920, 0.022938, 0.022949", \
          "0.028566, 0.027264, 0.027059, 0.026918, 0.026838, 0.026867, 0.026870", \
          "0.034000, 0.032377, 0.032084, 0.031849, 0.031764, 0.031702, 0.031708");
      }
    }
    timing() {
      related_pin : "A";
      timing_sense : positive_unate;
      cell_rise(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.000175, 0.0105, 0.01925, 0.042, 0.0735, 0.1155, 0.15575");
        values ( \
          "0.100048, 0.200262, 0.281882, 0.492675, 0.783834, 1.171787, 1.543493", \
          "0.122633, 0.222268, 0.303981, 0.514991, 0.806278, 1.194299, 1.566040", \
          "0.165136, 0.268105, 0.349611, 0.560542, 0.851927, 1.240081, 1.611903", \
          "0.172598, 0.283684, 0.364906, 0.575429, 0.866911, 1.254939, 1.626712", \
          "0.151685, 0.271883, 0.354165, 0.565290, 0.856543, 1.244707, 1.616545", \
          "0.112715, 0.241728, 0.325708, 0.538613, 0.830959, 1.219146, 1.590957", \
          "0.053874, 0.191986, 0.278386, 0.493528, 0.788311, 1.177834, 1.549795");
      }
      rise_transition(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.000175, 0.0105, 0.01925, 0.042, 0.0735, 0.1155, 0.15575");
        values ( \
          "0.052977, 0.221420, 0.368860, 0.752476, 1.283684, 1.991959, 2.670724", \
          "0.053812, 0.221369, 0.368854, 0.752490, 1.283681, 1.991953, 2.670726", \
          "0.067150, 0.223900, 0.370214, 0.752548, 1.283686, 1.991959, 2.670724", \
          "0.082464, 0.230937, 0.373056, 0.754694, 1.284969, 1.992285, 2.670724", \
          "0.094945, 0.242359, 0.379976, 0.758075, 1.286645, 1.993728, 2.671762", \
          "0.106899, 0.256158, 0.389243, 0.765467, 1.291087, 1.995595, 2.673062", \
          "0.118905, 0.272835, 0.400937, 0.775517, 1.300737, 2.001198, 2.675852");
      }
      cell_fall(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.000175, 0.0105, 0.01925, 0.042, 0.0735, 0.1155, 0.15575");
        values ( \
          "0.181822, 0.266654, 0.319822, 0.441421, 0.600362, 0.809695, 1.009912", \
          "0.204499, 0.289286, 0.342464, 0.464084, 0.623033, 0.832374, 1.032597", \
          "0.314767, 0.402239, 0.456172, 0.578344, 0.737396, 0.946738, 1.146953", \
          "0.457983, 0.551733, 0.608094, 0.733564, 0.894937, 1.104841, 1.304953", \
          "0.594400, 0.694440, 0.752834, 0.880220, 1.041722, 1.252648, 1.454183", \
          "0.733155, 0.839616, 0.900380, 1.030622, 1.193216, 1.404077, 1.605200", \
          "0.889279, 1.002735, 1.066472, 1.200644, 1.365459, 1.577314, 1.778546");
      }
      fall_transition(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.000175, 0.0105, 0.01925, 0.042, 0.0735, 0.1155, 0.15575");
        values ( \
          "0.061879, 0.154656, 0.223796, 0.405543, 0.667635, 1.025142, 1.370016", \
          "0.061922, 0.154711, 0.223840, 0.405558, 0.667640, 1.025140, 1.370011", \
          "0.068853, 0.160304, 0.227470, 0.406896, 0.668027, 1.025221, 1.370032", \
          "0.083795, 0.173615, 0.240200, 0.417589, 0.675584, 1.028173, 1.370688", \
          "0.095793, 0.185879, 0.250727, 0.423294, 0.679283, 1.034855, 1.377003", \
          "0.107842, 0.199775, 0.262962, 0.431987, 0.683642, 1.035957, 1.379960", \
          "0.120851, 0.216088, 0.278254, 0.444426, 0.692335, 1.040644, 1.381933");
      }
    }
    internal_power() {
      related_pin : "B";
      rise_power(energy_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.000175, 0.0105, 0.01925, 0.042, 0.0735, 0.1155, 0.15575");
        values ( \
          "0.009473, 0.009651, 0.009573, 0.009142, 0.008393, 0.007359, 0.006316", \
          "0.009118, 0.009140, 0.009064, 0.008657, 0.007933, 0.006886, 0.005871", \
          "0.010129, 0.009933, 0.009801, 0.009383, 0.008688, 0.007678, 0.006673", \
          "0.013509, 0.013165, 0.012670, 0.012196, 0.011479, 0.010472, 0.009475", \
          "0.017807, 0.017249, 0.017122, 0.015996, 0.015251, 0.014229, 0.013229", \
          "0.022802, 0.022019, 0.021833, 0.021249, 0.019746, 0.018701, 0.017690", \
          "0.028921, 0.027906, 0.027638, 0.027351, 0.025324, 0.024256, 0.023231");
      }
      fall_power(energy_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.000175, 0.0105, 0.01925, 0.042, 0.0735, 0.1155, 0.15575");
        values ( \
          "0.015346, 0.017163, 0.017479, 0.017643, 0.017690, 0.017711, 0.017719", \
          "0.015346, 0.017148, 0.017459, 0.017636, 0.017685, 0.017711, 0.017719", \
          "0.015908, 0.017564, 0.017878, 0.018057, 0.018113, 0.018141, 0.018154", \
          "0.021234, 0.020706, 0.020636, 0.020754, 0.020806, 0.020835, 0.020850", \
          "0.025477, 0.024680, 0.024600, 0.024549, 0.024574, 0.024598, 0.024610", \
          "0.030367, 0.029297, 0.029146, 0.029049, 0.029006, 0.029015, 0.029024", \
          "0.036371, 0.035004, 0.034767, 0.034585, 0.034527, 0.034474, 0.034483");
      }
    }
    timing() {
      related_pin : "B";
      timing_sense : positive_unate;
      cell_rise(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.000175, 0.0105, 0.01925, 0.042, 0.0735, 0.1155, 0.15575");
        values ( \
          "0.112045, 0.212961, 0.294801, 0.505871, 0.797208, 1.185287, 1.557070", \
          "0.135368, 0.235613, 0.317456, 0.528681, 0.820131, 1.208280, 1.580097", \
          "0.190802, 0.293693, 0.375376, 0.586478, 0.878035, 1.266326, 1.638234", \
          "0.215806, 0.325361, 0.406661, 0.617519, 0.909301, 1.297497, 1.669388", \
          "0.214200, 0.331496, 0.413500, 0.624577, 0.916111, 1.304595, 1.676577", \
          "0.196960, 0.322048, 0.405394, 0.617880, 0.910009, 1.298445, 1.670499", \
          "0.164656, 0.298022, 0.383307, 0.597856, 0.891914, 1.281091, 1.653203");
      }
      rise_transition(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.000175, 0.0105, 0.01925, 0.042, 0.0735, 0.1155, 0.15575");
        values ( \
          "0.054376, 0.222215, 0.369420, 0.752889, 1.284039, 1.992286, 2.671042", \
          "0.054716, 0.222202, 0.369408, 0.752862, 1.284035, 1.992286, 2.671032", \
          "0.066472, 0.224538, 0.370739, 0.753017, 1.284086, 1.992313, 2.671058", \
          "0.080329, 0.230172, 0.373316, 0.755470, 1.285621, 1.992747, 2.671194", \
          "0.091334, 0.239424, 0.378804, 0.758067, 1.287449, 1.994572, 2.672458", \
          "0.101787, 0.250893, 0.386600, 0.763949, 1.290674, 1.996341, 2.674014", \
          "0.112984, 0.265073, 0.396682, 0.772956, 1.298181, 2.000254, 2.676206");
      }
      cell_fall(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.000175, 0.0105, 0.01925, 0.042, 0.0735, 0.1155, 0.15575");
        values ( \
          "0.210370, 0.295364, 0.348544, 0.470132, 0.629063, 0.838390, 1.038605", \
          "0.229023, 0.313826, 0.367002, 0.488614, 0.647557, 0.856891, 1.057108", \
          "0.300398, 0.389179, 0.443535, 0.565957, 0.725038, 0.934375, 1.134584", \
          "0.405571, 0.501347, 0.559029, 0.685987, 0.847525, 1.057756, 1.257915", \
          "0.514969, 0.616892, 0.677409, 0.807944, 0.970811, 1.181810, 1.382990", \
          "0.626427, 0.734554, 0.798191, 0.933374, 1.098842, 1.310691, 1.511824", \
          "0.750780, 0.865555, 0.932732, 1.073719, 1.243430, 1.457730, 1.659629");
      }
      fall_transition(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.000175, 0.0105, 0.01925, 0.042, 0.0735, 0.1155, 0.15575");
        values ( \
          "0.061919, 0.154617, 0.223785, 0.405543, 0.667638, 1.025135, 1.370007", \
          "0.061764, 0.154631, 0.223765, 0.405526, 0.667629, 1.025142, 1.370015", \
          "0.068844, 0.161293, 0.228359, 0.407218, 0.668120, 1.025233, 1.370034", \
          "0.079552, 0.175315, 0.242877, 0.419083, 0.675977, 1.028589, 1.370923", \
          "0.089552, 0.188084, 0.255626, 0.428345, 0.681209, 1.034145, 1.376289", \
          "0.100374, 0.201938, 0.270192, 0.441271, 0.689650, 1.037677, 1.379261", \
          "0.112350, 0.217800, 0.287302, 0.458866, 0.704344, 1.047228, 1.384748");
      }
    }
    max_capacitance : 0.155750;
  }
  cell_leakage_power : 720.320526;
}
}
