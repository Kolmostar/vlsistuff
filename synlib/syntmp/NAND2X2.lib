library(slow) {
    delay_model : table_lookup;
  in_place_swap_mode : match_footprint;
  library_features(report_delay_calculation);
    date : "Mon Oct 21 09:59:52 PDT 2002";
  comment : "Copyright (c) 2002 Artisan Components, Inc.  All Rights Reserved.";
    time_unit : "1ns";
  voltage_unit : "1V";
  current_unit : "1mA";
  pulling_resistance_unit : "1kohm";
  leakage_power_unit : "1pW";
  capacitive_load_unit (1.0,pf);
    nom_process     : 1;
  nom_temperature : 125;
  nom_voltage     : 1.62;
  operating_conditions(slow) {
    process	: 1;
    temperature	: 125;
    voltage	: 1.62;
    tree_type	: balanced_tree;
  }
  default_operating_conditions : slow;
    slew_lower_threshold_pct_fall : 10.0;
  slew_upper_threshold_pct_fall : 90.0;
  slew_lower_threshold_pct_rise : 10.0;
  slew_upper_threshold_pct_rise : 90.0;
  input_threshold_pct_fall      : 50.0;
  input_threshold_pct_rise      : 50.0;
  output_threshold_pct_fall     : 50.0;
  output_threshold_pct_rise     : 50.0;
    default_leakage_power_density	: 0.0;
  slew_derate_from_library	: 1;
  default_cell_leakage_power	: 0.0;
  default_fanout_load	: 1.0;
  default_output_pin_cap	: 0.0;
  default_inout_pin_cap	: 0.0035;
  default_input_pin_cap	: 0.0035;
  default_max_transition	: 4.5;
    lu_table_template(delay_template_7x1) {
    variable_1 : input_net_transition;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(energy_template_7x1) {
    variable_1 : input_transition_time;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(delay_template_7x7) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(energy_template_7x7) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(energy_template_1x7) {
    variable_1 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(energy_template_7x3x3) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    variable_3 : equal_or_opposite_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002");
    index_3 ("1000, 1001, 1002");
  }
  power_lut_template(passive_energy_template_1x7) {
    variable_1 : input_transition_time;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(setup_template_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 1001, 1002");
    index_2 ("1000, 1001, 1002");
  }
  lu_table_template(hold_template_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 1001, 1002");
    index_2 ("1000, 1001, 1002");
  }
  lu_table_template(recovery_template_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 1001, 1002");
    index_2 ("1000, 1001, 1002");
  }
  lu_table_template(removal_template_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 1001, 1002");
    index_2 ("1000, 1001, 1002");
  }
    k_process_cell_leakage_power	: 0;
  k_temp_cell_leakage_power	: 0;
  k_volt_cell_leakage_power	: 0;
  k_process_internal_power	: 0;
  k_temp_internal_power	: 0;
  k_volt_internal_power	: 0;
  k_process_rise_transition	: 1;
  k_temp_rise_transition	: 0;
  k_volt_rise_transition	: 0;
  k_process_fall_transition	: 1;
  k_temp_fall_transition	: 0;
  k_volt_fall_transition	: 0;
  k_process_setup_rise	: 1;
  k_temp_setup_rise	: 0;
  k_volt_setup_rise	: 0;
  k_process_setup_fall	: 1;
  k_temp_setup_fall	: 0;
  k_volt_setup_fall	: 0;
  k_process_hold_rise	: 1;
  k_temp_hold_rise	: 0;
  k_volt_hold_rise	: 0;
  k_process_hold_fall	: 1;
  k_temp_hold_fall	: 0;
  k_volt_hold_fall	: 0;
  k_process_min_pulse_width_high	: 1;
  k_temp_min_pulse_width_high	: 0;
  k_volt_min_pulse_width_high	: 0;
  k_process_min_pulse_width_low	: 1;
  k_temp_min_pulse_width_low	: 0;
  k_volt_min_pulse_width_low	: 0;
  k_process_recovery_rise	: 1;
  k_temp_recovery_rise	: 0;
  k_volt_recovery_rise	: 0;
  k_process_recovery_fall	: 1;
  k_temp_recovery_fall	: 0;
  k_volt_recovery_fall	: 0;
  k_process_cell_rise	: 1;
  k_temp_cell_rise	: 0;
  k_volt_cell_rise	: 0;
  k_process_cell_fall	: 1;
  k_temp_cell_fall	: 0;
  k_volt_cell_fall	: 0;
  k_process_wire_cap	: 0;
  k_temp_wire_cap	: 0;
  k_volt_wire_cap	: 0;
  k_process_wire_res	: 0;
  k_temp_wire_res	: 0;
  k_volt_wire_res	: 0;
  k_process_pin_cap	: 0;
  k_temp_pin_cap	: 0;
  k_volt_pin_cap	: 0;
    output_voltage(GENERAL) {
    vol	: 0.4;
    voh	: VDD - 0.4;
    vomin	: -0.5;
    vomax	: VDD + 0.5;
  }
  input_voltage(CMOS) {
    vil	: 0.3 * VDD;
    vih	: 0.7 * VDD;
    vimin	: -0.5;
    vimax	: VDD + 0.5;
  }
  input_voltage(TTL) {
    vil	: 0.8;
    vih	: 2;
    vimin	: -0.5;
    vimax	: VDD + 0.5;
  }
    wire_load("tsmc18_wl10") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 66.667;
    fanout_length	(1,66.667);
  }
  wire_load("tsmc18_wl20") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 133.334;
    fanout_length	(1,133.334);
  }
  wire_load("tsmc18_wl30") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 200.001;
    fanout_length	(1,200.001);
  }
  wire_load("tsmc18_wl40") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 266.668;
    fanout_length	(1,266.668);
  }
  wire_load("tsmc18_wl50") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 333.335;
    fanout_length	(1,333.335);
  }
    wire_load("ForQA") {
    resistance	: 0;
    capacitance	: 1;
    area	: 1;
    slope	: 1;
    fanout_length(1,0);
    fanout_length(10,0);
  }
    
cell (NAND2X2) { 
  cell_footprint : nand2;
  area : 16.632000;
  pin(A) {
    direction : input;
    capacitance : 0.007769;
  }
  pin(B) {
    direction : input;
    capacitance : 0.008176;
  }
  pin(Y) {
    direction : output;
    capacitance : 0.0;
    function : "(!(A B))";
    internal_power() {
      related_pin : "A";
      rise_power(energy_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0007, 0.042, 0.077, 0.168, 0.294, 0.462, 0.623");
        values ( \
          "0.019477, 0.020203, 0.019593, 0.017452, 0.014249, 0.009893, 0.005694", \
          "0.020626, 0.019907, 0.019407, 0.017474, 0.014390, 0.010104, 0.005939", \
          "0.025857, 0.022031, 0.020503, 0.017751, 0.014415, 0.010045, 0.005857", \
          "0.038119, 0.030791, 0.027610, 0.022357, 0.017457, 0.012123, 0.007447", \
          "0.052558, 0.043341, 0.037976, 0.030296, 0.023398, 0.016555, 0.011007", \
          "0.068920, 0.057714, 0.051492, 0.040899, 0.031911, 0.023287, 0.016615", \
          "0.088753, 0.075449, 0.069135, 0.055023, 0.043781, 0.033073, 0.024994");
      }
      fall_power(energy_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0007, 0.042, 0.077, 0.168, 0.294, 0.462, 0.623");
        values ( \
          "0.002992, 0.002890, 0.003029, 0.003138, 0.003181, 0.003204, 0.003214", \
          "0.002176, 0.002629, 0.002809, 0.002974, 0.003047, 0.003086, 0.003104", \
          "0.006969, 0.004370, 0.003936, 0.003583, 0.003428, 0.003342, 0.003299", \
          "0.018900, 0.011849, 0.009686, 0.007308, 0.005996, 0.005184, 0.004756", \
          "0.033228, 0.022666, 0.018781, 0.013817, 0.010796, 0.008793, 0.007692", \
          "0.049516, 0.036087, 0.030495, 0.022804, 0.017741, 0.014205, 0.012193", \
          "0.069298, 0.053261, 0.045928, 0.035247, 0.027666, 0.022166, 0.018936");
      }
    }
    timing() {
      related_pin : "A";
      timing_sense : negative_unate;
      cell_rise(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0007, 0.042, 0.077, 0.168, 0.294, 0.462, 0.623");
        values ( \
          "0.045317, 0.181130, 0.293890, 0.585865, 0.989609, 1.527748, 2.043408", \
          "0.068948, 0.207447, 0.320472, 0.612927, 1.016952, 1.555254, 2.070994", \
          "0.131053, 0.333414, 0.447421, 0.738175, 1.141652, 1.679775, 2.195466", \
          "0.210716, 0.493462, 0.654613, 0.969044, 1.369462, 1.905528, 2.420154", \
          "0.286600, 0.628843, 0.825942, 1.216155, 1.630818, 2.164042, 2.676856", \
          "0.363223, 0.758116, 0.983840, 1.438922, 1.918641, 2.454717, 2.965446", \
          "0.449252, 0.897473, 1.150723, 1.665360, 2.217238, 2.805907, 3.314828");
      }
      rise_transition(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0007, 0.042, 0.077, 0.168, 0.294, 0.462, 0.623");
        values ( \
          "0.046879, 0.287907, 0.492518, 1.024577, 1.761342, 2.743698, 3.685124", \
          "0.065391, 0.287924, 0.492505, 1.024582, 1.761339, 2.743698, 3.685126", \
          "0.117083, 0.331181, 0.498331, 1.024586, 1.761341, 2.743696, 3.685124", \
          "0.182376, 0.484786, 0.651171, 1.052679, 1.761342, 2.743694, 3.685124", \
          "0.243619, 0.605056, 0.816309, 1.216287, 1.798234, 2.743698, 3.685118", \
          "0.304209, 0.714771, 0.959508, 1.435955, 1.953177, 2.775080, 3.685126", \
          "0.371162, 0.831358, 1.104059, 1.654551, 2.217928, 2.927532, 3.733148");
      }
      cell_fall(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0007, 0.042, 0.077, 0.168, 0.294, 0.462, 0.623");
        values ( \
          "0.036413, 0.133910, 0.215606, 0.427673, 0.721160, 1.112418, 1.487357", \
          "0.048310, 0.155528, 0.237307, 0.449481, 0.743016, 1.134305, 1.509259", \
          "0.059686, 0.238188, 0.336896, 0.549793, 0.842752, 1.233725, 1.608526", \
          "0.048962, 0.302546, 0.444072, 0.722706, 1.023914, 1.413309, 1.787254", \
          "0.023248, 0.336025, 0.509232, 0.853416, 1.218329, 1.618485, 1.991049", \
          "-0.012577, 0.352382, 0.553381, 0.952641, 1.379256, 1.839589, 2.219909", \
          "-0.061038, 0.355763, 0.584754, 1.037867, 1.523949, 2.051013, 2.482100");
      }
      fall_transition(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0007, 0.042, 0.077, 0.168, 0.294, 0.462, 0.623");
        values ( \
          "0.034647, 0.199579, 0.340271, 0.706079, 1.212607, 1.887995, 2.535256", \
          "0.053087, 0.199648, 0.340285, 0.706080, 1.212599, 1.887998, 2.535256", \
          "0.105674, 0.277454, 0.378809, 0.706075, 1.212606, 1.888001, 2.535256", \
          "0.177242, 0.412773, 0.548590, 0.822896, 1.231781, 1.888000, 2.535254", \
          "0.244464, 0.533324, 0.695537, 1.025921, 1.389929, 1.931428, 2.536598", \
          "0.310961, 0.651396, 0.835474, 1.213703, 1.625662, 2.102492, 2.620920", \
          "0.384279, 0.779670, 0.986859, 1.408937, 1.873953, 2.386428, 2.838648");
      }
    }
    internal_power() {
      related_pin : "B";
      rise_power(energy_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0007, 0.042, 0.077, 0.168, 0.294, 0.462, 0.623");
        values ( \
          "0.027698, 0.027982, 0.027321, 0.025194, 0.022030, 0.017721, 0.013556", \
          "0.028367, 0.027896, 0.027292, 0.025266, 0.022170, 0.017900, 0.013754", \
          "0.033642, 0.030305, 0.028781, 0.025915, 0.022474, 0.018040, 0.013824", \
          "0.046264, 0.039404, 0.036238, 0.030886, 0.025857, 0.020410, 0.015665", \
          "0.060995, 0.052417, 0.047100, 0.039225, 0.032128, 0.025120, 0.019468", \
          "0.077677, 0.067662, 0.060987, 0.050370, 0.041059, 0.032180, 0.025353", \
          "0.097889, 0.086330, 0.079849, 0.065256, 0.053533, 0.042428, 0.034111");
      }
      fall_power(energy_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0007, 0.042, 0.077, 0.168, 0.294, 0.462, 0.623");
        values ( \
          "0.002063, 0.002913, 0.003101, 0.003251, 0.003303, 0.003327, 0.003339", \
          "0.001645, 0.002476, 0.002720, 0.002933, 0.003026, 0.003074, 0.003097", \
          "0.005008, 0.003512, 0.003359, 0.003274, 0.003244, 0.003224, 0.003213", \
          "0.016405, 0.010261, 0.008488, 0.006609, 0.005571, 0.004915, 0.004562", \
          "0.030767, 0.020768, 0.017218, 0.012806, 0.010163, 0.008399, 0.007417", \
          "0.047231, 0.034175, 0.028806, 0.021620, 0.016951, 0.013715, 0.011863", \
          "0.067264, 0.051509, 0.044303, 0.033959, 0.026769, 0.021608, 0.018573");
      }
    }
    timing() {
      related_pin : "B";
      timing_sense : negative_unate;
      cell_rise(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0007, 0.042, 0.077, 0.168, 0.294, 0.462, 0.623");
        values ( \
          "0.059999, 0.195503, 0.308158, 0.600093, 1.003825, 1.541965, 2.057629", \
          "0.087230, 0.222296, 0.335104, 0.627276, 1.031170, 1.569402, 2.085108", \
          "0.165919, 0.350718, 0.462990, 0.753382, 1.156514, 1.694380, 2.209928", \
          "0.264760, 0.521118, 0.676086, 0.985152, 1.385119, 1.920808, 2.435195", \
          "0.360077, 0.666224, 0.855191, 1.236082, 1.647286, 2.179976, 2.692460", \
          "0.457178, 0.806208, 1.021463, 1.464514, 1.937340, 2.471439, 2.981703", \
          "0.566911, 0.959060, 1.198763, 1.697978, 2.240812, 2.823819, 3.331995");
      }
      rise_transition(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0007, 0.042, 0.077, 0.168, 0.294, 0.462, 0.623");
        values ( \
          "0.065419, 0.307731, 0.512968, 1.045958, 1.783416, 2.766280, 3.708000", \
          "0.074666, 0.307719, 0.512935, 1.045971, 1.783407, 2.766280, 3.708000", \
          "0.134513, 0.342846, 0.516649, 1.045973, 1.783411, 2.766280, 3.708000", \
          "0.197616, 0.497389, 0.661463, 1.070388, 1.783415, 2.766276, 3.707998", \
          "0.254700, 0.617725, 0.827943, 1.227290, 1.816960, 2.766280, 3.707994", \
          "0.310536, 0.723565, 0.970135, 1.445778, 1.966892, 2.795108, 3.708000", \
          "0.371730, 0.833235, 1.110489, 1.663436, 2.226696, 2.943254, 3.753168");
      }
      cell_fall(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0007, 0.042, 0.077, 0.168, 0.294, 0.462, 0.623");
        values ( \
          "0.043532, 0.141499, 0.223215, 0.435297, 0.728780, 1.120037, 1.494977", \
          "0.053095, 0.157982, 0.239922, 0.452213, 0.745798, 1.137109, 1.512073", \
          "0.056817, 0.216662, 0.311745, 0.527080, 0.820739, 1.212071, 1.587038", \
          "0.033715, 0.261306, 0.388126, 0.649941, 0.955286, 1.346390, 1.721146", \
          "-0.003638, 0.278297, 0.433192, 0.743496, 1.091550, 1.498536, 1.873116", \
          "-0.051923, 0.278085, 0.458646, 0.815406, 1.205921, 1.652947, 2.042406", \
          "-0.115356, 0.262797, 0.469475, 0.874701, 1.311152, 1.801803, 2.223718");
      }
      fall_transition(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0007, 0.042, 0.077, 0.168, 0.294, 0.462, 0.623");
        values ( \
          "0.034229, 0.199606, 0.340231, 0.706058, 1.212611, 1.888002, 2.535250", \
          "0.049307, 0.199621, 0.340284, 0.706078, 1.212607, 1.887996, 2.535256", \
          "0.101549, 0.256104, 0.371435, 0.706780, 1.212610, 1.887999, 2.535254", \
          "0.177403, 0.364768, 0.491986, 0.797303, 1.234962, 1.887997, 2.535252", \
          "0.245928, 0.471410, 0.611323, 0.935321, 1.353034, 1.933889, 2.543220", \
          "0.312013, 0.577242, 0.732402, 1.076279, 1.510241, 2.061634, 2.618360", \
          "0.383474, 0.691701, 0.865732, 1.234127, 1.686401, 2.253932, 2.779592");
      }
    }
    max_capacitance : 0.623000;
  }
  cell_leakage_power : 525.788172;
}
}
