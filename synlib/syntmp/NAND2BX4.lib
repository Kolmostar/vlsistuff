library(slow) {
    delay_model : table_lookup;
  in_place_swap_mode : match_footprint;
  library_features(report_delay_calculation);
    date : "Mon Oct 21 09:59:52 PDT 2002";
  comment : "Copyright (c) 2002 Artisan Components, Inc.  All Rights Reserved.";
    time_unit : "1ns";
  voltage_unit : "1V";
  current_unit : "1mA";
  pulling_resistance_unit : "1kohm";
  leakage_power_unit : "1pW";
  capacitive_load_unit (1.0,pf);
    nom_process     : 1;
  nom_temperature : 125;
  nom_voltage     : 1.62;
  operating_conditions(slow) {
    process	: 1;
    temperature	: 125;
    voltage	: 1.62;
    tree_type	: balanced_tree;
  }
  default_operating_conditions : slow;
    slew_lower_threshold_pct_fall : 10.0;
  slew_upper_threshold_pct_fall : 90.0;
  slew_lower_threshold_pct_rise : 10.0;
  slew_upper_threshold_pct_rise : 90.0;
  input_threshold_pct_fall      : 50.0;
  input_threshold_pct_rise      : 50.0;
  output_threshold_pct_fall     : 50.0;
  output_threshold_pct_rise     : 50.0;
    default_leakage_power_density	: 0.0;
  slew_derate_from_library	: 1;
  default_cell_leakage_power	: 0.0;
  default_fanout_load	: 1.0;
  default_output_pin_cap	: 0.0;
  default_inout_pin_cap	: 0.0035;
  default_input_pin_cap	: 0.0035;
  default_max_transition	: 4.5;
    lu_table_template(delay_template_7x1) {
    variable_1 : input_net_transition;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(energy_template_7x1) {
    variable_1 : input_transition_time;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(delay_template_7x7) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(energy_template_7x7) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(energy_template_1x7) {
    variable_1 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(energy_template_7x3x3) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    variable_3 : equal_or_opposite_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002");
    index_3 ("1000, 1001, 1002");
  }
  power_lut_template(passive_energy_template_1x7) {
    variable_1 : input_transition_time;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(setup_template_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 1001, 1002");
    index_2 ("1000, 1001, 1002");
  }
  lu_table_template(hold_template_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 1001, 1002");
    index_2 ("1000, 1001, 1002");
  }
  lu_table_template(recovery_template_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 1001, 1002");
    index_2 ("1000, 1001, 1002");
  }
  lu_table_template(removal_template_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 1001, 1002");
    index_2 ("1000, 1001, 1002");
  }
    k_process_cell_leakage_power	: 0;
  k_temp_cell_leakage_power	: 0;
  k_volt_cell_leakage_power	: 0;
  k_process_internal_power	: 0;
  k_temp_internal_power	: 0;
  k_volt_internal_power	: 0;
  k_process_rise_transition	: 1;
  k_temp_rise_transition	: 0;
  k_volt_rise_transition	: 0;
  k_process_fall_transition	: 1;
  k_temp_fall_transition	: 0;
  k_volt_fall_transition	: 0;
  k_process_setup_rise	: 1;
  k_temp_setup_rise	: 0;
  k_volt_setup_rise	: 0;
  k_process_setup_fall	: 1;
  k_temp_setup_fall	: 0;
  k_volt_setup_fall	: 0;
  k_process_hold_rise	: 1;
  k_temp_hold_rise	: 0;
  k_volt_hold_rise	: 0;
  k_process_hold_fall	: 1;
  k_temp_hold_fall	: 0;
  k_volt_hold_fall	: 0;
  k_process_min_pulse_width_high	: 1;
  k_temp_min_pulse_width_high	: 0;
  k_volt_min_pulse_width_high	: 0;
  k_process_min_pulse_width_low	: 1;
  k_temp_min_pulse_width_low	: 0;
  k_volt_min_pulse_width_low	: 0;
  k_process_recovery_rise	: 1;
  k_temp_recovery_rise	: 0;
  k_volt_recovery_rise	: 0;
  k_process_recovery_fall	: 1;
  k_temp_recovery_fall	: 0;
  k_volt_recovery_fall	: 0;
  k_process_cell_rise	: 1;
  k_temp_cell_rise	: 0;
  k_volt_cell_rise	: 0;
  k_process_cell_fall	: 1;
  k_temp_cell_fall	: 0;
  k_volt_cell_fall	: 0;
  k_process_wire_cap	: 0;
  k_temp_wire_cap	: 0;
  k_volt_wire_cap	: 0;
  k_process_wire_res	: 0;
  k_temp_wire_res	: 0;
  k_volt_wire_res	: 0;
  k_process_pin_cap	: 0;
  k_temp_pin_cap	: 0;
  k_volt_pin_cap	: 0;
    output_voltage(GENERAL) {
    vol	: 0.4;
    voh	: VDD - 0.4;
    vomin	: -0.5;
    vomax	: VDD + 0.5;
  }
  input_voltage(CMOS) {
    vil	: 0.3 * VDD;
    vih	: 0.7 * VDD;
    vimin	: -0.5;
    vimax	: VDD + 0.5;
  }
  input_voltage(TTL) {
    vil	: 0.8;
    vih	: 2;
    vimin	: -0.5;
    vimax	: VDD + 0.5;
  }
    wire_load("tsmc18_wl10") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 66.667;
    fanout_length	(1,66.667);
  }
  wire_load("tsmc18_wl20") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 133.334;
    fanout_length	(1,133.334);
  }
  wire_load("tsmc18_wl30") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 200.001;
    fanout_length	(1,200.001);
  }
  wire_load("tsmc18_wl40") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 266.668;
    fanout_length	(1,266.668);
  }
  wire_load("tsmc18_wl50") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 333.335;
    fanout_length	(1,333.335);
  }
    wire_load("ForQA") {
    resistance	: 0;
    capacitance	: 1;
    area	: 1;
    slope	: 1;
    fanout_length(1,0);
    fanout_length(10,0);
  }
    
cell (NAND2BX4) { 
  cell_footprint : nand2b;
  area : 26.611200;
  pin(AN) {
    direction : input;
    capacitance : 0.006220;
  }
  pin(B) {
    direction : input;
    capacitance : 0.015338;
  }
  pin(Y) {
    direction : output;
    capacitance : 0.0;
    function : "(!(!AN B))";
    internal_power() {
      related_pin : "AN";
      rise_power(energy_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0014, 0.084, 0.154, 0.336, 0.588, 0.924, 1.246");
        values ( \
          "0.040965, 0.040652, 0.039400, 0.035248, 0.028980, 0.020303, 0.011916", \
          "0.039815, 0.040207, 0.039200, 0.035195, 0.028997, 0.020359, 0.011957", \
          "0.044013, 0.042746, 0.041729, 0.038049, 0.032030, 0.023553, 0.015272", \
          "0.055680, 0.052157, 0.050570, 0.046688, 0.040734, 0.032363, 0.024151", \
          "0.070158, 0.066816, 0.064217, 0.058263, 0.052224, 0.043858, 0.035670", \
          "0.086844, 0.081693, 0.081013, 0.072104, 0.065888, 0.057461, 0.049264", \
          "0.107215, 0.100120, 0.099010, 0.094076, 0.082918, 0.074374, 0.066139");
      }
      fall_power(energy_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0014, 0.084, 0.154, 0.336, 0.588, 0.924, 1.246");
        values ( \
          "0.056480, 0.060540, 0.061006, 0.061317, 0.061462, 0.061530, 0.061526", \
          "0.056623, 0.060583, 0.061108, 0.061488, 0.061687, 0.061761, 0.061759", \
          "0.062884, 0.064174, 0.064647, 0.065121, 0.065352, 0.065480, 0.065542", \
          "0.077236, 0.074345, 0.074320, 0.074662, 0.074891, 0.075033, 0.075106", \
          "0.092176, 0.086984, 0.086736, 0.086616, 0.086759, 0.086877, 0.086949", \
          "0.109134, 0.101632, 0.100990, 0.100534, 0.100548, 0.100631, 0.100687", \
          "0.129695, 0.119679, 0.118632, 0.117960, 0.117558, 0.117563, 0.117594");
      }
    }
    timing() {
      related_pin : "AN";
      timing_sense : positive_unate;
      cell_rise(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0014, 0.084, 0.154, 0.336, 0.588, 0.924, 1.246");
        values ( \
          "0.108085, 0.254137, 0.373316, 0.681421, 1.107274, 1.674817, 2.218626", \
          "0.131993, 0.277517, 0.396862, 0.705221, 1.131197, 1.698803, 2.242643", \
          "0.189955, 0.336971, 0.456150, 0.764574, 1.190741, 1.758490, 2.302408", \
          "0.226490, 0.378840, 0.497251, 0.805463, 1.231479, 1.799142, 2.343045", \
          "0.239942, 0.399851, 0.518194, 0.825761, 1.251763, 1.819386, 2.363182", \
          "0.239740, 0.407893, 0.526890, 0.835159, 1.260927, 1.828578, 2.372408", \
          "0.227914, 0.405170, 0.525354, 0.835583, 1.262135, 1.829639, 2.373473");
      }
      rise_transition(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0014, 0.084, 0.154, 0.336, 0.588, 0.924, 1.246");
        values ( \
          "0.055934, 0.305338, 0.521178, 1.082230, 1.859070, 2.894850, 3.887486", \
          "0.056659, 0.305399, 0.521185, 1.082232, 1.859069, 2.894856, 3.887486", \
          "0.070153, 0.307122, 0.521717, 1.082226, 1.859070, 2.894858, 3.887488", \
          "0.085853, 0.310439, 0.523979, 1.083815, 1.859400, 2.894858, 3.887488", \
          "0.098977, 0.317325, 0.527606, 1.085410, 1.860940, 2.895564, 3.887488", \
          "0.111425, 0.326981, 0.534244, 1.088977, 1.862421, 2.896750, 3.888538", \
          "0.124848, 0.339632, 0.543446, 1.096708, 1.866125, 2.898286, 3.889650");
      }
      cell_fall(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0014, 0.084, 0.154, 0.336, 0.588, 0.924, 1.246");
        values ( \
          "0.131523, 0.243765, 0.326551, 0.539071, 0.832688, 1.223984, 1.598912", \
          "0.158516, 0.270738, 0.353579, 0.566147, 0.859790, 1.251099, 1.626034", \
          "0.258531, 0.375660, 0.458767, 0.671097, 0.964640, 1.355906, 1.730823", \
          "0.371554, 0.496930, 0.581141, 0.793960, 1.087439, 1.478379, 1.853149", \
          "0.473136, 0.606263, 0.691778, 0.904555, 1.198059, 1.589337, 1.963892", \
          "0.572461, 0.713490, 0.800798, 1.014690, 1.308097, 1.699278, 2.074269", \
          "0.680895, 0.830506, 0.920370, 1.136546, 1.430696, 1.821763, 2.196563");
      }
      fall_transition(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0014, 0.084, 0.154, 0.336, 0.588, 0.924, 1.246");
        values ( \
          "0.053473, 0.210628, 0.348354, 0.713076, 1.219280, 1.894128, 2.540814", \
          "0.053641, 0.210666, 0.348358, 0.713067, 1.219285, 1.894135, 2.540810", \
          "0.066051, 0.215750, 0.350010, 0.713124, 1.219288, 1.894133, 2.540812", \
          "0.082839, 0.226672, 0.356896, 0.716521, 1.220332, 1.894138, 2.540812", \
          "0.096487, 0.237865, 0.363857, 0.718846, 1.223244, 1.896071, 2.541404", \
          "0.110211, 0.250908, 0.373238, 0.722946, 1.224931, 1.898297, 2.543486", \
          "0.124968, 0.266562, 0.385696, 0.730596, 1.229012, 1.900166, 2.545598");
      }
    }
    internal_power() {
      related_pin : "B";
      rise_power(energy_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0014, 0.084, 0.154, 0.336, 0.588, 0.924, 1.246");
        values ( \
          "0.042290, 0.041709, 0.040317, 0.035994, 0.029626, 0.020977, 0.012630", \
          "0.043527, 0.041764, 0.040449, 0.036296, 0.030053, 0.021473, 0.013159", \
          "0.053578, 0.046598, 0.043472, 0.037650, 0.030710, 0.021797, 0.013338", \
          "0.077788, 0.064254, 0.057941, 0.047302, 0.037282, 0.026403, 0.016917", \
          "0.106319, 0.089144, 0.078959, 0.063421, 0.049398, 0.035500, 0.024261", \
          "0.138621, 0.118801, 0.105081, 0.084932, 0.066618, 0.049099, 0.035588", \
          "0.177750, 0.154896, 0.142107, 0.113690, 0.090689, 0.068858, 0.052464");
      }
      fall_power(energy_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0014, 0.084, 0.154, 0.336, 0.588, 0.924, 1.246");
        values ( \
          "0.014265, 0.017517, 0.017866, 0.018110, 0.018203, 0.018259, 0.018281", \
          "0.013767, 0.016787, 0.017297, 0.017703, 0.017872, 0.017960, 0.018002", \
          "0.022266, 0.018913, 0.018646, 0.018445, 0.018349, 0.018285, 0.018250", \
          "0.044332, 0.032203, 0.028545, 0.024902, 0.022867, 0.021574, 0.020877", \
          "0.072184, 0.052438, 0.045530, 0.036810, 0.031700, 0.028284, 0.026382", \
          "0.104078, 0.078260, 0.067793, 0.053771, 0.044684, 0.038445, 0.034873", \
          "0.142888, 0.111700, 0.097611, 0.077525, 0.063479, 0.053538, 0.047699");
      }
    }
    timing() {
      related_pin : "B";
      timing_sense : negative_unate;
      cell_rise(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0014, 0.084, 0.154, 0.336, 0.588, 0.924, 1.246");
        values ( \
          "0.058471, 0.202514, 0.321636, 0.629746, 1.055602, 1.623147, 2.166964", \
          "0.086284, 0.229417, 0.348645, 0.656971, 1.082984, 1.650618, 2.194475", \
          "0.166814, 0.358922, 0.476790, 0.783232, 1.208432, 1.775674, 2.319360", \
          "0.269343, 0.534931, 0.694490, 1.015321, 1.437234, 2.002236, 2.544731", \
          "0.368847, 0.685144, 0.879769, 1.271245, 1.699745, 2.261618, 2.802157", \
          "0.470536, 0.830309, 1.051949, 1.507481, 1.993064, 2.553439, 3.091655", \
          "0.585673, 0.989131, 1.235722, 1.749169, 2.306703, 2.906513, 3.442388");
      }
      rise_transition(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0014, 0.084, 0.154, 0.336, 0.588, 0.924, 1.246");
        values ( \
          "0.069725, 0.324889, 0.540520, 1.101708, 1.878900, 2.915036, 3.907874", \
          "0.079555, 0.324843, 0.540504, 1.101703, 1.878908, 2.915034, 3.907876", \
          "0.140829, 0.355422, 0.542328, 1.101703, 1.878909, 2.915032, 3.907876", \
          "0.204597, 0.510230, 0.678857, 1.119480, 1.878904, 2.915034, 3.907876", \
          "0.261607, 0.632184, 0.848359, 1.264313, 1.902405, 2.915034, 3.907878", \
          "0.317241, 0.738720, 0.992829, 1.482477, 2.037624, 2.932624, 3.907870", \
          "0.377799, 0.848470, 1.134681, 1.704374, 2.285016, 3.061916, 3.936568");
      }
      cell_fall(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0014, 0.084, 0.154, 0.336, 0.588, 0.924, 1.246");
        values ( \
          "0.043666, 0.145998, 0.228377, 0.440903, 0.734539, 1.125856, 1.500787", \
          "0.052069, 0.160784, 0.243483, 0.456307, 0.750069, 1.141436, 1.516397", \
          "0.052957, 0.215962, 0.312017, 0.528578, 0.822810, 1.214392, 1.589444", \
          "0.025983, 0.257757, 0.385569, 0.648803, 0.955133, 1.346908, 1.721948", \
          "-0.015372, 0.271793, 0.428008, 0.739932, 1.089133, 1.497017, 1.872122", \
          "-0.067971, 0.268230, 0.450451, 0.809269, 1.201142, 1.649186, 2.039327", \
          "-0.136514, 0.248762, 0.457500, 0.865398, 1.303567, 1.795430, 2.218100");
      }
      fall_transition(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.0014, 0.084, 0.154, 0.336, 0.588, 0.924, 1.246");
        values ( \
          "0.036420, 0.206676, 0.347318, 0.713033, 1.219286, 1.894135, 2.540810", \
          "0.049331, 0.206397, 0.347263, 0.713035, 1.219284, 1.894135, 2.540812", \
          "0.097299, 0.259542, 0.376695, 0.713660, 1.219286, 1.894131, 2.540812", \
          "0.171566, 0.365826, 0.494852, 0.802381, 1.241222, 1.894132, 2.540814", \
          "0.239582, 0.471846, 0.613124, 0.939005, 1.358032, 1.939619, 2.548730", \
          "0.305278, 0.577644, 0.733869, 1.079223, 1.514206, 2.066508, 2.623498", \
          "0.376811, 0.692377, 0.867356, 1.236761, 1.689696, 2.257806, 2.783986");
      }
    }
    max_capacitance : 1.246000;
  }
  cell_leakage_power : 1517.224446;
}
}
