library(slow) {
    delay_model : table_lookup;
  in_place_swap_mode : match_footprint;
  library_features(report_delay_calculation);
    date : "Mon Oct 21 09:59:52 PDT 2002";
  comment : "Copyright (c) 2002 Artisan Components, Inc.  All Rights Reserved.";
    time_unit : "1ns";
  voltage_unit : "1V";
  current_unit : "1mA";
  pulling_resistance_unit : "1kohm";
  leakage_power_unit : "1pW";
  capacitive_load_unit (1.0,pf);
    nom_process     : 1;
  nom_temperature : 125;
  nom_voltage     : 1.62;
  operating_conditions(slow) {
    process	: 1;
    temperature	: 125;
    voltage	: 1.62;
    tree_type	: balanced_tree;
  }
  default_operating_conditions : slow;
    slew_lower_threshold_pct_fall : 10.0;
  slew_upper_threshold_pct_fall : 90.0;
  slew_lower_threshold_pct_rise : 10.0;
  slew_upper_threshold_pct_rise : 90.0;
  input_threshold_pct_fall      : 50.0;
  input_threshold_pct_rise      : 50.0;
  output_threshold_pct_fall     : 50.0;
  output_threshold_pct_rise     : 50.0;
    default_leakage_power_density	: 0.0;
  slew_derate_from_library	: 1;
  default_cell_leakage_power	: 0.0;
  default_fanout_load	: 1.0;
  default_output_pin_cap	: 0.0;
  default_inout_pin_cap	: 0.0035;
  default_input_pin_cap	: 0.0035;
  default_max_transition	: 4.5;
    lu_table_template(delay_template_7x1) {
    variable_1 : input_net_transition;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(energy_template_7x1) {
    variable_1 : input_transition_time;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(delay_template_7x7) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(energy_template_7x7) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(energy_template_1x7) {
    variable_1 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(energy_template_7x3x3) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    variable_3 : equal_or_opposite_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002");
    index_3 ("1000, 1001, 1002");
  }
  power_lut_template(passive_energy_template_1x7) {
    variable_1 : input_transition_time;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(setup_template_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 1001, 1002");
    index_2 ("1000, 1001, 1002");
  }
  lu_table_template(hold_template_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 1001, 1002");
    index_2 ("1000, 1001, 1002");
  }
  lu_table_template(recovery_template_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 1001, 1002");
    index_2 ("1000, 1001, 1002");
  }
  lu_table_template(removal_template_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 1001, 1002");
    index_2 ("1000, 1001, 1002");
  }
    k_process_cell_leakage_power	: 0;
  k_temp_cell_leakage_power	: 0;
  k_volt_cell_leakage_power	: 0;
  k_process_internal_power	: 0;
  k_temp_internal_power	: 0;
  k_volt_internal_power	: 0;
  k_process_rise_transition	: 1;
  k_temp_rise_transition	: 0;
  k_volt_rise_transition	: 0;
  k_process_fall_transition	: 1;
  k_temp_fall_transition	: 0;
  k_volt_fall_transition	: 0;
  k_process_setup_rise	: 1;
  k_temp_setup_rise	: 0;
  k_volt_setup_rise	: 0;
  k_process_setup_fall	: 1;
  k_temp_setup_fall	: 0;
  k_volt_setup_fall	: 0;
  k_process_hold_rise	: 1;
  k_temp_hold_rise	: 0;
  k_volt_hold_rise	: 0;
  k_process_hold_fall	: 1;
  k_temp_hold_fall	: 0;
  k_volt_hold_fall	: 0;
  k_process_min_pulse_width_high	: 1;
  k_temp_min_pulse_width_high	: 0;
  k_volt_min_pulse_width_high	: 0;
  k_process_min_pulse_width_low	: 1;
  k_temp_min_pulse_width_low	: 0;
  k_volt_min_pulse_width_low	: 0;
  k_process_recovery_rise	: 1;
  k_temp_recovery_rise	: 0;
  k_volt_recovery_rise	: 0;
  k_process_recovery_fall	: 1;
  k_temp_recovery_fall	: 0;
  k_volt_recovery_fall	: 0;
  k_process_cell_rise	: 1;
  k_temp_cell_rise	: 0;
  k_volt_cell_rise	: 0;
  k_process_cell_fall	: 1;
  k_temp_cell_fall	: 0;
  k_volt_cell_fall	: 0;
  k_process_wire_cap	: 0;
  k_temp_wire_cap	: 0;
  k_volt_wire_cap	: 0;
  k_process_wire_res	: 0;
  k_temp_wire_res	: 0;
  k_volt_wire_res	: 0;
  k_process_pin_cap	: 0;
  k_temp_pin_cap	: 0;
  k_volt_pin_cap	: 0;
    output_voltage(GENERAL) {
    vol	: 0.4;
    voh	: VDD - 0.4;
    vomin	: -0.5;
    vomax	: VDD + 0.5;
  }
  input_voltage(CMOS) {
    vil	: 0.3 * VDD;
    vih	: 0.7 * VDD;
    vimin	: -0.5;
    vimax	: VDD + 0.5;
  }
  input_voltage(TTL) {
    vil	: 0.8;
    vih	: 2;
    vimin	: -0.5;
    vimax	: VDD + 0.5;
  }
    wire_load("tsmc18_wl10") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 66.667;
    fanout_length	(1,66.667);
  }
  wire_load("tsmc18_wl20") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 133.334;
    fanout_length	(1,133.334);
  }
  wire_load("tsmc18_wl30") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 200.001;
    fanout_length	(1,200.001);
  }
  wire_load("tsmc18_wl40") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 266.668;
    fanout_length	(1,266.668);
  }
  wire_load("tsmc18_wl50") {
    resistance	: 8.5e-8;
    capacitance	: 1.5e-4;
    area	: 0.7;
    slope	: 333.335;
    fanout_length	(1,333.335);
  }
    wire_load("ForQA") {
    resistance	: 0;
    capacitance	: 1;
    area	: 1;
    slope	: 1;
    fanout_length(1,0);
    fanout_length(10,0);
  }
    
cell (NAND2X1) { 
  cell_footprint : nand2;
  area : 9.979200;
  pin(A) {
    direction : input;
    capacitance : 0.004032;
  }
  pin(B) {
    direction : input;
    capacitance : 0.003746;
  }
  pin(Y) {
    direction : output;
    capacitance : 0.0;
    function : "(!(A B))";
    internal_power() {
      related_pin : "A";
      rise_power(energy_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.00035, 0.021, 0.0385, 0.084, 0.147, 0.231, 0.3115");
        values ( \
          "0.010410, 0.010907, 0.010604, 0.009539, 0.007939, 0.005762, 0.003662", \
          "0.010872, 0.010721, 0.010485, 0.009531, 0.007994, 0.005855, 0.003773", \
          "0.013462, 0.011655, 0.010932, 0.009604, 0.007964, 0.005796, 0.003710", \
          "0.019361, 0.015839, 0.014299, 0.011756, 0.009367, 0.006745, 0.004432", \
          "0.026331, 0.021845, 0.019276, 0.015540, 0.012179, 0.008830, 0.006101", \
          "0.034244, 0.028830, 0.025599, 0.020625, 0.016242, 0.012028, 0.008755", \
          "0.043846, 0.037404, 0.034308, 0.027421, 0.021932, 0.016700, 0.012745");
      }
      fall_power(energy_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.00035, 0.021, 0.0385, 0.084, 0.147, 0.231, 0.3115");
        values ( \
          "0.001494, 0.001590, 0.001661, 0.001716, 0.001739, 0.001750, 0.001756", \
          "0.001299, 0.001443, 0.001541, 0.001630, 0.001669, 0.001690, 0.001700", \
          "0.003386, 0.002215, 0.002031, 0.001890, 0.001831, 0.001798, 0.001782", \
          "0.009103, 0.005759, 0.004740, 0.003632, 0.003026, 0.002654, 0.002458", \
          "0.016012, 0.010941, 0.009081, 0.006720, 0.005294, 0.004354, 0.003839", \
          "0.023886, 0.017395, 0.014700, 0.011009, 0.008597, 0.006920, 0.005969", \
          "0.033461, 0.025675, 0.022122, 0.016971, 0.013335, 0.010710, 0.009174");
      }
    }
    timing() {
      related_pin : "A";
      timing_sense : negative_unate;
      cell_rise(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.00035, 0.021, 0.0385, 0.084, 0.147, 0.231, 0.3115");
        values ( \
          "0.049291, 0.189634, 0.306102, 0.607658, 1.024632, 1.580400, 2.112949", \
          "0.073809, 0.215767, 0.332552, 0.634654, 1.051932, 1.607878, 2.140514", \
          "0.138569, 0.342273, 0.459155, 0.759626, 1.176439, 1.732260, 2.264878", \
          "0.221070, 0.505970, 0.669425, 0.990207, 1.403950, 1.957761, 2.489352", \
          "0.299394, 0.643909, 0.844169, 1.240499, 1.665097, 2.216027, 2.745815", \
          "0.378267, 0.775393, 1.004843, 1.467587, 1.954980, 2.506500, 3.034174", \
          "0.466646, 0.917037, 1.174392, 1.698130, 2.259268, 2.857660, 3.383355");
      }
      rise_transition(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.00035, 0.021, 0.0385, 0.084, 0.147, 0.231, 0.3115");
        values ( \
          "0.051974, 0.300761, 0.512105, 1.061621, 1.822524, 2.837076, 3.809354", \
          "0.069271, 0.300794, 0.512085, 1.061607, 1.822525, 2.837076, 3.809358", \
          "0.123950, 0.340173, 0.516269, 1.061615, 1.822525, 2.837076, 3.809360", \
          "0.191288, 0.496710, 0.664957, 1.084938, 1.822522, 2.837076, 3.809358", \
          "0.254335, 0.619790, 0.833978, 1.241513, 1.852607, 2.837068, 3.809358", \
          "0.316588, 0.731350, 0.980311, 1.463583, 1.998991, 2.860898, 3.809360", \
          "0.385200, 0.849529, 1.127410, 1.686806, 2.258544, 3.002326, 3.846626");
      }
      cell_fall(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.00035, 0.021, 0.0385, 0.084, 0.147, 0.231, 0.3115");
        values ( \
          "0.039165, 0.139248, 0.223112, 0.440768, 0.741977, 1.143532, 1.528338", \
          "0.052110, 0.160808, 0.244770, 0.462552, 0.763827, 1.165418, 1.550242", \
          "0.065626, 0.244913, 0.344746, 0.562762, 0.863507, 1.264812, 1.649499", \
          "0.057060, 0.311630, 0.454925, 0.737219, 1.044518, 1.444294, 1.828156", \
          "0.032923, 0.346819, 0.522227, 0.871176, 1.241148, 1.649324, 2.031827", \
          "-0.001612, 0.364607, 0.568142, 0.973109, 1.405805, 1.872674, 2.260543", \
          "-0.048884, 0.369375, 0.601226, 1.060861, 1.554117, 2.088761, 2.526037");
      }
      fall_transition(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.00035, 0.021, 0.0385, 0.084, 0.147, 0.231, 0.3115");
        values ( \
          "0.037629, 0.207343, 0.351677, 0.727155, 1.247056, 1.940280, 2.604622", \
          "0.056276, 0.207355, 0.351702, 0.727146, 1.247048, 1.940280, 2.604622", \
          "0.110946, 0.283452, 0.387277, 0.727153, 1.247056, 1.940280, 2.604622", \
          "0.185142, 0.421134, 0.558579, 0.837620, 1.262958, 1.940280, 2.604620", \
          "0.254651, 0.543333, 0.707712, 1.042577, 1.414550, 1.977688, 2.605006", \
          "0.323225, 0.662995, 0.849407, 1.233013, 1.650982, 2.141444, 2.680556", \
          "0.398649, 0.792956, 1.002559, 1.430824, 1.902592, 2.423050, 2.889924");
      }
    }
    internal_power() {
      related_pin : "B";
      rise_power(energy_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.00035, 0.021, 0.0385, 0.084, 0.147, 0.231, 0.3115");
        values ( \
          "0.014127, 0.014141, 0.013788, 0.012708, 0.011118, 0.008959, 0.006875", \
          "0.014435, 0.014150, 0.013814, 0.012765, 0.011199, 0.009054, 0.006976", \
          "0.016990, 0.015357, 0.014591, 0.013134, 0.011390, 0.009154, 0.007036", \
          "0.023088, 0.019741, 0.018187, 0.015546, 0.013043, 0.010320, 0.007945", \
          "0.030214, 0.025986, 0.023420, 0.019556, 0.016061, 0.012590, 0.009780", \
          "0.038290, 0.033406, 0.029938, 0.024918, 0.020350, 0.015978, 0.012604", \
          "0.048082, 0.042435, 0.039244, 0.032090, 0.026345, 0.020896, 0.016803");
      }
      fall_power(energy_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.00035, 0.021, 0.0385, 0.084, 0.147, 0.231, 0.3115");
        values ( \
          "0.001351, 0.001637, 0.001717, 0.001779, 0.001800, 0.001811, 0.001816", \
          "0.001115, 0.001462, 0.001556, 0.001639, 0.001675, 0.001694, 0.001703", \
          "0.002741, 0.002011, 0.001914, 0.001840, 0.001806, 0.001784, 0.001773", \
          "0.008190, 0.005255, 0.004393, 0.003465, 0.002944, 0.002613, 0.002434", \
          "0.015110, 0.010297, 0.008584, 0.006445, 0.005155, 0.004291, 0.003809", \
          "0.023067, 0.016748, 0.014151, 0.010672, 0.008413, 0.006843, 0.005943", \
          "0.032763, 0.025106, 0.021608, 0.016602, 0.013124, 0.010628, 0.009159");
      }
    }
    timing() {
      related_pin : "B";
      timing_sense : negative_unate;
      cell_rise(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.00035, 0.021, 0.0385, 0.084, 0.147, 0.231, 0.3115");
        values ( \
          "0.062006, 0.201351, 0.317598, 0.619010, 1.035929, 1.591674, 2.124216", \
          "0.089633, 0.228414, 0.344742, 0.646315, 1.063348, 1.619161, 2.151733", \
          "0.171274, 0.357522, 0.472883, 0.772669, 1.188894, 1.744293, 2.276678", \
          "0.272576, 0.531747, 0.688919, 1.004498, 1.417580, 1.970809, 2.502029", \
          "0.369870, 0.679471, 0.871518, 1.258400, 1.679719, 2.229948, 2.759277", \
          "0.468815, 0.821603, 1.040576, 1.491178, 1.971605, 2.521340, 3.048436", \
          "0.580476, 0.976574, 1.220475, 1.728733, 2.280767, 2.873724, 3.398627");
      }
      rise_transition(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.00035, 0.021, 0.0385, 0.084, 0.147, 0.231, 0.3115");
        values ( \
          "0.070605, 0.321017, 0.532967, 1.083424, 1.845025, 2.860090, 3.832670", \
          "0.078593, 0.321006, 0.532976, 1.083429, 1.845026, 2.860090, 3.832670", \
          "0.141133, 0.352732, 0.535469, 1.083431, 1.845028, 2.860092, 3.832668", \
          "0.206772, 0.509062, 0.675076, 1.103528, 1.845030, 2.860092, 3.832668", \
          "0.265719, 0.632474, 0.845424, 1.253259, 1.872194, 2.860086, 3.832666", \
          "0.323290, 0.740545, 0.990975, 1.473280, 2.013550, 2.881786, 3.832670", \
          "0.386314, 0.852042, 1.134224, 1.695666, 2.267302, 3.018958, 3.867518");
      }
      cell_fall(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.00035, 0.021, 0.0385, 0.084, 0.147, 0.231, 0.3115");
        values ( \
          "0.044662, 0.144643, 0.228461, 0.446079, 0.747270, 1.148816, 1.533618", \
          "0.055079, 0.161257, 0.245263, 0.463056, 0.764330, 1.165920, 1.550742", \
          "0.061182, 0.221465, 0.317884, 0.538111, 0.839415, 1.240997, 1.625808", \
          "0.040205, 0.268316, 0.396660, 0.662612, 0.974135, 1.375463, 1.760050", \
          "0.004328, 0.286995, 0.443688, 0.758509, 1.112593, 1.527745, 1.912138", \
          "-0.042720, 0.288209, 0.470849, 0.832586, 1.229483, 1.684644, 2.081644", \
          "-0.105004, 0.274263, 0.483330, 0.894096, 1.337352, 1.836520, 2.266283");
      }
      fall_transition(delay_template_7x7) {
        index_1 ("0.05, 0.15, 0.6, 1.4, 2.3, 3.3, 4.5");
        index_2 ("0.00035, 0.021, 0.0385, 0.084, 0.147, 0.231, 0.3115");
        values ( \
          "0.037689, 0.207331, 0.351662, 0.727156, 1.247056, 1.940279, 2.604622", \
          "0.051987, 0.207350, 0.351706, 0.727150, 1.247045, 1.940280, 2.604622", \
          "0.105724, 0.262511, 0.380619, 0.727521, 1.247052, 1.940279, 2.604622", \
          "0.183129, 0.372331, 0.502040, 0.814130, 1.266692, 1.940280, 2.604622", \
          "0.253152, 0.480022, 0.622408, 0.953301, 1.380543, 1.981473, 2.610492", \
          "0.320722, 0.587222, 0.744624, 1.095345, 1.539013, 2.104500, 2.680494", \
          "0.393638, 0.703160, 0.879329, 1.254428, 1.716458, 2.296980, 2.836256");
      }
    }
    max_capacitance : 0.311500;
  }
  cell_leakage_power : 258.251166;
}
}
